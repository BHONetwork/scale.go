{
  "AliveContractInfo": {
    "type": "struct",
    "type_mapping": [
      [
        "trieId",
        "TrieId"
      ],
      [
        "storageSize",
        "u32"
      ],
      [
        "emptyPairCount",
        "u32"
      ],
      [
        "totalPairCount",
        "u32"
      ],
      [
        "codeHash",
        "CodeHash"
      ],
      [
        "rentAllowance",
        "Balance"
      ],
      [
        "deductBlock",
        "BlockNumber"
      ],
      [
        "lastWrite",
        "Option<BlockNumber>"
      ]
    ]
  },
  "CodeHash": "Hash",
  "ContractCallRequest": {
    "type": "struct",
    "type_mapping": [
      [
        "origin",
        "AccountId"
      ],
      [
        "dest",
        "AccountId"
      ],
      [
        "value",
        "Balance"
      ],
      [
        "gasLimit",
        "u64"
      ],
      [
        "inputData",
        "Bytes"
      ]
    ]
  },
  "ContractExecResultSuccessTo255": {
    "type": "struct",
    "type_mapping": [
      [
        "status",
        "u8"
      ],
      [
        "data",
        "Raw"
      ]
    ]
  },
  "ContractExecResultTo255": {
    "type": "enum",
    "type_mapping": [
      [
        "Success",
        "ContractExecResultSuccessTo255"
      ],
      [
        "Error",
        "Null"
      ],
      [
        "gasConsumed",
        "u64"
      ]
    ]
  },
  "ContractExecResultSuccess": {
    "type": "struct",
    "type_mapping": [
      [
        "flags",
        "u32"
      ],
      [
        "data",
        "Bytes"
      ],
      [
        "gasConsumed",
        "u64"
      ]
    ]
  },
  "ContractExecResult": {
    "type": "enum",
    "type_mapping": [
      [
        "Success",
        "ContractExecResultSuccess"
      ],
      [
        "Error",
        "Null"
      ]
    ]
  },
  "ContractInfo": {
    "type": "enum",
    "type_mapping": [
      [
        "Alive",
        "AliveContractInfo"
      ],
      [
        "Tombstone",
        "TombstoneContractInfo"
      ]
    ]
  },
  "ContractStorageKey": "[u8; 32]",
  "Gas": "u64",
  "PrefabWasmModule": {
    "type": "struct",
    "type_mapping": [
      [
        "scheduleVersion",
        "Compact<u32>"
      ],
      [
        "initial",
        "Compact<u32>"
      ],
      [
        "maximum",
        "Compact<u32>"
      ],
      [
        "_reserved",
        "PrefabWasmModuleReserved"
      ],
      [
        "code",
        "Bytes"
      ]
    ]
  },
  "PrefabWasmModuleReserved": "Option<Null>",
  "ScheduleTo212": {
    "type": "struct",
    "type_mapping": [
      [
        "version",
        "u32"
      ],
      [
        "putCodePerByteCost",
        "Gas"
      ],
      [
        "growMemCost",
        "Gas"
      ],
      [
        "regularOpCost",
        "Gas"
      ],
      [
        "returnDataPerByteCost",
        "Gas"
      ],
      [
        "eventDataPerByteCost",
        "Gas"
      ],
      [
        "eventPerTopicCost",
        "Gas"
      ],
      [
        "eventBaseCost",
        "Gas"
      ],
      [
        "sandboxDataReadCost",
        "Gas"
      ],
      [
        "sandboxDataWriteCost",
        "Gas"
      ],
      [
        "maxEventTopics",
        "u32"
      ],
      [
        "maxStackHeight",
        "u32"
      ],
      [
        "maxMemoryPages",
        "u32"
      ],
      [
        "enablePrintln",
        "bool"
      ],
      [
        "maxSubjectLen",
        "u32"
      ]
    ]
  },
  "ScheduleTo258": {
    "type": "struct",
    "type_mapping": [
      [
        "version",
        "u32"
      ],
      [
        "putCodePerByteCost",
        "Gas"
      ],
      [
        "growMemCost",
        "Gas"
      ],
      [
        "regularOpCost",
        "Gas"
      ],
      [
        "returnDataPerByteCost",
        "Gas"
      ],
      [
        "eventDataPerByteCost",
        "Gas"
      ],
      [
        "eventPerTopicCost",
        "Gas"
      ],
      [
        "eventBaseCost",
        "Gas"
      ],
      [
        "sandboxDataReadCost",
        "Gas"
      ],
      [
        "sandboxDataWriteCost",
        "Gas"
      ],
      [
        "transferCost",
        "Gas"
      ],
      [
        "maxEventTopics",
        "u32"
      ],
      [
        "maxStackHeight",
        "u32"
      ],
      [
        "maxMemoryPages",
        "u32"
      ],
      [
        "enablePrintln",
        "bool"
      ],
      [
        "maxSubjectLen",
        "u32"
      ]
    ]
  },
  "Schedule": {
    "type": "struct",
    "type_mapping": [
      [
        "version",
        "u32"
      ],
      [
        "instructionWeights",
        "InstructionWeights"
      ],
      [
        "hostFnWeights",
        "HostFnWeights"
      ],
      [
        "enablePrintln",
        "bool"
      ],
      [
        "maxEventTopics",
        "u32"
      ],
      [
        "maxStackHeight",
        "u32"
      ],
      [
        "maxMemoryPages",
        "u32"
      ],
      [
        "maxTableSize",
        "u32"
      ],
      [
        "maxSubjectLen",
        "u32"
      ],
      [
        "maxCodeSize",
        "u32"
      ]
    ]
  },
  "SeedOf": "Hash",
  "TombstoneContractInfo": "Hash",
  "TrieId": "Bytes",
  "OriginCaller": {
    "type": "enum",
    "type_mapping": [
      [
        "System",
        "SystemOrigin"
      ]
    ]
  },
  "PalletsOrigin": "OriginCaller",
  "HostFnWeights": {
    "type": "struct",
    "type_mapping": [
      [
        "caller",
        "Weight"
      ],
      [
        "address",
        "Weight"
      ],
      [
        "gasLeft",
        "Weight"
      ],
      [
        "balance",
        "Weight"
      ],
      [
        "valueTransferred",
        "Weight"
      ],
      [
        "minimumBalance",
        "Weight"
      ],
      [
        "tombstoneDeposit",
        "Weight"
      ],
      [
        "rentAllowance",
        "Weight"
      ],
      [
        "blockNumber",
        "Weight"
      ],
      [
        "now",
        "Weight"
      ],
      [
        "weightToFee",
        "Weight"
      ],
      [
        "gas",
        "Weight"
      ],
      [
        "input",
        "Weight"
      ],
      [
        "inputPerByte",
        "Weight"
      ],
      [
        "return",
        "Weight"
      ],
      [
        "returnPerByte",
        "Weight"
      ],
      [
        "terminate",
        "Weight"
      ],
      [
        "restoreTo",
        "Weight"
      ],
      [
        "restoreToPerDelta",
        "Weight"
      ],
      [
        "random",
        "Weight"
      ],
      [
        "depositEvent",
        "Weight"
      ],
      [
        "depositEventPerTopic",
        "Weight"
      ],
      [
        "depositEventPerByte",
        "Weight"
      ],
      [
        "setRentAllowance",
        "Weight"
      ],
      [
        "setStorage",
        "Weight"
      ],
      [
        "setStoragePerByte",
        "Weight"
      ],
      [
        "clearStorage",
        "Weight"
      ],
      [
        "getStorage",
        "Weight"
      ],
      [
        "getStoragePerByte",
        "Weight"
      ],
      [
        "transfer",
        "Weight"
      ],
      [
        "call",
        "Weight"
      ],
      [
        "callTransferSurcharge",
        "Weight"
      ],
      [
        "callPerInputByte",
        "Weight"
      ],
      [
        "callPerOutputByte",
        "Weight"
      ],
      [
        "instantiate",
        "Weight"
      ],
      [
        "instantiatePerInputByte",
        "Weight"
      ],
      [
        "instantiatePerOutputByte",
        "Weight"
      ],
      [
        "hashSha2256",
        "Weight"
      ],
      [
        "hashSha2256PerByte",
        "Weight"
      ],
      [
        "hashKeccak256",
        "Weight"
      ],
      [
        "hashKeccak256PerByte",
        "Weight"
      ],
      [
        "hashBlake2256",
        "Weight"
      ],
      [
        "hashBlake2256PerByte",
        "Weight"
      ],
      [
        "hashBlake2128",
        "Weight"
      ],
      [
        "hashBlake2128PerByte",
        "Weight"
      ]
    ]
  },
  "InstructionWeights": {
    "type": "struct",
    "type_mapping": [
      [
        "growMem",
        "Weight"
      ],
      [
        "regular",
        "Weight"
      ]
    ]
  },
  "ContractProject": {
    "type": "struct",
    "type_mapping": [
      [
        "metadataVersion",
        "Text"
      ],
      [
        "source",
        "ContractProjectSource"
      ],
      [
        "contract",
        "ContractProjectContract"
      ],
      [
        "types",
        "Vec<SiType>"
      ],
      [
        "spec",
        "ContractContractSpec"
      ]
    ]
  },
  "ContractProjectContract": {
    "type": "struct",
    "type_mapping": [
      [
        "name",
        "Text"
      ],
      [
        "version",
        "Text"
      ],
      [
        "authors",
        "Vec<Text>"
      ],
      [
        "description",
        "Option<Text>"
      ],
      [
        "documentation",
        "Option<Text>"
      ],
      [
        "repository",
        "Option<Text>"
      ],
      [
        "homepage",
        "Option<Text>"
      ],
      [
        "license",
        "Option<Text>"
      ]
    ]
  },
  "ContractProjectSource": {
    "type": "struct",
    "type_mapping": [
      [
        "hash",
        "[u8; 32]"
      ],
      [
        "language",
        "Text"
      ],
      [
        "compiler",
        "Text"
      ]
    ]
  },
  "RawOrigin": {
    "type": "enum",
    "type_mapping": [
      [
        "Root",
        "Null"
      ],
      [
        "Signed",
        "AccountId"
      ],
      [
        "None",
        "Null"
      ]
    ]
  },
  "SystemOrigin": "RawOrigin",
  "CollectiveOrigin": {
    "type": "enum",
    "type_mapping": [
      [
        "Members",
        "(MemberCount, MemberCount)"
      ],
      [
        "Member",
        "AccountId"
      ]
    ]
  },
  "SiField": {
    "type": "struct",
    "type_mapping": [
      [
        "name",
        "Option<Text>"
      ],
      [
        "type",
        "SiLookupTypeId"
      ]
    ]
  },
  "SiLookupTypeId": "u32",
  "SiPath": "Vec<Text>",
  "SiType": {
    "type": "struct",
    "type_mapping": [
      [
        "path",
        "SiPath"
      ],
      [
        "params",
        "Vec<SiLookupTypeId>"
      ],
      [
        "def",
        "SiTypeDef"
      ]
    ]
  },
  "SiTypeDef": {
    "type": "enum",
    "type_mapping": [
      [
        "Composite",
        "SiTypeDefComposite"
      ],
      [
        "Variant",
        "SiTypeDefVariant"
      ],
      [
        "Sequence",
        "SiTypeDefSequence"
      ],
      [
        "Array",
        "SiTypeDefArray"
      ],
      [
        "Tuple",
        "SiTypeDefTuple"
      ],
      [
        "Primitive",
        "SiTypeDefPrimitive"
      ]
    ]
  },
  "SiTypeDefArray": {
    "type": "struct",
    "type_mapping": [
      [
        "len",
        "u16"
      ],
      [
        "type",
        "SiLookupTypeId"
      ]
    ]
  },
  "SiTypeDefComposite": {
    "type": "struct",
    "type_mapping": [
      [
        "fields",
        "Vec<SiField>"
      ]
    ]
  },
  "SiTypeDefVariant": {
    "type": "struct",
    "type_mapping": [
      [
        "variants",
        "Vec<SiVariant>"
      ]
    ]
  },
  "SiTypeDefPrimitive": {
    "type": "enum",
    "value_list": [
      "Bool",
      "Char",
      "Str",
      "U8",
      "U16",
      "U32",
      "U64",
      "U128",
      "U256",
      "I8",
      "I16",
      "I32",
      "I64",
      "I128",
      "I256"
    ]
  },
  "SiTypeDefSequence": {
    "type": "struct",
    "type_mapping": [
      [
        "type",
        "SiLookupTypeId"
      ]
    ]
  },
  "SiTypeDefTuple": "Vec<SiLookupTypeId>",
  "SiVariant": {
    "type": "struct",
    "type_mapping": [
      [
        "name",
        "Text"
      ],
      [
        "fields",
        "Vec<SiField>"
      ],
      [
        "discriminant",
        "Option<u64>"
      ]
    ]
  }
}