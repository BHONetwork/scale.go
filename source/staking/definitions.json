{
  "ValidatorPrefsWithCommission": {
    "type": "struct",
    "type_mapping": [
      [
        "commission",
        "Compact<Perbill>"
      ]
    ]
  },
  "ValidatorPrefsWithBlocked": {
    "type": "struct",
    "type_mapping": [
      [
        "commission",
        "Compact<Perbill>"
      ],
      [
        "blocked",
        "bool"
      ]
    ]
  },
  "ValidatorPrefs": "ValidatorPrefsWithCommission",
  "SeatHolder": {
    "type": "struct",
    "type_mapping": [
      [
        "who",
        "AccountId"
      ],
      [
        "stake",
        "Balance"
      ],
      [
        "deposit",
        "Balance"
      ]
    ]
  },
  "Voter": {
    "type": "struct",
    "type_mapping": [
      [
        "votes",
        "Vec<AccountId>"
      ],
      [
        "stake",
        "Balance"
      ],
      [
        "deposit",
        "Balance"
      ]
    ]
  },
  "RawSolution": {
    "type": "struct",
    "type_mapping": [
      [
        "compact",
        "CompactAssignments"
      ],
      [
        "score",
        "ElectionScore"
      ],
      [
        "round",
        "u32"
      ]
    ]
  },
  "ReadySolution": {
    "type": "struct",
    "type_mapping": [
      [
        "supports",
        "SolutionSupports"
      ],
      [
        "score",
        "ElectionScore"
      ],
      [
        "compute",
        "ElectionCompute"
      ]
    ]
  },
  "ElectionScore": "[u128; 3]",
  "SolutionSupports": "Vec<(AccountId, SolutionSupport)>",
  "SolutionSupport": {
    "type": "struct",
    "type_mapping": [
      [
        "total",
        "ExtendedBalance"
      ],
      [
        "voters",
        "Vec<(AccountId, ExtendedBalance)>"
      ]
    ]
  },
  "SolutionOrSnapshotSize": {
    "type": "struct",
    "type_mapping": [
      [
        "voters",
        "Compact<u32>"
      ],
      [
        "targets",
        "Compact<u32>"
      ]
    ]
  },
  "ExtendedBalance": "u128",
  "ElectionCompute": {
    "type": "enum",
    "value_list": [
      "OnChain",
      "Signed",
      "Unsigned"
    ]
  },
  "ElectionPhase": {
    "type": "enum",
    "type_mapping": [
      [
        "Off",
        "Null"
      ],
      [
        "Signed",
        "Null"
      ],
      [
        "Unsigned",
        "(bool, BlockNumber)"
      ],
      [
        "Emergency",
        "Null"
      ]
    ]
  },
  "SubmissionIndicesOf": "BTreeMap<ElectionScore, u32>",
  "SignedSubmissionOf": "SignedSubmission",
  "SignedSubmission": {
    "type": "struct",
    "type_mapping": [
      [
        "who",
        "AccountId"
      ],
      [
        "deposit",
        "Balance"
      ],
      [
        "solution",
        "RawSolution"
      ],
      [
        "reward",
        "Balance"
      ]
    ]
  }
}