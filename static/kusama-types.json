[
  {
    "primitive_types:U64": {
      "type": "string",
      "type_string": "U64"
    }
  },
  {
    "primitive_types:Bool": {
      "type": "string",
      "type_string": "Bool"
    }
  },
  {
    "primitive_types:U16": {
      "type": "string",
      "type_string": "U16"
    }
  },
  {
    "primitive_types:U32": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "primitive_types:U8": {
      "type": "string",
      "type_string": "U8"
    }
  },
  {
    "primitive_types:U128": {
      "type": "string",
      "type_string": "U128"
    }
  },
  {
    "primitive_types:Str": {
      "type": "string",
      "type_string": "Str"
    }
  },
  {
    "sp_core:ed25519:Signature@209": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "sp_core:offchain:OpaqueMultiaddr@222": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "sp_core:changes_trie:ChangesTrieConfiguration@17": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "digest_interval",
          "U32"
        ],
        [
          "digest_levels",
          "U32"
        ]
      ]
    }
  },
  {
    "sp_core:ed25519:Public@38": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "sp_core:ecdsa:Signature@328": {
      "type": "string",
      "type_string": "[U8; 65]"
    }
  },
  {
    "sp_core:sr25519:Signature@51": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "sp_core:crypto:AccountId32@0": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "sp_core:ecdsa:Public@193": {
      "type": "string",
      "type_string": "[U8; 33]"
    }
  },
  {
    "sp_core:OpaquePeerId@220": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "sp_core:offchain:OpaqueNetworkState@219": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "peer_id",
          "Vec\u003cU8\u003e"
        ],
        [
          "external_addresses",
          "Vec\u003cVec\u003cU8\u003e\u003e"
        ]
      ]
    }
  },
  {
    "sp_core:sr25519:Public@41": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "sp_core:crypto:KeyTypeId@197": {
      "type": "string",
      "type_string": "[U8; 4]"
    }
  },
  {
    "polkadot_runtime_common:auctions:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "AuctionInProgress",
          "0"
        ],
        [
          "LeasePeriodInPast",
          "1"
        ],
        [
          "ParaNotRegistered",
          "2"
        ],
        [
          "NotCurrentAuction",
          "3"
        ],
        [
          "NotAuction",
          "4"
        ],
        [
          "AuctionEnded",
          "5"
        ],
        [
          "AlreadyLeasedOut",
          "6"
        ]
      ]
    }
  },
  {
    "pallet_proxy:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "TooMany",
          "0"
        ],
        [
          "NotFound",
          "1"
        ],
        [
          "NotProxy",
          "2"
        ],
        [
          "Unproxyable",
          "3"
        ],
        [
          "Duplicate",
          "4"
        ],
        [
          "NoPermission",
          "5"
        ],
        [
          "Unannounced",
          "6"
        ],
        [
          "NoSelfProxy",
          "7"
        ]
      ]
    }
  },
  {
    "pallet_balances:AccountData@5": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "free",
          "U128"
        ],
        [
          "reserved",
          "U128"
        ],
        [
          "misc_frozen",
          "U128"
        ],
        [
          "fee_frozen",
          "U128"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:Fungibility": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Fungible",
          "compact\u003cU128\u003e"
        ],
        [
          "NonFungible",
          "xcm:v1:multiasset:AssetInstance"
        ]
      ]
    }
  },
  {
    "Tuplefinality_grandpa:Prevote@207sp_finality_grandpa:app:Signature@208": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "finality_grandpa:Prevote@207"
        ],
        [
          "col2",
          "sp_finality_grandpa:app:Signature@208"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:ump:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "UnknownMessageIndex",
          "0"
        ],
        [
          "WeightOverLimit",
          "1"
        ]
      ]
    }
  },
  {
    "pallet_collective:Votes@378": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "index",
          "U32"
        ],
        [
          "threshold",
          "U32"
        ],
        [
          "ayes",
          "Vec\u003c[U8; 32]\u003e"
        ],
        [
          "nays",
          "Vec\u003c[U8; 32]\u003e"
        ],
        [
          "end",
          "U32"
        ]
      ]
    }
  },
  {
    "frame_system:AccountInfo@3": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "nonce",
          "U32"
        ],
        [
          "consumers",
          "U32"
        ],
        [
          "providers",
          "U32"
        ],
        [
          "sufficients",
          "U32"
        ],
        [
          "data",
          "pallet_balances:AccountData@5"
        ]
      ]
    }
  },
  {
    "primitive_types:H256@9": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "pallet_im_online:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidKey",
          "0"
        ],
        [
          "DuplicatedHeartbeat",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:InvalidDisputeStatementKind": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Explicit",
          "0"
        ]
      ]
    }
  },
  {
    "Tuplepolkadot_parachain:primitives:Id@48Vec\u003cU8\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "polkadot_parachain:primitives:Id@48"
        ],
        [
          "col2",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "TupleU32Vec\u003cpolkadot_parachain:primitives:Id@48\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "Vec\u003cpolkadot_parachain:primitives:Id@48\u003e"
        ]
      ]
    }
  },
  {
    "pallet_balances:Releases": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V1_0_0",
          "0"
        ],
        [
          "V2_0_0",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:ValidDisputeStatementKind": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Explicit",
          "NULL"
        ],
        [
          "BackingSeconded",
          "[U8; 32]"
        ],
        [
          "BackingValid",
          "[U8; 32]"
        ],
        [
          "ApprovalChecking",
          "NULL"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:paras:ReplacementTimes@279": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "expected_at",
          "U32"
        ],
        [
          "activated_at",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:VersionedXcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V0",
          "xcm:v0:Xcm"
        ],
        [
          "V1",
          "xcm:v1:Xcm"
        ],
        [
          "V2",
          "xcm:v2:Xcm@370"
        ]
      ]
    }
  },
  {
    "frame_system:limits:WeightsPerClass@132": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "base_extrinsic",
          "U64"
        ],
        [
          "max_extrinsic",
          "option\u003cU64\u003e"
        ],
        [
          "max_total",
          "option\u003cU64\u003e"
        ],
        [
          "reserved",
          "option\u003cU64\u003e"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:ParathreadClaim@267": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "",
          "polkadot_parachain:primitives:Id@48"
        ],
        [
          "",
          "polkadot_primitives:v0:collator_app:Public@49"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:slots:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "ParaNotOnboarding",
          "0"
        ],
        [
          "LeaseError",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:disputes:DisputeLocation": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Local",
          "0"
        ],
        [
          "Remote",
          "1"
        ]
      ]
    }
  },
  {
    "sp_version:RuntimeVersion@137": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "spec_name",
          "Str"
        ],
        [
          "impl_name",
          "Str"
        ],
        [
          "authoring_version",
          "U32"
        ],
        [
          "spec_version",
          "U32"
        ],
        [
          "impl_version",
          "U32"
        ],
        [
          "apis",
          "Cow@138"
        ],
        [
          "transaction_version",
          "U32"
        ]
      ]
    }
  },
  {
    "frame_support:weights:WeightToFeeCoefficient@177": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "coeff_integer",
          "U128"
        ],
        [
          "coeff_frac",
          "sp_arithmetic:per_things:Perbill@126"
        ],
        [
          "negative",
          "Bool"
        ],
        [
          "degree",
          "U8"
        ]
      ]
    }
  },
  {
    "sp_authority_discovery:app:Public@191": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "Tupleframe_support:storage:bounded_vec:BoundedVec@387U128": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "frame_support:storage:bounded_vec:BoundedVec@387"
        ],
        [
          "col2",
          "U128"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]rococo_runtime:SessionKeys@188": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "rococo_runtime:SessionKeys@188"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:inclusion:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WrongBitfieldSize",
          "0"
        ],
        [
          "BitfieldDuplicateOrUnordered",
          "1"
        ],
        [
          "ValidatorIndexOutOfBounds",
          "2"
        ],
        [
          "InvalidBitfieldSignature",
          "3"
        ],
        [
          "UnscheduledCandidate",
          "4"
        ],
        [
          "CandidateScheduledBeforeParaFree",
          "5"
        ],
        [
          "WrongCollator",
          "6"
        ],
        [
          "ScheduledOutOfOrder",
          "7"
        ],
        [
          "HeadDataTooLarge",
          "8"
        ],
        [
          "PrematureCodeUpgrade",
          "9"
        ],
        [
          "NewCodeTooLarge",
          "10"
        ],
        [
          "CandidateNotInParentContext",
          "11"
        ],
        [
          "UnoccupiedBitInBitfield",
          "12"
        ],
        [
          "InvalidGroupIndex",
          "13"
        ],
        [
          "InsufficientBacking",
          "14"
        ],
        [
          "InvalidBacking",
          "15"
        ],
        [
          "NotCollatorSigned",
          "16"
        ],
        [
          "ValidationDataHashMismatch",
          "17"
        ],
        [
          "InternalError",
          "18"
        ],
        [
          "IncorrectDownwardMessageHandling",
          "19"
        ],
        [
          "InvalidUpwardMessages",
          "20"
        ],
        [
          "HrmpWatermarkMishandling",
          "21"
        ],
        [
          "InvalidOutboundHrmp",
          "22"
        ],
        [
          "InvalidValidationCodeHash",
          "23"
        ],
        [
          "ParaHeadMismatch",
          "24"
        ]
      ]
    }
  },
  {
    "TupleU32xcm:VersionedMultiLocation": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "xcm:VersionedMultiLocation"
        ]
      ]
    }
  },
  {
    "TupleU32xcm:v2:traits:Error": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "xcm:v2:traits:Error"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 8]U32": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 8]"
        ],
        [
          "col2",
          "U32"
        ]
      ]
    }
  },
  {
    "Cow@138": {
      "type": "string",
      "type_string": "Vec\u003cTuple[U8; 8]U32\u003e"
    }
  },
  {
    "frame_system:extensions:check_weight:CheckWeight@411": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "sp_finality_grandpa:Equivocation": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Prevote",
          "finality_grandpa:Equivocation@206"
        ],
        [
          "Precommit",
          "finality_grandpa:Equivocation@211"
        ]
      ]
    }
  },
  {
    "xcm:v0:junction:BodyPart": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Voice",
          "NULL"
        ],
        [
          "Members",
          "compact\u003cU32\u003e"
        ],
        [
          "Fraction",
          "[[\"nom\",\"compact\\u003cU32\\u003e\"],[\"denom\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "AtLeastProportion",
          "[[\"nom\",\"compact\\u003cU32\\u003e\"],[\"denom\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "MoreThanProportion",
          "[[\"nom\",\"compact\\u003cU32\\u003e\"],[\"denom\",\"compact\\u003cU32\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "xcm:v2:Xcm@93": {
      "type": "string",
      "type_string": "Vec\u003cxcm:v2:Instruction\u003e"
    }
  },
  {
    "xcm:v1:multiasset:WildFungibility": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Fungible",
          "0"
        ],
        [
          "NonFungible",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:scheduler:ParathreadClaimQueue@263": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "queue",
          "Vec\u003cpolkadot_runtime_parachains:scheduler:QueuedParathread@265\u003e"
        ],
        [
          "next_core_offset",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:paras_registrar:ParaInfo@311": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "manager",
          "[U8; 32]"
        ],
        [
          "deposit",
          "U128"
        ],
        [
          "locked",
          "Bool"
        ]
      ]
    }
  },
  {
    "xcm:v1:junction:Junction": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Parachain",
          "compact\u003cU32\u003e"
        ],
        [
          "AccountId32",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"id\",\"[U8; 32]\"]]"
        ],
        [
          "AccountIndex64",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"index\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "AccountKey20",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"key\",\"[U8; 20]\"]]"
        ],
        [
          "PalletInstance",
          "U8"
        ],
        [
          "GeneralIndex",
          "compact\u003cU128\u003e"
        ],
        [
          "GeneralKey",
          "Vec\u003cU8\u003e"
        ],
        [
          "OnlyChild",
          "NULL"
        ],
        [
          "Plurality",
          "[[\"id\",\"xcm:v0:junction:BodyId\"],[\"part\",\"xcm:v0:junction:BodyPart\"]]"
        ]
      ]
    }
  },
  {
    "sp_runtime:generic:digest:DigestItem": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Other",
          "Vec\u003cU8\u003e"
        ],
        [
          "empty",
          "NULL"
        ],
        [
          "ChangesTrieRoot",
          "[U8; 32]"
        ],
        [
          "empty",
          "NULL"
        ],
        [
          "Consensus",
          "[[\"col0\",\"[U8; 4]\"],[\"col1\",\"Bytes\"]]"
        ],
        [
          "Seal",
          "[[\"col0\",\"[U8; 4]\"],[\"col1\",\"Bytes\"]]"
        ],
        [
          "PreRuntime",
          "[[\"col0\",\"[U8; 4]\"],[\"col1\",\"Bytes\"]]"
        ],
        [
          "ChangesTrieSignal",
          "sp_runtime:generic:digest:ChangesTrieSignal"
        ],
        [
          "RuntimeEnvironmentUpdated",
          "NULL"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:paras_inherent:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "TooManyInclusionInherents",
          "0"
        ],
        [
          "InvalidParentHeader",
          "1"
        ],
        [
          "CandidateCouldBeInvalid",
          "2"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:DisputeState@309": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "validators_for",
          "BitVec"
        ],
        [
          "validators_against",
          "BitVec"
        ],
        [
          "start",
          "U32"
        ],
        [
          "concluded_at",
          "option\u003cU32\u003e"
        ]
      ]
    }
  },
  {
    "xcm:v1:order:Order": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Noop",
          "NULL"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"U32\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"U32\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"receive\",\"xcm:v1:multiasset:MultiAssets@96\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"reserve\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v1:multiasset:MultiAsset@98\"],[\"weight\",\"U64\"],[\"debt\",\"U64\"],[\"halt_on_error\",\"Bool\"],[\"instructions\",\"Vec\\u003cxcm:v1:Xcm\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "pallet_proxy:Announcement@388": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "real",
          "[U8; 32]"
        ],
        [
          "call_hash",
          "[U8; 32]"
        ],
        [
          "height",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:VersionedResponse": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V0",
          "xcm:v0:Response"
        ],
        [
          "V1",
          "xcm:v1:Response"
        ],
        [
          "V2",
          "xcm:v2:Response"
        ]
      ]
    }
  },
  {
    "TupleVec\u003cU8\u003eVec\u003cU8\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "Vec\u003cU8\u003e"
        ],
        [
          "col2",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "Tuplepolkadot_primitives:v1:DisputeStatementpolkadot_primitives:v0:ValidatorIndex@229polkadot_primitives:v0:validator_app:Signature@248": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "polkadot_primitives:v1:DisputeStatement"
        ],
        [
          "col2",
          "polkadot_primitives:v0:ValidatorIndex@229"
        ],
        [
          "col3",
          "polkadot_primitives:v0:validator_app:Signature@248"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:DisputeStatementSet@255": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "candidate_hash",
          "polkadot_core_primitives:CandidateHash@64"
        ],
        [
          "session",
          "U32"
        ],
        [
          "statements",
          "Vec\u003cTuplepolkadot_primitives:v1:DisputeStatementpolkadot_primitives:v0:ValidatorIndex@229polkadot_primitives:v0:validator_app:Signature@248\u003e"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]polkadot_parachain:primitives:Id@48": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "polkadot_parachain:primitives:Id@48"
        ]
      ]
    }
  },
  {
    "xcm:v2:traits:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Undefined",
          "NULL"
        ],
        [
          "Overflow",
          "NULL"
        ],
        [
          "Unimplemented",
          "NULL"
        ],
        [
          "UnhandledXcmVersion",
          "NULL"
        ],
        [
          "UnhandledXcmMessage",
          "NULL"
        ],
        [
          "UnhandledEffect",
          "NULL"
        ],
        [
          "EscalationOfPrivilege",
          "NULL"
        ],
        [
          "UntrustedReserveLocation",
          "NULL"
        ],
        [
          "UntrustedTeleportLocation",
          "NULL"
        ],
        [
          "DestinationBufferOverflow",
          "NULL"
        ],
        [
          "MultiLocationFull",
          "NULL"
        ],
        [
          "MultiLocationNotInvertible",
          "NULL"
        ],
        [
          "FailedToDecode",
          "NULL"
        ],
        [
          "BadOrigin",
          "NULL"
        ],
        [
          "ExceedsMaxMessageSize",
          "NULL"
        ],
        [
          "FailedToTransactAsset",
          "NULL"
        ],
        [
          "WeightLimitReached",
          "U64"
        ],
        [
          "Wildcard",
          "NULL"
        ],
        [
          "TooMuchWeightRequired",
          "NULL"
        ],
        [
          "NotHoldingFees",
          "NULL"
        ],
        [
          "WeightNotComputable",
          "NULL"
        ],
        [
          "Barrier",
          "NULL"
        ],
        [
          "NotWithdrawable",
          "NULL"
        ],
        [
          "LocationCannotHold",
          "NULL"
        ],
        [
          "TooExpensive",
          "NULL"
        ],
        [
          "AssetNotFound",
          "NULL"
        ],
        [
          "DestinationUnsupported",
          "NULL"
        ],
        [
          "RecursionLimitReached",
          "NULL"
        ],
        [
          "Transport",
          "NULL"
        ],
        [
          "Unroutable",
          "NULL"
        ],
        [
          "UnknownWeightRequired",
          "NULL"
        ],
        [
          "Trap",
          "U64"
        ],
        [
          "UnknownClaim",
          "NULL"
        ],
        [
          "InvalidLocation",
          "NULL"
        ]
      ]
    }
  },
  {
    "sp_consensus_babe:app:Public@144": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "pallet_authorship:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidUncleParent",
          "0"
        ],
        [
          "UnclesAlreadySet",
          "1"
        ],
        [
          "TooManyUncles",
          "2"
        ],
        [
          "GenesisUncle",
          "3"
        ],
        [
          "TooHighUncle",
          "4"
        ],
        [
          "UncleAlreadyIncluded",
          "5"
        ],
        [
          "OldUncle",
          "6"
        ]
      ]
    }
  },
  {
    "pallet_transaction_payment:ChargeTransactionPayment@412": {
      "type": "string",
      "type_string": "compact\u003cU128\u003e"
    }
  },
  {
    "pallet_im_online:sr25519:app_sr25519:Signature@223": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "Tuple[U8; 32]U128Bool": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "U128"
        ],
        [
          "col3",
          "Bool"
        ]
      ]
    }
  },
  {
    "Tuplefinality_grandpa:Precommit@212sp_finality_grandpa:app:Signature@208": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "finality_grandpa:Precommit@212"
        ],
        [
          "col2",
          "sp_finality_grandpa:app:Signature@208"
        ]
      ]
    }
  },
  {
    "finality_grandpa:Equivocation@211": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "round_number",
          "U64"
        ],
        [
          "identity",
          "sp_finality_grandpa:app:Public@37"
        ],
        [
          "first",
          "Tuplefinality_grandpa:Precommit@212sp_finality_grandpa:app:Signature@208"
        ],
        [
          "second",
          "Tuplefinality_grandpa:Precommit@212sp_finality_grandpa:app:Signature@208"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:UpgradeGoAhead": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Abort",
          "0"
        ],
        [
          "GoAhead",
          "1"
        ]
      ]
    }
  },
  {
    "pallet_xcm:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Unreachable",
          "0"
        ],
        [
          "SendFailure",
          "1"
        ],
        [
          "Filtered",
          "2"
        ],
        [
          "UnweighableMessage",
          "3"
        ],
        [
          "DestinationNotInvertible",
          "4"
        ],
        [
          "Empty",
          "5"
        ],
        [
          "CannotReanchor",
          "6"
        ],
        [
          "TooManyAssets",
          "7"
        ],
        [
          "InvalidOrigin",
          "8"
        ],
        [
          "BadVersion",
          "9"
        ],
        [
          "BadLocation",
          "10"
        ],
        [
          "NoSubscription",
          "11"
        ],
        [
          "AlreadySubscribed",
          "12"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:MultiAsset@98": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "id",
          "xcm:v1:multiasset:AssetId"
        ],
        [
          "fun",
          "xcm:v1:multiasset:Fungibility"
        ]
      ]
    }
  },
  {
    "xcm:v0:OriginKind": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Native",
          "0"
        ],
        [
          "SovereignAccount",
          "1"
        ],
        [
          "Superuser",
          "2"
        ],
        [
          "Xcm",
          "3"
        ]
      ]
    }
  },
  {
    "xcm:v0:order:Order": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Null",
          "NULL"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"receive\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"reserve\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v0:multi_asset:MultiAsset\"],[\"weight\",\"U64\"],[\"debt\",\"U64\"],[\"halt_on_error\",\"Bool\"],[\"xcm\",\"Vec\\u003cxcm:v0:Xcm\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "polkadot_parachain:primitives:HrmpChannelId@62": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "sender",
          "polkadot_parachain:primitives:Id@48"
        ],
        [
          "recipient",
          "polkadot_parachain:primitives:Id@48"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:configuration:HostConfiguration@225": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "max_code_size",
          "U32"
        ],
        [
          "max_head_data_size",
          "U32"
        ],
        [
          "max_upward_queue_count",
          "U32"
        ],
        [
          "max_upward_queue_size",
          "U32"
        ],
        [
          "max_upward_message_size",
          "U32"
        ],
        [
          "max_upward_message_num_per_candidate",
          "U32"
        ],
        [
          "hrmp_max_message_num_per_candidate",
          "U32"
        ],
        [
          "validation_upgrade_frequency",
          "U32"
        ],
        [
          "validation_upgrade_delay",
          "U32"
        ],
        [
          "max_pov_size",
          "U32"
        ],
        [
          "max_downward_message_size",
          "U32"
        ],
        [
          "ump_service_total_weight",
          "U64"
        ],
        [
          "hrmp_max_parachain_outbound_channels",
          "U32"
        ],
        [
          "hrmp_max_parathread_outbound_channels",
          "U32"
        ],
        [
          "hrmp_sender_deposit",
          "U128"
        ],
        [
          "hrmp_recipient_deposit",
          "U128"
        ],
        [
          "hrmp_channel_max_capacity",
          "U32"
        ],
        [
          "hrmp_channel_max_total_size",
          "U32"
        ],
        [
          "hrmp_max_parachain_inbound_channels",
          "U32"
        ],
        [
          "hrmp_max_parathread_inbound_channels",
          "U32"
        ],
        [
          "hrmp_channel_max_message_size",
          "U32"
        ],
        [
          "code_retention_period",
          "U32"
        ],
        [
          "parathread_cores",
          "U32"
        ],
        [
          "parathread_retries",
          "U32"
        ],
        [
          "group_rotation_frequency",
          "U32"
        ],
        [
          "chain_availability_period",
          "U32"
        ],
        [
          "thread_availability_period",
          "U32"
        ],
        [
          "scheduling_lookahead",
          "U32"
        ],
        [
          "max_validators_per_core",
          "option\u003cU32\u003e"
        ],
        [
          "max_validators",
          "option\u003cU32\u003e"
        ],
        [
          "dispute_period",
          "U32"
        ],
        [
          "dispute_post_conclusion_acceptance_period",
          "U32"
        ],
        [
          "dispute_max_spam_slots",
          "U32"
        ],
        [
          "dispute_conclusion_by_time_out_period",
          "U32"
        ],
        [
          "no_show_slots",
          "U32"
        ],
        [
          "n_delay_tranches",
          "U32"
        ],
        [
          "zeroth_delay_tranche_width",
          "U32"
        ],
        [
          "needed_approvals",
          "U32"
        ],
        [
          "relay_vrf_modulo_samples",
          "U32"
        ],
        [
          "ump_max_individual_weight",
          "U64"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]NULL": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "NULL"
        ]
      ]
    }
  },
  {
    "TupleU64U64": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U64"
        ],
        [
          "col2",
          "U64"
        ]
      ]
    }
  },
  {
    "rococo_runtime:Runtime@413": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "polkadot_parachain:primitives:ValidationCodeHash@53": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "xcm:v2:traits:Outcome": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Complete",
          "U64"
        ],
        [
          "Incomplete",
          "[[\"col0\",\"U64\"],[\"col1\",\"xcm:v2:traits:Error\"]]"
        ],
        [
          "Error",
          "xcm:v2:traits:Error"
        ]
      ]
    }
  },
  {
    "polkadot_parachain:primitives:ValidationCode@241": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "xcm:v2:Instruction": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "xcm:v1:multiasset:MultiAssets@96"
        ],
        [
          "ReserveAssetDeposited",
          "xcm:v1:multiasset:MultiAssets@96"
        ],
        [
          "ReceiveTeleportedAsset",
          "xcm:v1:multiasset:MultiAssets@96"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v2:Response\"],[\"max_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"compact\\u003cU64\\u003e\"],[\"call\",\"xcm:double_encoded:DoubleEncoded@365\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "ClearOrigin",
          "NULL"
        ],
        [
          "DescendOrigin",
          "xcm:v1:multilocation:Junctions"
        ],
        [
          "ReportError",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"compact\\u003cU32\\u003e\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"compact\\u003cU32\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"receive\",\"xcm:v1:multiasset:MultiAssets@96\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"reserve\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v1:multiasset:MultiAsset@98\"],[\"weight_limit\",\"xcm:v2:WeightLimit\"]]"
        ],
        [
          "RefundSurplus",
          "NULL"
        ],
        [
          "SetErrorHandler",
          "xcm:v2:Xcm@370"
        ],
        [
          "SetAppendix",
          "xcm:v2:Xcm@370"
        ],
        [
          "ClearError",
          "NULL"
        ],
        [
          "ClaimAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"ticket\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "Trap",
          "compact\u003cU64\u003e"
        ],
        [
          "SubscribeVersion",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "UnsubscribeVersion",
          "NULL"
        ]
      ]
    }
  },
  {
    "sp_runtime:generic:unchecked_extrinsic:UncheckedExtrinsic@403": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "frame_support:weights:Pays": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Yes",
          "0"
        ],
        [
          "No",
          "1"
        ]
      ]
    }
  },
  {
    "xcm:v0:junction:Junction": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Parent",
          "NULL"
        ],
        [
          "Parachain",
          "compact\u003cU32\u003e"
        ],
        [
          "AccountId32",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"id\",\"[U8; 32]\"]]"
        ],
        [
          "AccountIndex64",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"index\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "AccountKey20",
          "[[\"network\",\"xcm:v0:junction:NetworkId\"],[\"key\",\"[U8; 20]\"]]"
        ],
        [
          "PalletInstance",
          "U8"
        ],
        [
          "GeneralIndex",
          "compact\u003cU128\u003e"
        ],
        [
          "GeneralKey",
          "Vec\u003cU8\u003e"
        ],
        [
          "OnlyChild",
          "NULL"
        ],
        [
          "Plurality",
          "[[\"id\",\"xcm:v0:junction:BodyId\"],[\"part\",\"xcm:v0:junction:BodyPart\"]]"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:assignment_app:Public@190": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "polkadot_runtime_parachains:hrmp:HrmpChannel@297": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "max_capacity",
          "U32"
        ],
        [
          "max_total_size",
          "U32"
        ],
        [
          "max_message_size",
          "U32"
        ],
        [
          "msg_count",
          "U32"
        ],
        [
          "total_size",
          "U32"
        ],
        [
          "mqc_head",
          "option\u003c[U8; 32]\u003e"
        ],
        [
          "sender_deposit",
          "U128"
        ],
        [
          "recipient_deposit",
          "U128"
        ]
      ]
    }
  },
  {
    "sp_runtime:generic:digest:Digest@11": {
      "type": "string",
      "type_string": "Vec\u003csp_runtime:generic:digest:DigestItem\u003e"
    }
  },
  {
    "beefy_primitives:crypto:Public@192": {
      "type": "string",
      "type_string": "[U8; 33]"
    }
  },
  {
    "bitvec:order:Lsb0@235": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "pallet_sudo:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "RequireSudo",
          "0"
        ]
      ]
    }
  },
  {
    "frame_system:extensions:check_nonce:CheckNonce@410": {
      "type": "string",
      "type_string": "compact\u003cU32\u003e"
    }
  },
  {
    "polkadot_primitives:v1:GroupIndex@56": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "xcm:v1:multilocation:MultiLocation@83": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "parents",
          "U8"
        ],
        [
          "interior",
          "xcm:v1:multilocation:Junctions"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:WildMultiAsset": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "All",
          "NULL"
        ],
        [
          "AllOf",
          "[[\"id\",\"xcm:v1:multiasset:AssetId\"],[\"fun\",\"xcm:v1:multiasset:WildFungibility\"]]"
        ]
      ]
    }
  },
  {
    "frame_system:limits:BlockWeights@130": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "base_block",
          "U64"
        ],
        [
          "max_block",
          "U64"
        ],
        [
          "per_class",
          "frame_support:weights:PerDispatchClass@131"
        ]
      ]
    }
  },
  {
    "pallet_balances:ReserveData@167": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "id",
          "[U8; 8]"
        ],
        [
          "amount",
          "U128"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CommittedCandidateReceipt@251": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "descriptor",
          "polkadot_primitives:v1:CandidateDescriptor@47"
        ],
        [
          "commitments",
          "polkadot_primitives:v1:CandidateCommitments@237"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CandidateDescriptor@47": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "para_id",
          "polkadot_parachain:primitives:Id@48"
        ],
        [
          "relay_parent",
          "[U8; 32]"
        ],
        [
          "collator",
          "polkadot_primitives:v0:collator_app:Public@49"
        ],
        [
          "persisted_validation_data_hash",
          "[U8; 32]"
        ],
        [
          "pov_hash",
          "[U8; 32]"
        ],
        [
          "erasure_root",
          "[U8; 32]"
        ],
        [
          "signature",
          "polkadot_primitives:v0:collator_app:Signature@50"
        ],
        [
          "para_head",
          "[U8; 32]"
        ],
        [
          "validation_code_hash",
          "[U8; 32]"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:paras:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NotRegistered",
          "0"
        ],
        [
          "CannotOnboard",
          "1"
        ],
        [
          "CannotOffboard",
          "2"
        ],
        [
          "CannotUpgrade",
          "3"
        ],
        [
          "CannotDowngrade",
          "4"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]polkadot_parachain:primitives:Id@48U128": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "polkadot_parachain:primitives:Id@48"
        ],
        [
          "col3",
          "U128"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:crowdloan:LastContribution": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Never",
          "NULL"
        ],
        [
          "PreEnding",
          "U32"
        ],
        [
          "Ending",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_core_primitives:InboundDownwardMessage@290": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "sent_at",
          "U32"
        ],
        [
          "msg",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:crowdloan:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "FirstPeriodInPast",
          "0"
        ],
        [
          "FirstPeriodTooFarInFuture",
          "1"
        ],
        [
          "LastPeriodBeforeFirstPeriod",
          "2"
        ],
        [
          "LastPeriodTooFarInFuture",
          "3"
        ],
        [
          "CannotEndInPast",
          "4"
        ],
        [
          "EndTooFarInFuture",
          "5"
        ],
        [
          "Overflow",
          "6"
        ],
        [
          "ContributionTooSmall",
          "7"
        ],
        [
          "InvalidParaId",
          "8"
        ],
        [
          "CapExceeded",
          "9"
        ],
        [
          "ContributionPeriodOver",
          "10"
        ],
        [
          "InvalidOrigin",
          "11"
        ],
        [
          "NotParachain",
          "12"
        ],
        [
          "LeaseActive",
          "13"
        ],
        [
          "BidOrLeaseActive",
          "14"
        ],
        [
          "FundNotEnded",
          "15"
        ],
        [
          "NoContributions",
          "16"
        ],
        [
          "NotReadyToDissolve",
          "17"
        ],
        [
          "InvalidSignature",
          "18"
        ],
        [
          "MemoTooLarge",
          "19"
        ],
        [
          "AlreadyInNewRaise",
          "20"
        ],
        [
          "VrfDelayInProgress",
          "21"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]U128": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "U128"
        ]
      ]
    }
  },
  {
    "xcm:v1:Xcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ReserveAssetDeposited",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ReceiveTeleportedAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v1:Response\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssets@96\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"U64\"],[\"call\",\"xcm:double_encoded:DoubleEncoded@107\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "RelayedFrom",
          "[[\"who\",\"xcm:v1:multilocation:Junctions\"],[\"message\",\"xcm:v1:Xcm\"]]"
        ],
        [
          "SubscribeVersion",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "UnsubscribeVersion",
          "NULL"
        ]
      ]
    }
  },
  {
    "xcm:v1:Response": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Assets",
          "xcm:v1:multiasset:MultiAssets@96"
        ],
        [
          "Version",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:v1:multilocation:Junctions": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Here",
          "NULL"
        ],
        [
          "X1",
          "xcm:v1:junction:Junction"
        ],
        [
          "X2",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X3",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X4",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"],[\"col3\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X5",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"],[\"col3\",\"xcm:v1:junction:Junction\"],[\"col4\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X6",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"],[\"col3\",\"xcm:v1:junction:Junction\"],[\"col4\",\"xcm:v1:junction:Junction\"],[\"col5\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X7",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"],[\"col3\",\"xcm:v1:junction:Junction\"],[\"col4\",\"xcm:v1:junction:Junction\"],[\"col5\",\"xcm:v1:junction:Junction\"],[\"col6\",\"xcm:v1:junction:Junction\"]]"
        ],
        [
          "X8",
          "[[\"col0\",\"xcm:v1:junction:Junction\"],[\"col1\",\"xcm:v1:junction:Junction\"],[\"col2\",\"xcm:v1:junction:Junction\"],[\"col3\",\"xcm:v1:junction:Junction\"],[\"col4\",\"xcm:v1:junction:Junction\"],[\"col5\",\"xcm:v1:junction:Junction\"],[\"col6\",\"xcm:v1:junction:Junction\"],[\"col7\",\"xcm:v1:junction:Junction\"]]"
        ]
      ]
    }
  },
  {
    "TupleU32U32": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:paras_sudo_wrapper:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "ParaDoesntExist",
          "0"
        ],
        [
          "ParaAlreadyExists",
          "1"
        ],
        [
          "ExceedsMaxMessageSize",
          "2"
        ],
        [
          "CouldntCleanup",
          "3"
        ],
        [
          "NotParathread",
          "4"
        ],
        [
          "NotParachain",
          "5"
        ],
        [
          "CannotUpgrade",
          "6"
        ],
        [
          "CannotDowngrade",
          "7"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:ParathreadEntry@266": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "claim",
          "polkadot_primitives:v1:ParathreadClaim@267"
        ],
        [
          "retries",
          "U32"
        ]
      ]
    }
  },
  {
    "pallet_balances:Reasons": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Fee",
          "0"
        ],
        [
          "Misc",
          "1"
        ],
        [
          "All",
          "2"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:disputes:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "DuplicateDisputeStatementSets",
          "0"
        ],
        [
          "AncientDisputeStatement",
          "1"
        ],
        [
          "ValidatorIndexOutOfBounds",
          "2"
        ],
        [
          "InvalidSignature",
          "3"
        ],
        [
          "DuplicateStatement",
          "4"
        ],
        [
          "PotentialSpam",
          "5"
        ]
      ]
    }
  },
  {
    "frame_support:storage:bounded_vec:BoundedVec@387": {
      "type": "string",
      "type_string": "Vec\u003cpallet_proxy:Announcement@388\u003e"
    }
  },
  {
    "rococo_runtime:ProxyType": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Any",
          "0"
        ],
        [
          "CancelProxy",
          "1"
        ],
        [
          "Auction",
          "2"
        ]
      ]
    }
  },
  {
    "xcm:v0:multi_location:MultiLocation": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Null",
          "NULL"
        ],
        [
          "X1",
          "xcm:v0:junction:Junction"
        ],
        [
          "X2",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X3",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X4",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"],[\"col3\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X5",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"],[\"col3\",\"xcm:v0:junction:Junction\"],[\"col4\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X6",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"],[\"col3\",\"xcm:v0:junction:Junction\"],[\"col4\",\"xcm:v0:junction:Junction\"],[\"col5\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X7",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"],[\"col3\",\"xcm:v0:junction:Junction\"],[\"col4\",\"xcm:v0:junction:Junction\"],[\"col5\",\"xcm:v0:junction:Junction\"],[\"col6\",\"xcm:v0:junction:Junction\"]]"
        ],
        [
          "X8",
          "[[\"col0\",\"xcm:v0:junction:Junction\"],[\"col1\",\"xcm:v0:junction:Junction\"],[\"col2\",\"xcm:v0:junction:Junction\"],[\"col3\",\"xcm:v0:junction:Junction\"],[\"col4\",\"xcm:v0:junction:Junction\"],[\"col5\",\"xcm:v0:junction:Junction\"],[\"col6\",\"xcm:v0:junction:Junction\"],[\"col7\",\"xcm:v0:junction:Junction\"]]"
        ]
      ]
    }
  },
  {
    "sp_consensus_slots:Slot@145": {
      "type": "string",
      "type_string": "U64"
    }
  },
  {
    "polkadot_primitives:v1:AvailabilityBitfield@233": {
      "type": "string",
      "type_string": "BitVec"
    }
  },
  {
    "sp_finality_grandpa:EquivocationProof@204": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "set_id",
          "U64"
        ],
        [
          "equivocation",
          "sp_finality_grandpa:Equivocation"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CandidateCommitments@237": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "upward_messages",
          "Vec\u003cVec\u003cU8\u003e\u003e"
        ],
        [
          "horizontal_messages",
          "Vec\u003cpolkadot_core_primitives:OutboundHrmpMessage@239\u003e"
        ],
        [
          "new_validation_code",
          "option\u003cVec\u003cU8\u003e\u003e"
        ],
        [
          "head_data",
          "polkadot_parachain:primitives:HeadData@54"
        ],
        [
          "processed_downward_messages",
          "U32"
        ],
        [
          "hrmp_watermark",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:double_encoded:DoubleEncoded@365": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "frame_support:weights:PerDispatchClass@7": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "normal",
          "U64"
        ],
        [
          "operational",
          "U64"
        ],
        [
          "mandatory",
          "U64"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 32]U64": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 32]"
        ],
        [
          "col2",
          "U64"
        ]
      ]
    }
  },
  {
    "sp_staking:offence:OffenceDetails@184": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "offender",
          "Tuple[U8; 32]NULL"
        ],
        [
          "reporters",
          "Vec\u003c[U8; 32]\u003e"
        ]
      ]
    }
  },
  {
    "frame_support:traits:tokens:misc:BalanceStatus": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Free",
          "0"
        ],
        [
          "Reserved",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v0:collator_app:Signature@50": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "polkadot_runtime_common:crowdloan:FundInfo@321": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "depositor",
          "[U8; 32]"
        ],
        [
          "verifier",
          "option\u003csp_runtime:MultiSigner\u003e"
        ],
        [
          "deposit",
          "U128"
        ],
        [
          "raised",
          "U128"
        ],
        [
          "end",
          "U32"
        ],
        [
          "cap",
          "U128"
        ],
        [
          "last_contribution",
          "polkadot_runtime_common:crowdloan:LastContribution"
        ],
        [
          "first_period",
          "U32"
        ],
        [
          "last_period",
          "U32"
        ],
        [
          "trie_index",
          "U32"
        ]
      ]
    }
  },
  {
    "Tuplesp_finality_grandpa:app:Public@37U64": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "sp_finality_grandpa:app:Public@37"
        ],
        [
          "col2",
          "U64"
        ]
      ]
    }
  },
  {
    "pallet_grandpa:StoredPendingChange@201": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "scheduled_at",
          "U32"
        ],
        [
          "delay",
          "U32"
        ],
        [
          "next_authorities",
          "Vec\u003cTuplesp_finality_grandpa:app:Public@37U64\u003e"
        ],
        [
          "forced",
          "option\u003cU32\u003e"
        ]
      ]
    }
  },
  {
    "frame_support:storage:bounded_vec:BoundedVec@377": {
      "type": "string",
      "type_string": "Vec\u003c[U8; 32]\u003e"
    }
  },
  {
    "frame_system:EventRecord@19": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "phase",
          "frame_system:Phase"
        ],
        [
          "event",
          "Call"
        ],
        [
          "topics",
          "Vec\u003c[U8; 32]\u003e"
        ]
      ]
    }
  },
  {
    "sp_consensus_babe:AllowedSlots": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "PrimarySlots",
          "0"
        ],
        [
          "PrimaryAndSecondaryPlainSlots",
          "1"
        ],
        [
          "PrimaryAndSecondaryVRFSlots",
          "2"
        ]
      ]
    }
  },
  {
    "rococo_runtime:SessionKeys@188": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "grandpa",
          "sp_finality_grandpa:app:Public@37"
        ],
        [
          "babe",
          "[U8; 32]"
        ],
        [
          "im_online",
          "pallet_im_online:sr25519:app_sr25519:Public@40"
        ],
        [
          "para_validator",
          "polkadot_primitives:v0:validator_app:Public@189"
        ],
        [
          "para_assignment",
          "[U8; 32]"
        ],
        [
          "authority_discovery",
          "[U8; 32]"
        ],
        [
          "beefy",
          "[U8; 33]"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v0:validator_app:Public@189": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "finality_grandpa:Prevote@207": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "target_hash",
          "[U8; 32]"
        ],
        [
          "target_number",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:double_encoded:DoubleEncoded@107": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "frame_system:Phase": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "ApplyExtrinsic",
          "U32"
        ],
        [
          "Finalization",
          "NULL"
        ],
        [
          "Initialization",
          "NULL"
        ]
      ]
    }
  },
  {
    "TupleU8U8": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U8"
        ],
        [
          "col2",
          "U8"
        ]
      ]
    }
  },
  {
    "pallet_xcm:pallet:QueryStatus": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Pending",
          "[[\"responder\",\"xcm:VersionedMultiLocation\"],[\"maybe_notify\",\"option\\u003cTupleU8U8\\u003e\"],[\"timeout\",\"U32\"]]"
        ],
        [
          "VersionNotifier",
          "[[\"origin\",\"xcm:VersionedMultiLocation\"],[\"is_active\",\"Bool\"]]"
        ],
        [
          "Ready",
          "[[\"response\",\"xcm:VersionedResponse\"],[\"at\",\"U32\"]]"
        ]
      ]
    }
  },
  {
    "pallet_xcm:pallet:VersionMigrationStage": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "MigrateSupportedVersion",
          "NULL"
        ],
        [
          "MigrateVersionNotifiers",
          "NULL"
        ],
        [
          "NotifyCurrentTargets",
          "option\u003cVec\u003cU8\u003e\u003e"
        ],
        [
          "MigrateAndNotifyOldTargets",
          "NULL"
        ]
      ]
    }
  },
  {
    "sp_finality_grandpa:app:Public@37": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "polkadot_parachain:primitives:Id@48": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "sp_runtime:generic:header:Header@154": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "parent_hash",
          "[U8; 32]"
        ],
        [
          "number",
          "compact\u003cU32\u003e"
        ],
        [
          "state_root",
          "[U8; 32]"
        ],
        [
          "extrinsics_root",
          "[U8; 32]"
        ],
        [
          "digest",
          "Vec\u003csp_runtime:generic:digest:DigestItem\u003e"
        ]
      ]
    }
  },
  {
    "Tupleframe_support:storage:bounded_vec:BoundedVec@383U128": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "frame_support:storage:bounded_vec:BoundedVec@383"
        ],
        [
          "col2",
          "U128"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:paras:ParaGenesisArgs@283": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "genesis_head",
          "polkadot_parachain:primitives:HeadData@54"
        ],
        [
          "validation_code",
          "Vec\u003cU8\u003e"
        ],
        [
          "parachain",
          "Bool"
        ]
      ]
    }
  },
  {
    "frame_support:weights:PerDispatchClass@135": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "normal",
          "U32"
        ],
        [
          "operational",
          "U32"
        ],
        [
          "mandatory",
          "U32"
        ]
      ]
    }
  },
  {
    "pallet_grandpa:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "PauseFailed",
          "0"
        ],
        [
          "ResumeFailed",
          "1"
        ],
        [
          "ChangePending",
          "2"
        ],
        [
          "TooSoon",
          "3"
        ],
        [
          "InvalidKeyOwnershipProof",
          "4"
        ],
        [
          "InvalidEquivocationProof",
          "5"
        ],
        [
          "DuplicateOffenceReport",
          "6"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:DisputeStatement": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Valid",
          "polkadot_primitives:v1:ValidDisputeStatementKind"
        ],
        [
          "Invalid",
          "polkadot_primitives:v1:InvalidDisputeStatementKind"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:scheduler:QueuedParathread@265": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "claim",
          "polkadot_primitives:v1:ParathreadEntry@266"
        ],
        [
          "core_offset",
          "U32"
        ]
      ]
    }
  },
  {
    "TupleU32U32": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:VersionedMultiLocation": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V0",
          "xcm:v0:multi_location:MultiLocation"
        ],
        [
          "V1",
          "xcm:v1:multilocation:MultiLocation@83"
        ]
      ]
    }
  },
  {
    "sp_finality_grandpa:app:Signature@208": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "polkadot_primitives:v1:signed:UncheckedSigned@247": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "payload",
          "BitVec"
        ],
        [
          "validator_index",
          "polkadot_primitives:v0:ValidatorIndex@229"
        ],
        [
          "signature",
          "polkadot_primitives:v0:validator_app:Signature@248"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v0:ValidityAttestation": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "empty",
          "NULL"
        ],
        [
          "Implicit",
          "polkadot_primitives:v0:validator_app:Signature@248"
        ],
        [
          "Explicit",
          "polkadot_primitives:v0:validator_app:Signature@248"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:SessionInfo@306": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "validators",
          "Vec\u003cpolkadot_primitives:v0:validator_app:Public@189\u003e"
        ],
        [
          "discovery_keys",
          "Vec\u003c[U8; 32]\u003e"
        ],
        [
          "assignment_keys",
          "Vec\u003cpolkadot_primitives:v1:assignment_app:Public@190\u003e"
        ],
        [
          "validator_groups",
          "Vec\u003cVec\u003cpolkadot_primitives:v0:ValidatorIndex@229\u003e\u003e"
        ],
        [
          "n_cores",
          "U32"
        ],
        [
          "zeroth_delay_tranche_width",
          "U32"
        ],
        [
          "relay_vrf_modulo_samples",
          "U32"
        ],
        [
          "n_delay_tranches",
          "U32"
        ],
        [
          "no_show_slots",
          "U32"
        ],
        [
          "needed_approvals",
          "U32"
        ]
      ]
    }
  },
  {
    "sp_runtime:DispatchError": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Other",
          "NULL"
        ],
        [
          "CannotLookup",
          "NULL"
        ],
        [
          "BadOrigin",
          "NULL"
        ],
        [
          "Module",
          "[[\"index\",\"U8\"],[\"error\",\"U8\"]]"
        ],
        [
          "ConsumerRemaining",
          "NULL"
        ],
        [
          "NoProviders",
          "NULL"
        ],
        [
          "Token",
          "sp_runtime:TokenError"
        ],
        [
          "Arithmetic",
          "sp_runtime:ArithmeticError"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:MultiAssets@96": {
      "type": "string",
      "type_string": "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
    }
  },
  {
    "finality_grandpa:Equivocation@206": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "round_number",
          "U64"
        ],
        [
          "identity",
          "[U8; 32]"
        ],
        [
          "first",
          "Tuplefinality_grandpa:Prevote@207sp_finality_grandpa:app:Signature@208"
        ],
        [
          "second",
          "Tuplefinality_grandpa:Prevote@207sp_finality_grandpa:app:Signature@208"
        ]
      ]
    }
  },
  {
    "beefy_primitives:mmr:BeefyNextAuthoritySet@375": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "id",
          "U64"
        ],
        [
          "len",
          "U32"
        ],
        [
          "root",
          "[U8; 32]"
        ]
      ]
    }
  },
  {
    "Tuplexcm:VersionedMultiLocationU32": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "xcm:VersionedMultiLocation"
        ],
        [
          "col2",
          "U32"
        ]
      ]
    }
  },
  {
    "frame_support:storage:bounded_vec:BoundedVec@397": {
      "type": "string",
      "type_string": "Vec\u003cTuplexcm:VersionedMultiLocationU32\u003e"
    }
  },
  {
    "polkadot_runtime_parachains:paras:ParaPastCodeMeta@277": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "upgrade_times",
          "Vec\u003cpolkadot_runtime_parachains:paras:ReplacementTimes@279\u003e"
        ],
        [
          "last_pruned",
          "option\u003cU32\u003e"
        ]
      ]
    }
  },
  {
    "pallet_utility:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "TooManyCalls",
          "0"
        ]
      ]
    }
  },
  {
    "sp_runtime:ArithmeticError": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Underflow",
          "0"
        ],
        [
          "Overflow",
          "1"
        ],
        [
          "DivisionByZero",
          "2"
        ]
      ]
    }
  },
  {
    "xcm:v0:junction:NetworkId": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Any",
          "NULL"
        ],
        [
          "Named",
          "Vec\u003cU8\u003e"
        ],
        [
          "Polkadot",
          "NULL"
        ],
        [
          "Kusama",
          "NULL"
        ]
      ]
    }
  },
  {
    "Tupleframe_system:extensions:check_spec_version:CheckSpecVersion@405frame_system:extensions:check_tx_version:CheckTxVersion@406frame_system:extensions:check_genesis:CheckGenesis@407frame_system:extensions:check_mortality:CheckMortality@408compact\u003cU32\u003eframe_system:extensions:check_weight:CheckWeight@411compact\u003cU128\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "frame_system:extensions:check_spec_version:CheckSpecVersion@405"
        ],
        [
          "col2",
          "frame_system:extensions:check_tx_version:CheckTxVersion@406"
        ],
        [
          "col3",
          "frame_system:extensions:check_genesis:CheckGenesis@407"
        ],
        [
          "col4",
          "frame_system:extensions:check_mortality:CheckMortality@408"
        ],
        [
          "col5",
          "compact\u003cU32\u003e"
        ],
        [
          "col6",
          "frame_system:extensions:check_weight:CheckWeight@411"
        ],
        [
          "col7",
          "compact\u003cU128\u003e"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:disputes:DisputeResult": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Valid",
          "0"
        ],
        [
          "Invalid",
          "1"
        ]
      ]
    }
  },
  {
    "sp_consensus_babe:digests:NextConfigDescriptor": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "empty",
          "NULL"
        ],
        [
          "V1",
          "[[\"c\",\"TupleU64U64\"],[\"allowed_slots\",\"sp_consensus_babe:AllowedSlots\"]]"
        ]
      ]
    }
  },
  {
    "pallet_balances:BalanceLock@163": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "id",
          "[U8; 8]"
        ],
        [
          "amount",
          "U128"
        ],
        [
          "reasons",
          "pallet_balances:Reasons"
        ]
      ]
    }
  },
  {
    "xcm:v2:Instruction": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ],
        [
          "ReserveAssetDeposited",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ],
        [
          "ReceiveTeleportedAsset",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v2:Response\"],[\"max_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"compact\\u003cU64\\u003e\"],[\"call\",\"Bytes\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "ClearOrigin",
          "NULL"
        ],
        [
          "DescendOrigin",
          "xcm:v1:multilocation:Junctions"
        ],
        [
          "ReportError",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"compact\\u003cU32\\u003e\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"compact\\u003cU32\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"receive\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"reserve\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"xcm\",\"Vec\\u003cxcm:v2:Instruction\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v1:multiasset:MultiAsset@98\"],[\"weight_limit\",\"xcm:v2:WeightLimit\"]]"
        ],
        [
          "RefundSurplus",
          "NULL"
        ],
        [
          "SetErrorHandler",
          "Vec\u003cxcm:v2:Instruction\u003e"
        ],
        [
          "SetAppendix",
          "Vec\u003cxcm:v2:Instruction\u003e"
        ],
        [
          "ClearError",
          "NULL"
        ],
        [
          "ClaimAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"ticket\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "Trap",
          "compact\u003cU64\u003e"
        ],
        [
          "SubscribeVersion",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "UnsubscribeVersion",
          "NULL"
        ]
      ]
    }
  },
  {
    "sp_arithmetic:per_things:Perbill@126": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "sp_arithmetic:fixed_point:FixedU128@174": {
      "type": "string",
      "type_string": "U128"
    }
  },
  {
    "pallet_transaction_payment:Releases": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V1Ancient",
          "0"
        ],
        [
          "V2",
          "1"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v0:collator_app:Public@49": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "frame_system:extensions:check_spec_version:CheckSpecVersion@405": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "polkadot_runtime_parachains:paras:ParaLifecycle": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Onboarding",
          "0"
        ],
        [
          "Parathread",
          "1"
        ],
        [
          "Parachain",
          "2"
        ],
        [
          "UpgradingParathread",
          "3"
        ],
        [
          "DowngradingParachain",
          "4"
        ],
        [
          "OffboardingParathread",
          "5"
        ],
        [
          "OffboardingParachain",
          "6"
        ]
      ]
    }
  },
  {
    "sp_runtime:traits:BlakeTwo256@155": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "Tuple[U8; 16]Vec\u003cU8\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 16]"
        ],
        [
          "col2",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "polkadot_core_primitives:InboundHrmpMessage@300": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "sent_at",
          "U32"
        ],
        [
          "data",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "polkadot_core_primitives:OutboundHrmpMessage@239": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "recipient",
          "U32"
        ],
        [
          "data",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "xcm:v1:Xcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ReserveAssetDeposited",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ReceiveTeleportedAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v1:Response\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"U64\"],[\"call\",\"Bytes\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "RelayedFrom",
          "[[\"who\",\"xcm:v1:multilocation:Junctions\"],[\"message\",\"xcm:v1:Xcm\"]]"
        ],
        [
          "SubscribeVersion",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"max_response_weight\",\"compact\\u003cU64\\u003e\"]]"
        ],
        [
          "UnsubscribeVersion",
          "NULL"
        ]
      ]
    }
  },
  {
    "xcm:v2:Xcm@370": {
      "type": "string",
      "type_string": "Vec\u003cxcm:v2:Instruction\u003e"
    }
  },
  {
    "frame_system:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidSpecName",
          "0"
        ],
        [
          "SpecVersionNeedsToIncrease",
          "1"
        ],
        [
          "FailedToExtractRuntimeVersion",
          "2"
        ],
        [
          "NonDefaultComposite",
          "3"
        ],
        [
          "NonZeroRefCount",
          "4"
        ]
      ]
    }
  },
  {
    "Tuple[U8; 4]Vec\u003cU8\u003e": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "[U8; 4]"
        ],
        [
          "col2",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "sp_runtime:multiaddress:MultiAddress": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Id",
          "[U8; 32]"
        ],
        [
          "Index",
          "compact\u003cNULL\u003e"
        ],
        [
          "Raw",
          "Vec\u003cU8\u003e"
        ],
        [
          "Address32",
          "[U8; 32]"
        ],
        [
          "Address20",
          "[U8; 20]"
        ]
      ]
    }
  },
  {
    "finality_grandpa:Precommit@212": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "target_hash",
          "[U8; 32]"
        ],
        [
          "target_number",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:VersionedXcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V0",
          "xcm:v0:Xcm"
        ],
        [
          "V1",
          "xcm:v1:Xcm"
        ],
        [
          "V2",
          "Vec\u003cxcm:v2:Instruction\u003e"
        ]
      ]
    }
  },
  {
    "xcm:VersionedMultiAssets": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "V0",
          "Vec\u003cxcm:v0:multi_asset:MultiAsset\u003e"
        ],
        [
          "V1",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ]
      ]
    }
  },
  {
    "frame_system:limits:BlockLength@134": {
      "type": "string",
      "type_string": "frame_support:weights:PerDispatchClass@135"
    }
  },
  {
    "polkadot_runtime_parachains:inclusion:CandidatePendingAvailability@236": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "core",
          "polkadot_primitives:v1:CoreIndex@55"
        ],
        [
          "hash",
          "polkadot_core_primitives:CandidateHash@64"
        ],
        [
          "descriptor",
          "polkadot_primitives:v1:CandidateDescriptor@47"
        ],
        [
          "availability_votes",
          "BitVec"
        ],
        [
          "backers",
          "BitVec"
        ],
        [
          "relay_parent_number",
          "U32"
        ],
        [
          "backed_in_number",
          "U32"
        ],
        [
          "backing_group",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:scheduler:CoreAssignment@273": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "core",
          "polkadot_primitives:v1:CoreIndex@55"
        ],
        [
          "para_id",
          "U32"
        ],
        [
          "kind",
          "polkadot_runtime_parachains:scheduler:AssignmentKind"
        ],
        [
          "group_idx",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:initializer:BufferedSessionChange@287": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "validators",
          "Vec\u003cpolkadot_primitives:v0:validator_app:Public@189\u003e"
        ],
        [
          "queued",
          "Vec\u003cpolkadot_primitives:v0:validator_app:Public@189\u003e"
        ],
        [
          "session_index",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:v0:Xcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "ReserveAssetDeposit",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "TeleportAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v0:Response\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"U64\"],[\"call\",\"Bytes\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "RelayedFrom",
          "[[\"who\",\"xcm:v0:multi_location:MultiLocation\"],[\"message\",\"xcm:v0:Xcm\"]]"
        ]
      ]
    }
  },
  {
    "frame_support:weights:DispatchInfo@22": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "weight",
          "U64"
        ],
        [
          "class",
          "frame_support:weights:DispatchClass"
        ],
        [
          "pays_fee",
          "frame_support:weights:Pays"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:MultiAssetFilter": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Definite",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ],
        [
          "Wild",
          "xcm:v1:multiasset:WildMultiAsset"
        ]
      ]
    }
  },
  {
    "frame_system:extensions:check_genesis:CheckGenesis@407": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "polkadot_runtime_parachains:scheduler:AssignmentKind": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Parachain",
          "NULL"
        ],
        [
          "Parathread",
          "[[\"col0\",\"[U8; 32]\"],[\"col1\",\"U32\"]]"
        ]
      ]
    }
  },
  {
    "TupleU32[U8; 32]": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "[U8; 32]"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v0:ValidatorIndex@229": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "polkadot_primitives:v0:validator_app:Signature@248": {
      "type": "string",
      "type_string": "[U8; 64]"
    }
  },
  {
    "frame_support:storage:bounded_vec:BoundedVec@166": {
      "type": "string",
      "type_string": "Vec\u003cpallet_balances:ReserveData@167\u003e"
    }
  },
  {
    "polkadot_primitives:v1:InherentData@245": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "bitfields",
          "Vec\u003cpolkadot_primitives:v1:signed:UncheckedSigned@247\u003e"
        ],
        [
          "backed_candidates",
          "Vec\u003cpolkadot_primitives:v1:BackedCandidate@250\u003e"
        ],
        [
          "disputes",
          "Vec\u003cpolkadot_primitives:v1:DisputeStatementSet@255\u003e"
        ],
        [
          "parent_header",
          "sp_runtime:generic:header:Header@154"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:UpgradeRestriction": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Present",
          "0"
        ]
      ]
    }
  },
  {
    "frame_support:PalletId@330": {
      "type": "string",
      "type_string": "[U8; 8]"
    }
  },
  {
    "sp_consensus_slots:EquivocationProof@153": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "offender",
          "[U8; 32]"
        ],
        [
          "slot",
          "U64"
        ],
        [
          "first_header",
          "sp_runtime:generic:header:Header@154"
        ],
        [
          "second_header",
          "sp_runtime:generic:header:Header@154"
        ]
      ]
    }
  },
  {
    "pallet_balances:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "VestingBalance",
          "0"
        ],
        [
          "LiquidityRestrictions",
          "1"
        ],
        [
          "InsufficientBalance",
          "2"
        ],
        [
          "ExistentialDeposit",
          "3"
        ],
        [
          "KeepAlive",
          "4"
        ],
        [
          "ExistingVestingSchedule",
          "5"
        ],
        [
          "DeadAccount",
          "6"
        ],
        [
          "TooManyReserves",
          "7"
        ]
      ]
    }
  },
  {
    "frame_support:weights:DispatchClass": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Normal",
          "0"
        ],
        [
          "Operational",
          "1"
        ],
        [
          "Mandatory",
          "2"
        ]
      ]
    }
  },
  {
    "pallet_grandpa:StoredState": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Live",
          "NULL"
        ],
        [
          "PendingPause",
          "[[\"scheduled_at\",\"U32\"],[\"delay\",\"U32\"]]"
        ],
        [
          "Paused",
          "NULL"
        ],
        [
          "PendingResume",
          "[[\"scheduled_at\",\"U32\"],[\"delay\",\"U32\"]]"
        ]
      ]
    }
  },
  {
    "sp_runtime:MultiSignature": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Ed25519",
          "[U8; 64]"
        ],
        [
          "Sr25519",
          "[U8; 64]"
        ],
        [
          "Ecdsa",
          "[U8; 65]"
        ]
      ]
    }
  },
  {
    "rococo_runtime:validator_manager:RawEvent": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "ValidatorsRegistered",
          "Vec\u003c[U8; 32]\u003e"
        ],
        [
          "ValidatorsDeregistered",
          "Vec\u003c[U8; 32]\u003e"
        ]
      ]
    }
  },
  {
    "frame_support:weights:RuntimeDbWeight@136": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "read",
          "U64"
        ],
        [
          "write",
          "U64"
        ]
      ]
    }
  },
  {
    "rococo_runtime:validator_manager:Error": {
      "type": "enum",
      "type_string": ""
    }
  },
  {
    "pallet_collective:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NotMember",
          "0"
        ],
        [
          "DuplicateProposal",
          "1"
        ],
        [
          "ProposalMissing",
          "2"
        ],
        [
          "WrongIndex",
          "3"
        ],
        [
          "DuplicateVote",
          "4"
        ],
        [
          "AlreadyInitialized",
          "5"
        ],
        [
          "TooEarly",
          "6"
        ],
        [
          "TooManyProposals",
          "7"
        ],
        [
          "WrongProposalWeight",
          "8"
        ],
        [
          "WrongProposalLength",
          "9"
        ]
      ]
    }
  },
  {
    "sp_runtime:TokenError": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NoFunds",
          "0"
        ],
        [
          "WouldDie",
          "1"
        ],
        [
          "BelowMinimum",
          "2"
        ],
        [
          "CannotCreate",
          "3"
        ],
        [
          "UnknownAsset",
          "4"
        ],
        [
          "Frozen",
          "5"
        ],
        [
          "Unsupported",
          "6"
        ]
      ]
    }
  },
  {
    "polkadot_parachain:primitives:HeadData@54": {
      "type": "string",
      "type_string": "Vec\u003cU8\u003e"
    }
  },
  {
    "xcm:v1:multiasset:AssetId": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Concrete",
          "xcm:v1:multilocation:MultiLocation@83"
        ],
        [
          "Abstract",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "sp_runtime:MultiSigner": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Ed25519",
          "[U8; 32]"
        ],
        [
          "Sr25519",
          "[U8; 32]"
        ],
        [
          "Ecdsa",
          "[U8; 33]"
        ]
      ]
    }
  },
  {
    "xcm:v0:Response": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Assets",
          "Vec\u003cxcm:v0:multi_asset:MultiAsset\u003e"
        ]
      ]
    }
  },
  {
    "sp_runtime:generic:digest:ChangesTrieSignal": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NewConfiguration",
          "option\u003csp_core:changes_trie:ChangesTrieConfiguration@17\u003e"
        ]
      ]
    }
  },
  {
    "frame_support:storage:weak_bounded_vec:WeakBoundedVec@162": {
      "type": "string",
      "type_string": "Vec\u003cpallet_balances:BalanceLock@163\u003e"
    }
  },
  {
    "xcm:v0:order:Order": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Null",
          "NULL"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"receive\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"reserve\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v0:multi_asset:MultiAsset\"],[\"weight\",\"U64\"],[\"debt\",\"U64\"],[\"halt_on_error\",\"Bool\"],[\"xcm\",\"Vec\\u003cxcm:v0:Xcm\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "sp_runtime:generic:era:Era": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Immortal",
          "NULL"
        ],
        [
          "Mortal1",
          "U8"
        ],
        [
          "Mortal2",
          "U8"
        ],
        [
          "Mortal3",
          "U8"
        ],
        [
          "Mortal4",
          "U8"
        ],
        [
          "Mortal5",
          "U8"
        ],
        [
          "Mortal6",
          "U8"
        ],
        [
          "Mortal7",
          "U8"
        ],
        [
          "Mortal8",
          "U8"
        ],
        [
          "Mortal9",
          "U8"
        ],
        [
          "Mortal10",
          "U8"
        ],
        [
          "Mortal11",
          "U8"
        ],
        [
          "Mortal12",
          "U8"
        ],
        [
          "Mortal13",
          "U8"
        ],
        [
          "Mortal14",
          "U8"
        ],
        [
          "Mortal15",
          "U8"
        ],
        [
          "Mortal16",
          "U8"
        ],
        [
          "Mortal17",
          "U8"
        ],
        [
          "Mortal18",
          "U8"
        ],
        [
          "Mortal19",
          "U8"
        ],
        [
          "Mortal20",
          "U8"
        ],
        [
          "Mortal21",
          "U8"
        ],
        [
          "Mortal22",
          "U8"
        ],
        [
          "Mortal23",
          "U8"
        ],
        [
          "Mortal24",
          "U8"
        ],
        [
          "Mortal25",
          "U8"
        ],
        [
          "Mortal26",
          "U8"
        ],
        [
          "Mortal27",
          "U8"
        ],
        [
          "Mortal28",
          "U8"
        ],
        [
          "Mortal29",
          "U8"
        ],
        [
          "Mortal30",
          "U8"
        ],
        [
          "Mortal31",
          "U8"
        ],
        [
          "Mortal32",
          "U8"
        ],
        [
          "Mortal33",
          "U8"
        ],
        [
          "Mortal34",
          "U8"
        ],
        [
          "Mortal35",
          "U8"
        ],
        [
          "Mortal36",
          "U8"
        ],
        [
          "Mortal37",
          "U8"
        ],
        [
          "Mortal38",
          "U8"
        ],
        [
          "Mortal39",
          "U8"
        ],
        [
          "Mortal40",
          "U8"
        ],
        [
          "Mortal41",
          "U8"
        ],
        [
          "Mortal42",
          "U8"
        ],
        [
          "Mortal43",
          "U8"
        ],
        [
          "Mortal44",
          "U8"
        ],
        [
          "Mortal45",
          "U8"
        ],
        [
          "Mortal46",
          "U8"
        ],
        [
          "Mortal47",
          "U8"
        ],
        [
          "Mortal48",
          "U8"
        ],
        [
          "Mortal49",
          "U8"
        ],
        [
          "Mortal50",
          "U8"
        ],
        [
          "Mortal51",
          "U8"
        ],
        [
          "Mortal52",
          "U8"
        ],
        [
          "Mortal53",
          "U8"
        ],
        [
          "Mortal54",
          "U8"
        ],
        [
          "Mortal55",
          "U8"
        ],
        [
          "Mortal56",
          "U8"
        ],
        [
          "Mortal57",
          "U8"
        ],
        [
          "Mortal58",
          "U8"
        ],
        [
          "Mortal59",
          "U8"
        ],
        [
          "Mortal60",
          "U8"
        ],
        [
          "Mortal61",
          "U8"
        ],
        [
          "Mortal62",
          "U8"
        ],
        [
          "Mortal63",
          "U8"
        ],
        [
          "Mortal64",
          "U8"
        ],
        [
          "Mortal65",
          "U8"
        ],
        [
          "Mortal66",
          "U8"
        ],
        [
          "Mortal67",
          "U8"
        ],
        [
          "Mortal68",
          "U8"
        ],
        [
          "Mortal69",
          "U8"
        ],
        [
          "Mortal70",
          "U8"
        ],
        [
          "Mortal71",
          "U8"
        ],
        [
          "Mortal72",
          "U8"
        ],
        [
          "Mortal73",
          "U8"
        ],
        [
          "Mortal74",
          "U8"
        ],
        [
          "Mortal75",
          "U8"
        ],
        [
          "Mortal76",
          "U8"
        ],
        [
          "Mortal77",
          "U8"
        ],
        [
          "Mortal78",
          "U8"
        ],
        [
          "Mortal79",
          "U8"
        ],
        [
          "Mortal80",
          "U8"
        ],
        [
          "Mortal81",
          "U8"
        ],
        [
          "Mortal82",
          "U8"
        ],
        [
          "Mortal83",
          "U8"
        ],
        [
          "Mortal84",
          "U8"
        ],
        [
          "Mortal85",
          "U8"
        ],
        [
          "Mortal86",
          "U8"
        ],
        [
          "Mortal87",
          "U8"
        ],
        [
          "Mortal88",
          "U8"
        ],
        [
          "Mortal89",
          "U8"
        ],
        [
          "Mortal90",
          "U8"
        ],
        [
          "Mortal91",
          "U8"
        ],
        [
          "Mortal92",
          "U8"
        ],
        [
          "Mortal93",
          "U8"
        ],
        [
          "Mortal94",
          "U8"
        ],
        [
          "Mortal95",
          "U8"
        ],
        [
          "Mortal96",
          "U8"
        ],
        [
          "Mortal97",
          "U8"
        ],
        [
          "Mortal98",
          "U8"
        ],
        [
          "Mortal99",
          "U8"
        ],
        [
          "Mortal100",
          "U8"
        ],
        [
          "Mortal101",
          "U8"
        ],
        [
          "Mortal102",
          "U8"
        ],
        [
          "Mortal103",
          "U8"
        ],
        [
          "Mortal104",
          "U8"
        ],
        [
          "Mortal105",
          "U8"
        ],
        [
          "Mortal106",
          "U8"
        ],
        [
          "Mortal107",
          "U8"
        ],
        [
          "Mortal108",
          "U8"
        ],
        [
          "Mortal109",
          "U8"
        ],
        [
          "Mortal110",
          "U8"
        ],
        [
          "Mortal111",
          "U8"
        ],
        [
          "Mortal112",
          "U8"
        ],
        [
          "Mortal113",
          "U8"
        ],
        [
          "Mortal114",
          "U8"
        ],
        [
          "Mortal115",
          "U8"
        ],
        [
          "Mortal116",
          "U8"
        ],
        [
          "Mortal117",
          "U8"
        ],
        [
          "Mortal118",
          "U8"
        ],
        [
          "Mortal119",
          "U8"
        ],
        [
          "Mortal120",
          "U8"
        ],
        [
          "Mortal121",
          "U8"
        ],
        [
          "Mortal122",
          "U8"
        ],
        [
          "Mortal123",
          "U8"
        ],
        [
          "Mortal124",
          "U8"
        ],
        [
          "Mortal125",
          "U8"
        ],
        [
          "Mortal126",
          "U8"
        ],
        [
          "Mortal127",
          "U8"
        ],
        [
          "Mortal128",
          "U8"
        ],
        [
          "Mortal129",
          "U8"
        ],
        [
          "Mortal130",
          "U8"
        ],
        [
          "Mortal131",
          "U8"
        ],
        [
          "Mortal132",
          "U8"
        ],
        [
          "Mortal133",
          "U8"
        ],
        [
          "Mortal134",
          "U8"
        ],
        [
          "Mortal135",
          "U8"
        ],
        [
          "Mortal136",
          "U8"
        ],
        [
          "Mortal137",
          "U8"
        ],
        [
          "Mortal138",
          "U8"
        ],
        [
          "Mortal139",
          "U8"
        ],
        [
          "Mortal140",
          "U8"
        ],
        [
          "Mortal141",
          "U8"
        ],
        [
          "Mortal142",
          "U8"
        ],
        [
          "Mortal143",
          "U8"
        ],
        [
          "Mortal144",
          "U8"
        ],
        [
          "Mortal145",
          "U8"
        ],
        [
          "Mortal146",
          "U8"
        ],
        [
          "Mortal147",
          "U8"
        ],
        [
          "Mortal148",
          "U8"
        ],
        [
          "Mortal149",
          "U8"
        ],
        [
          "Mortal150",
          "U8"
        ],
        [
          "Mortal151",
          "U8"
        ],
        [
          "Mortal152",
          "U8"
        ],
        [
          "Mortal153",
          "U8"
        ],
        [
          "Mortal154",
          "U8"
        ],
        [
          "Mortal155",
          "U8"
        ],
        [
          "Mortal156",
          "U8"
        ],
        [
          "Mortal157",
          "U8"
        ],
        [
          "Mortal158",
          "U8"
        ],
        [
          "Mortal159",
          "U8"
        ],
        [
          "Mortal160",
          "U8"
        ],
        [
          "Mortal161",
          "U8"
        ],
        [
          "Mortal162",
          "U8"
        ],
        [
          "Mortal163",
          "U8"
        ],
        [
          "Mortal164",
          "U8"
        ],
        [
          "Mortal165",
          "U8"
        ],
        [
          "Mortal166",
          "U8"
        ],
        [
          "Mortal167",
          "U8"
        ],
        [
          "Mortal168",
          "U8"
        ],
        [
          "Mortal169",
          "U8"
        ],
        [
          "Mortal170",
          "U8"
        ],
        [
          "Mortal171",
          "U8"
        ],
        [
          "Mortal172",
          "U8"
        ],
        [
          "Mortal173",
          "U8"
        ],
        [
          "Mortal174",
          "U8"
        ],
        [
          "Mortal175",
          "U8"
        ],
        [
          "Mortal176",
          "U8"
        ],
        [
          "Mortal177",
          "U8"
        ],
        [
          "Mortal178",
          "U8"
        ],
        [
          "Mortal179",
          "U8"
        ],
        [
          "Mortal180",
          "U8"
        ],
        [
          "Mortal181",
          "U8"
        ],
        [
          "Mortal182",
          "U8"
        ],
        [
          "Mortal183",
          "U8"
        ],
        [
          "Mortal184",
          "U8"
        ],
        [
          "Mortal185",
          "U8"
        ],
        [
          "Mortal186",
          "U8"
        ],
        [
          "Mortal187",
          "U8"
        ],
        [
          "Mortal188",
          "U8"
        ],
        [
          "Mortal189",
          "U8"
        ],
        [
          "Mortal190",
          "U8"
        ],
        [
          "Mortal191",
          "U8"
        ],
        [
          "Mortal192",
          "U8"
        ],
        [
          "Mortal193",
          "U8"
        ],
        [
          "Mortal194",
          "U8"
        ],
        [
          "Mortal195",
          "U8"
        ],
        [
          "Mortal196",
          "U8"
        ],
        [
          "Mortal197",
          "U8"
        ],
        [
          "Mortal198",
          "U8"
        ],
        [
          "Mortal199",
          "U8"
        ],
        [
          "Mortal200",
          "U8"
        ],
        [
          "Mortal201",
          "U8"
        ],
        [
          "Mortal202",
          "U8"
        ],
        [
          "Mortal203",
          "U8"
        ],
        [
          "Mortal204",
          "U8"
        ],
        [
          "Mortal205",
          "U8"
        ],
        [
          "Mortal206",
          "U8"
        ],
        [
          "Mortal207",
          "U8"
        ],
        [
          "Mortal208",
          "U8"
        ],
        [
          "Mortal209",
          "U8"
        ],
        [
          "Mortal210",
          "U8"
        ],
        [
          "Mortal211",
          "U8"
        ],
        [
          "Mortal212",
          "U8"
        ],
        [
          "Mortal213",
          "U8"
        ],
        [
          "Mortal214",
          "U8"
        ],
        [
          "Mortal215",
          "U8"
        ],
        [
          "Mortal216",
          "U8"
        ],
        [
          "Mortal217",
          "U8"
        ],
        [
          "Mortal218",
          "U8"
        ],
        [
          "Mortal219",
          "U8"
        ],
        [
          "Mortal220",
          "U8"
        ],
        [
          "Mortal221",
          "U8"
        ],
        [
          "Mortal222",
          "U8"
        ],
        [
          "Mortal223",
          "U8"
        ],
        [
          "Mortal224",
          "U8"
        ],
        [
          "Mortal225",
          "U8"
        ],
        [
          "Mortal226",
          "U8"
        ],
        [
          "Mortal227",
          "U8"
        ],
        [
          "Mortal228",
          "U8"
        ],
        [
          "Mortal229",
          "U8"
        ],
        [
          "Mortal230",
          "U8"
        ],
        [
          "Mortal231",
          "U8"
        ],
        [
          "Mortal232",
          "U8"
        ],
        [
          "Mortal233",
          "U8"
        ],
        [
          "Mortal234",
          "U8"
        ],
        [
          "Mortal235",
          "U8"
        ],
        [
          "Mortal236",
          "U8"
        ],
        [
          "Mortal237",
          "U8"
        ],
        [
          "Mortal238",
          "U8"
        ],
        [
          "Mortal239",
          "U8"
        ],
        [
          "Mortal240",
          "U8"
        ],
        [
          "Mortal241",
          "U8"
        ],
        [
          "Mortal242",
          "U8"
        ],
        [
          "Mortal243",
          "U8"
        ],
        [
          "Mortal244",
          "U8"
        ],
        [
          "Mortal245",
          "U8"
        ],
        [
          "Mortal246",
          "U8"
        ],
        [
          "Mortal247",
          "U8"
        ],
        [
          "Mortal248",
          "U8"
        ],
        [
          "Mortal249",
          "U8"
        ],
        [
          "Mortal250",
          "U8"
        ],
        [
          "Mortal251",
          "U8"
        ],
        [
          "Mortal252",
          "U8"
        ],
        [
          "Mortal253",
          "U8"
        ],
        [
          "Mortal254",
          "U8"
        ],
        [
          "Mortal255",
          "U8"
        ]
      ]
    }
  },
  {
    "frame_system:extensions:check_mortality:CheckMortality@408": {
      "type": "string",
      "type_string": "sp_runtime:generic:era:Era"
    }
  },
  {
    "xcm:v2:Response": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Null",
          "NULL"
        ],
        [
          "Assets",
          "Vec\u003cxcm:v1:multiasset:MultiAsset@98\u003e"
        ],
        [
          "ExecutionResult",
          "Results\u003cNULL,TupleU32xcm:v2:traits:Error\u003e"
        ],
        [
          "Version",
          "U32"
        ]
      ]
    }
  },
  {
    "pallet_indices:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NotAssigned",
          "0"
        ],
        [
          "NotOwner",
          "1"
        ],
        [
          "InUse",
          "2"
        ],
        [
          "NotTransfer",
          "3"
        ],
        [
          "Permanent",
          "4"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CandidateReceipt@46": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "descriptor",
          "polkadot_primitives:v1:CandidateDescriptor@47"
        ],
        [
          "commitments_hash",
          "[U8; 32]"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:hrmp:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "OpenHrmpChannelToSelf",
          "0"
        ],
        [
          "OpenHrmpChannelInvalidRecipient",
          "1"
        ],
        [
          "OpenHrmpChannelZeroCapacity",
          "2"
        ],
        [
          "OpenHrmpChannelCapacityExceedsLimit",
          "3"
        ],
        [
          "OpenHrmpChannelZeroMessageSize",
          "4"
        ],
        [
          "OpenHrmpChannelMessageSizeExceedsLimit",
          "5"
        ],
        [
          "OpenHrmpChannelAlreadyExists",
          "6"
        ],
        [
          "OpenHrmpChannelAlreadyRequested",
          "7"
        ],
        [
          "OpenHrmpChannelLimitExceeded",
          "8"
        ],
        [
          "AcceptHrmpChannelDoesntExist",
          "9"
        ],
        [
          "AcceptHrmpChannelAlreadyConfirmed",
          "10"
        ],
        [
          "AcceptHrmpChannelLimitExceeded",
          "11"
        ],
        [
          "CloseHrmpChannelUnauthorized",
          "12"
        ],
        [
          "CloseHrmpChannelDoesntExist",
          "13"
        ],
        [
          "CloseHrmpChannelAlreadyUnderway",
          "14"
        ],
        [
          "CancelHrmpOpenChannelUnauthorized",
          "15"
        ],
        [
          "OpenHrmpChannelDoesntExist",
          "16"
        ],
        [
          "OpenHrmpChannelAlreadyConfirmed",
          "17"
        ]
      ]
    }
  },
  {
    "pallet_babe:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidEquivocationProof",
          "0"
        ],
        [
          "InvalidKeyOwnershipProof",
          "1"
        ],
        [
          "DuplicateOffenceReport",
          "2"
        ]
      ]
    }
  },
  {
    "frame_support:storage:bounded_vec:BoundedVec@383": {
      "type": "string",
      "type_string": "Vec\u003cpallet_proxy:ProxyDefinition@384\u003e"
    }
  },
  {
    "sp_session:MembershipProof@156": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "session",
          "U32"
        ],
        [
          "trie_nodes",
          "Vec\u003cVec\u003cU8\u003e\u003e"
        ],
        [
          "validator_count",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:inclusion:AvailabilityBitfieldRecord@232": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "bitfield",
          "BitVec"
        ],
        [
          "submitted_at",
          "U32"
        ]
      ]
    }
  },
  {
    "pallet_authorship:UncleEntryItem": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InclusionHeight",
          "U32"
        ],
        [
          "Uncle",
          "[[\"col0\",\"[U8; 32]\"],[\"col1\",\"option\\u003c[U8; 32]\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:BackedCandidate@250": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "candidate",
          "polkadot_primitives:v1:CommittedCandidateReceipt@251"
        ],
        [
          "validity_votes",
          "Vec\u003cpolkadot_primitives:v0:ValidityAttestation\u003e"
        ],
        [
          "validator_indices",
          "BitVec"
        ]
      ]
    }
  },
  {
    "xcm:v0:Xcm": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "WithdrawAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "ReserveAssetDeposit",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "TeleportAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "QueryResponse",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"response\",\"xcm:v0:Response\"]]"
        ],
        [
          "TransferAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"]]"
        ],
        [
          "TransferReserveAsset",
          "[[\"assets\",\"Vec\\u003cxcm:v0:multi_asset:MultiAsset\\u003e\"],[\"dest\",\"xcm:v0:multi_location:MultiLocation\"],[\"effects\",\"Vec\\u003cxcm:v0:order:Order\\u003e\"]]"
        ],
        [
          "Transact",
          "[[\"origin_type\",\"xcm:v0:OriginKind\"],[\"require_weight_at_most\",\"U64\"],[\"call\",\"Bytes\"]]"
        ],
        [
          "HrmpNewChannelOpenRequest",
          "[[\"sender\",\"compact\\u003cU32\\u003e\"],[\"max_message_size\",\"compact\\u003cU32\\u003e\"],[\"max_capacity\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "HrmpChannelAccepted",
          "compact\u003cU32\u003e"
        ],
        [
          "HrmpChannelClosing",
          "[[\"initiator\",\"compact\\u003cU32\\u003e\"],[\"sender\",\"compact\\u003cU32\\u003e\"],[\"recipient\",\"compact\\u003cU32\\u003e\"]]"
        ],
        [
          "RelayedFrom",
          "[[\"who\",\"xcm:v0:multi_location:MultiLocation\"],[\"message\",\"xcm:v0:Xcm\"]]"
        ]
      ]
    }
  },
  {
    "pallet_im_online:sr25519:app_sr25519:Public@40": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "frame_support:weights:PerDispatchClass@131": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "normal",
          "frame_system:limits:WeightsPerClass@132"
        ],
        [
          "operational",
          "frame_system:limits:WeightsPerClass@132"
        ],
        [
          "mandatory",
          "frame_system:limits:WeightsPerClass@132"
        ]
      ]
    }
  },
  {
    "TupleU64U64U32": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U64"
        ],
        [
          "col2",
          "U64"
        ],
        [
          "col3",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:v1:order:Order": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Noop",
          "NULL"
        ],
        [
          "DepositAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"U32\"],[\"beneficiary\",\"xcm:v1:multilocation:MultiLocation@83\"]]"
        ],
        [
          "DepositReserveAsset",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"max_assets\",\"U32\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "ExchangeAsset",
          "[[\"give\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"receive\",\"Vec\\u003cxcm:v1:multiasset:MultiAsset@98\\u003e\"]]"
        ],
        [
          "InitiateReserveWithdraw",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"reserve\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "InitiateTeleport",
          "[[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"effects\",\"Vec\\u003cxcm:v1:order:Order\\u003e\"]]"
        ],
        [
          "QueryHolding",
          "[[\"query_id\",\"compact\\u003cU64\\u003e\"],[\"dest\",\"xcm:v1:multilocation:MultiLocation@83\"],[\"assets\",\"xcm:v1:multiasset:MultiAssetFilter\"]]"
        ],
        [
          "BuyExecution",
          "[[\"fees\",\"xcm:v1:multiasset:MultiAsset@98\"],[\"weight\",\"U64\"],[\"debt\",\"U64\"],[\"halt_on_error\",\"Bool\"],[\"instructions\",\"Vec\\u003cxcm:v1:Xcm\\u003e\"]]"
        ]
      ]
    }
  },
  {
    "TupleU32polkadot_core_primitives:CandidateHash@64": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "col1",
          "U32"
        ],
        [
          "col2",
          "polkadot_core_primitives:CandidateHash@64"
        ]
      ]
    }
  },
  {
    "frame_system:extensions:check_tx_version:CheckTxVersion@406": {
      "type": "struct",
      "type_string": ""
    }
  },
  {
    "polkadot_core_primitives:CandidateHash@64": {
      "type": "string",
      "type_string": "[U8; 32]"
    }
  },
  {
    "sp_consensus_babe:BabeEpochConfiguration@151": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "c",
          "TupleU64U64"
        ],
        [
          "allowed_slots",
          "sp_consensus_babe:AllowedSlots"
        ]
      ]
    }
  },
  {
    "pallet_im_online:Heartbeat@218": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "block_number",
          "U32"
        ],
        [
          "network_state",
          "sp_core:offchain:OpaqueNetworkState@219"
        ],
        [
          "session_index",
          "U32"
        ],
        [
          "authority_index",
          "U32"
        ],
        [
          "validators_len",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:configuration:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidNewValue",
          "0"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CoreOccupied": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Parathread",
          "polkadot_primitives:v1:ParathreadEntry@266"
        ],
        [
          "Parachain",
          "NULL"
        ]
      ]
    }
  },
  {
    "pallet_proxy:ProxyDefinition@384": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "delegate",
          "[U8; 32]"
        ],
        [
          "proxy_type",
          "rococo_runtime:ProxyType"
        ],
        [
          "delay",
          "U32"
        ]
      ]
    }
  },
  {
    "xcm:v0:multi_asset:MultiAsset": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "None",
          "NULL"
        ],
        [
          "All",
          "NULL"
        ],
        [
          "AllFungible",
          "NULL"
        ],
        [
          "AllNonFungible",
          "NULL"
        ],
        [
          "AllAbstractFungible",
          "Vec\u003cU8\u003e"
        ],
        [
          "AllAbstractNonFungible",
          "Vec\u003cU8\u003e"
        ],
        [
          "AllConcreteFungible",
          "xcm:v0:multi_location:MultiLocation"
        ],
        [
          "AllConcreteNonFungible",
          "xcm:v0:multi_location:MultiLocation"
        ],
        [
          "AbstractFungible",
          "[[\"id\",\"Bytes\"],[\"amount\",\"compact\\u003cU128\\u003e\"]]"
        ],
        [
          "AbstractNonFungible",
          "[[\"class\",\"Bytes\"],[\"instance\",\"xcm:v1:multiasset:AssetInstance\"]]"
        ],
        [
          "ConcreteFungible",
          "[[\"id\",\"xcm:v0:multi_location:MultiLocation\"],[\"amount\",\"compact\\u003cU128\\u003e\"]]"
        ],
        [
          "ConcreteNonFungible",
          "[[\"class\",\"xcm:v0:multi_location:MultiLocation\"],[\"instance\",\"xcm:v1:multiasset:AssetInstance\"]]"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_parachains:hrmp:HrmpOpenChannelRequest@295": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "confirmed",
          "Bool"
        ],
        [
          "_age",
          "U32"
        ],
        [
          "sender_deposit",
          "U128"
        ],
        [
          "max_message_size",
          "U32"
        ],
        [
          "max_capacity",
          "U32"
        ],
        [
          "max_total_size",
          "U32"
        ]
      ]
    }
  },
  {
    "polkadot_primitives:v1:CoreIndex@55": {
      "type": "string",
      "type_string": "U32"
    }
  },
  {
    "xcm:v2:WeightLimit": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Unlimited",
          "NULL"
        ],
        [
          "Limited",
          "compact\u003cU64\u003e"
        ]
      ]
    }
  },
  {
    "xcm:v1:multiasset:AssetInstance": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Undefined",
          "NULL"
        ],
        [
          "Index",
          "compact\u003cU128\u003e"
        ],
        [
          "Array4",
          "[U8; 4]"
        ],
        [
          "Array8",
          "[U8; 8]"
        ],
        [
          "Array16",
          "[U8; 16]"
        ],
        [
          "Array32",
          "[U8; 32]"
        ],
        [
          "Blob",
          "Vec\u003cU8\u003e"
        ]
      ]
    }
  },
  {
    "frame_system:LastRuntimeUpgradeInfo@123": {
      "type": "struct",
      "type_string": "",
      "type_mapping": [
        [
          "spec_version",
          "compact\u003cU32\u003e"
        ],
        [
          "spec_name",
          "Str"
        ]
      ]
    }
  },
  {
    "polkadot_runtime_common:paras_registrar:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "NotRegistered",
          "0"
        ],
        [
          "AlreadyRegistered",
          "1"
        ],
        [
          "NotOwner",
          "2"
        ],
        [
          "CodeTooLarge",
          "3"
        ],
        [
          "HeadDataTooLarge",
          "4"
        ],
        [
          "NotParachain",
          "5"
        ],
        [
          "NotParathread",
          "6"
        ],
        [
          "CannotDeregister",
          "7"
        ],
        [
          "CannotDowngrade",
          "8"
        ],
        [
          "CannotUpgrade",
          "9"
        ],
        [
          "ParaLocked",
          "10"
        ],
        [
          "NotReserved",
          "11"
        ]
      ]
    }
  },
  {
    "pallet_membership:pallet:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "AlreadyMember",
          "0"
        ],
        [
          "NotMember",
          "1"
        ]
      ]
    }
  },
  {
    "xcm:v0:junction:BodyId": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "Unit",
          "NULL"
        ],
        [
          "Named",
          "Vec\u003cU8\u003e"
        ],
        [
          "Index",
          "compact\u003cU32\u003e"
        ],
        [
          "Executive",
          "NULL"
        ],
        [
          "Technical",
          "NULL"
        ],
        [
          "Legislative",
          "NULL"
        ],
        [
          "Judicial",
          "NULL"
        ]
      ]
    }
  },
  {
    "pallet_session:Error": {
      "type": "enum",
      "type_string": "",
      "type_mapping": [
        [
          "InvalidProof",
          "0"
        ],
        [
          "NoAssociatedValidatorId",
          "1"
        ],
        [
          "DuplicatedKey",
          "2"
        ],
        [
          "NoKeys",
          "3"
        ],
        [
          "NoAccount",
          "4"
        ]
      ]
    }
  }
]