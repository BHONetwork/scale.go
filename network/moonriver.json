{
  "Weight": "u64",
  "CompactAssignments": "CompactAssignmentsLatest",
  "RefCount": "u32",
  "RoundInfo": {
    "type_mapping": [
      [
        "current",
        "RoundIndex"
      ],
      [
        "first",
        "BlockNumber"
      ],
      [
        "length",
        "u32"
      ]
    ],
    "type": "struct"
  },
  "Candidate": {
    "type_mapping": [
      [
        "id",
        "AccountId"
      ],
      [
        "fee",
        "Perbill"
      ],
      [
        "bond",
        "Balance"
      ],
      [
        "nominators",
        "Vec<Bond>"
      ],
      [
        "total",
        "Balance"
      ],
      [
        "state",
        "CollatorStatus"
      ]
    ],
    "type": "struct"
  },
  "RewardInfo": {
    "type_mapping": [
      [
        "total_reward",
        "Balance"
      ],
      [
        "claimed_reward",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "TxPoolResultStatus": {
    "type_mapping": [
      [
        "pending",
        "U256"
      ],
      [
        "queued",
        "U256"
      ]
    ],
    "type": "struct"
  },
  "CollatorStatus": {
    "type_mapping": [
      [
        "Active",
        "NULL"
      ],
      [
        "Idle",
        "Null"
      ],
      [
        "Leaving",
        "RoundIndex"
      ]
    ],
    "type": "enum"
  },
  "PoolTransaction": {
    "type_mapping": [
      [
        "hash",
        "H256"
      ],
      [
        "nonce",
        "U256"
      ],
      [
        "block_hash",
        "Option<H256>"
      ],
      [
        "block_number",
        "Option<U256>"
      ],
      [
        "from",
        "H160"
      ],
      [
        "to",
        "Option<H160>"
      ],
      [
        "value",
        "U256"
      ],
      [
        "gas_price",
        "U256"
      ],
      [
        "gas",
        "U256"
      ],
      [
        "input",
        "Bytes"
      ]
    ],
    "type": "struct"
  },
  "AccountInfo": "AccountInfoWithTripleRefCount",
  "Collator2": {
    "type_mapping": [
      [
        "id",
        "AccountId"
      ],
      [
        "bond",
        "Balance"
      ],
      [
        "nominators",
        "Vec<AccountId>"
      ],
      [
        "top_nominators",
        "Vec<Bond>"
      ],
      [
        "bottom_nominators",
        "Vec<Bond>"
      ],
      [
        "total_counted",
        "Balance"
      ],
      [
        "total_backing",
        "Balance"
      ],
      [
        "state",
        "CollatorStatus"
      ]
    ],
    "type": "struct"
  },
  "ExtrinsicSignature": "EthereumSignature",
  "NominatorAdded": {
    "type": "enum",
    "type_mapping": [
      [
        "AddedToTop",
        "Balance"
      ],
      [
        "AddedToBottom",
        "Null"
      ]
    ]
  },
  "RegistrationInfo": {
    "type_mapping": [
      [
        "account",
        "AccountId"
      ],
      [
        "deposit",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "Collator": {
    "type_mapping": [
      [
        "id",
        "AccountId"
      ],
      [
        "bond",
        "Balance"
      ],
      [
        "nominators",
        "Vec<Bond>"
      ],
      [
        "total",
        "Balance"
      ],
      [
        "state",
        "CollatorStatus"
      ]
    ],
    "type": "struct"
  },
  "CollatorSnapshot": {
    "type_mapping": [
      [
        "bond",
        "Balance"
      ],
      [
        "nominators",
        "Vec<Bond>"
      ],
      [
        "total",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "Address": "AccountId",
  "SystemInherentData": {
    "type_mapping": [
      [
        "validation_data",
        "PersistedValidationData"
      ],
      [
        "relay_chain_state",
        "StorageProof"
      ],
      [
        "downward_messages",
        "Vec<InboundDownwardMessage>"
      ],
      [
        "horizontal_messages",
        "BTreeMap<ParaId, Vec<InboundHrmpMessage>>"
      ]
    ],
    "type": "struct"
  },
  "OrderedSet": "Vec<Bond>",
  "AccountId": "EthereumAccountId",
  "Account": {
    "type_mapping": [
      [
        "nonce",
        "U256"
      ],
      [
        "balance",
        "u128"
      ]
    ],
    "type": "struct"
  },
  "RelayChainAccountId": "AccountId32",
  "LookupSource": "AccountId",
  "InflationInfo": {
    "type_mapping": [
      [
        "expect",
        "RangeBalance"
      ],
      [
        "annual",
        "RangePerbill"
      ],
      [
        "round",
        "RangePerbill"
      ]
    ],
    "type": "struct"
  },
  "AccountId32": "H256",
  "Summary": "Bytes",
  "Range": "RangeBalance",
  "TxPoolResultInspect": {
    "type_mapping": [
      [
        "pending",
        "HashMap<H160, HashMap<U256, Summary>>"
      ],
      [
        "queued",
        "HashMap<H160, HashMap<U256, Summary>>"
      ]
    ],
    "type": "struct"
  },
  "RangeBalance": {
    "type_mapping": [
      [
        "min",
        "Balance"
      ],
      [
        "ideal",
        "Balance"
      ],
      [
        "max",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "RoundIndex": "u32",
  "ParachainBondConfig": {
    "type_mapping": [
      [
        "account",
        "AccountId"
      ],
      [
        "percent",
        "Percent"
      ]
    ],
    "type": "struct"
  },
  "Nominator": {
    "type_mapping": [
      [
        "nominations",
        "Vec<Bond>"
      ],
      [
        "total",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "Balance": "u128",
  "Bond": {
    "type_mapping": [
      [
        "owner",
        "AccountId"
      ],
      [
        "amount",
        "Balance"
      ]
    ],
    "type": "struct"
  },
  "RangePerbill": {
    "type_mapping": [
      [
        "min",
        "Perbill"
      ],
      [
        "ideal",
        "Perbill"
      ],
      [
        "max",
        "Perbill"
      ]
    ],
    "type": "struct"
  },
  "AuthorId": "AccountId32",
  "TxPoolResultContent": {
    "type_mapping": [
      [
        "pending",
        "HashMap<H160, HashMap<U256, PoolTransaction>>"
      ],
      [
        "queued",
        "HashMap<H160, HashMap<U256, PoolTransaction>>"
      ]
    ],
    "type": "struct"
  }
}
