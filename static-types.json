{
  "0": {
    "path": [
      "sp_core",
      "crypto",
      "AccountId32"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 1,
            "typeName": "[u8; 32]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "1": {
    "path": null,
    "def": {
      "Array": {
        "len": 32,
        "type": 2
      }
    },
    "docs": null
  },
  "10": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 2
      }
    },
    "docs": null
  },
  "100": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "Fungibility"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "NonFungible",
            "fields": [
              {
                "type": 101,
                "typeName": "AssetInstance",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "101": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "AssetInstance"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Undefined",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Index",
            "fields": [
              {
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Array4",
            "fields": [
              {
                "type": 14,
                "typeName": "[u8; 4]",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Array8",
            "fields": [
              {
                "type": 102,
                "typeName": "[u8; 8]",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "Array16",
            "fields": [
              {
                "type": 32,
                "typeName": "[u8; 16]",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "Array32",
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Blob",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "102": {
    "path": null,
    "def": {
      "Array": {
        "len": 8,
        "type": 2
      }
    },
    "docs": null
  },
  "103": {
    "path": [
      "xcm",
      "v2",
      "Response"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Null",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Assets",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "ExecutionResult",
            "fields": [
              {
                "type": 104,
                "typeName": "result::Result\u003c(), (u32, Error)\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Version",
            "fields": [
              {
                "type": 4,
                "typeName": "super::Version",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "104": {
    "path": [
      "Result"
    ],
    "params": [
      {
        "name": "T",
        "type": 44
      },
      {
        "name": "E",
        "type": 105
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Ok",
            "fields": [
              {
                "type": 44,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Err",
            "fields": [
              {
                "type": 105,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "105": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        60
      ]
    },
    "docs": null
  },
  "106": {
    "path": [
      "xcm",
      "v0",
      "OriginKind"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Native",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "SovereignAccount",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Superuser",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "Xcm",
            "fields": null,
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "107": {
    "path": [
      "xcm",
      "double_encoded",
      "DoubleEncoded"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "encoded",
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "108": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "MultiAssetFilter"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Definite",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Wild",
            "fields": [
              {
                "type": 109,
                "typeName": "WildMultiAsset",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "109": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "WildMultiAsset"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "All",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "AllOf",
            "fields": [
              {
                "name": "id",
                "type": 99,
                "typeName": "AssetId",
                "docs": null
              },
              {
                "name": "fun",
                "type": 110,
                "typeName": "WildFungibility",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "11": {
    "path": [
      "sp_runtime",
      "generic",
      "digest",
      "Digest"
    ],
    "params": [
      {
        "name": "Hash",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "logs",
            "type": 12,
            "typeName": "Vec\u003cDigestItem\u003cHash\u003e\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "110": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "WildFungibility"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Fungible",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "NonFungible",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "111": {
    "path": [
      "xcm",
      "v2",
      "WeightLimit"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Unlimited",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Limited",
            "fields": [
              {
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "112": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 83
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 83,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "113": {
    "path": [
      "xcm",
      "VersionedMultiAssets"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V0",
            "fields": [
              {
                "type": 114,
                "typeName": "Vec\u003cv0::MultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "V1",
            "fields": [
              {
                "type": 96,
                "typeName": "v1::MultiAssets",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "114": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 115
      }
    },
    "docs": null
  },
  "115": {
    "path": [
      "xcm",
      "v0",
      "multi_asset",
      "MultiAsset"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "All",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "AllFungible",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "AllNonFungible",
            "fields": null,
            "index": 3,
            "docs": null
          },
          {
            "name": "AllAbstractFungible",
            "fields": [
              {
                "name": "id",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "AllAbstractNonFungible",
            "fields": [
              {
                "name": "class",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "AllConcreteFungible",
            "fields": [
              {
                "name": "id",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "AllConcreteNonFungible",
            "fields": [
              {
                "name": "class",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "AbstractFungible",
            "fields": [
              {
                "name": "id",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              },
              {
                "name": "amount",
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "AbstractNonFungible",
            "fields": [
              {
                "name": "class",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              },
              {
                "name": "instance",
                "type": 101,
                "typeName": "AssetInstance",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "ConcreteFungible",
            "fields": [
              {
                "name": "id",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "amount",
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "ConcreteNonFungible",
            "fields": [
              {
                "name": "class",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "instance",
                "type": 101,
                "typeName": "AssetInstance",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "116": {
    "path": [
      "xcm",
      "v0",
      "multi_location",
      "MultiLocation"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Null",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "X1",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "X2",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "X3",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "X4",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "X5",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "X6",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "X7",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "X8",
            "fields": [
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 117,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "117": {
    "path": [
      "xcm",
      "v0",
      "junction",
      "Junction"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Parent",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Parachain",
            "fields": [
              {
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "AccountId32",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "id",
                "type": 1,
                "typeName": "[u8; 32]",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "AccountIndex64",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "index",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "AccountKey20",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "key",
                "type": 89,
                "typeName": "[u8; 20]",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "PalletInstance",
            "fields": [
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "GeneralIndex",
            "fields": [
              {
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "GeneralKey",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "OnlyChild",
            "fields": null,
            "index": 8,
            "docs": null
          },
          {
            "name": "Plurality",
            "fields": [
              {
                "name": "id",
                "type": 91,
                "typeName": "BodyId",
                "docs": null
              },
              {
                "name": "part",
                "type": 92,
                "typeName": "BodyPart",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "118": {
    "path": [
      "xcm",
      "VersionedMultiLocation"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V0",
            "fields": [
              {
                "type": 116,
                "typeName": "v0::MultiLocation",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "V1",
            "fields": [
              {
                "type": 83,
                "typeName": "v1::MultiLocation",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "119": {
    "path": [
      "frame_system",
      "Phase"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ApplyExtrinsic",
            "fields": [
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Finalization",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Initialization",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "12": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 13
      }
    },
    "docs": null
  },
  "120": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 9
      }
    },
    "docs": null
  },
  "121": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 122
      }
    },
    "docs": null
  },
  "122": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        4
      ]
    },
    "docs": null
  },
  "123": {
    "path": [
      "frame_system",
      "LastRuntimeUpgradeInfo"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "spec_version",
            "type": 86,
            "typeName": "codec::Compact\u003cu32\u003e",
            "docs": null
          },
          {
            "name": "spec_name",
            "type": 124,
            "typeName": "sp_runtime::RuntimeString",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "124": {
    "path": null,
    "def": {
      "Primitive": "Str"
    },
    "docs": null
  },
  "125": {
    "path": [
      "frame_system",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "fill_block",
            "fields": [
              {
                "name": "ratio",
                "type": 126,
                "typeName": "Perbill",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A dispatch that will fill the block weight up to the given ratio."
            ]
          },
          {
            "name": "remark",
            "fields": [
              {
                "name": "remark",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Make some on-chain remark.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_heap_pages",
            "fields": [
              {
                "name": "pages",
                "type": 8,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Set the number of pages in the WebAssembly environment's heap.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`",
              "- 1 storage write.",
              "2d2042617365205765696768743a20312e34303520c2b573",
              "- 1 write to HEAP_PAGES",
              "- 1 digest item",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_code",
            "fields": [
              {
                "name": "code",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Set the new runtime code.",
              "",
              "# \u003cweight\u003e",
              "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
              "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
              "  expensive).",
              "- 1 storage write (codec `O(C)`).",
              "- 1 digest item.",
              "- 1 event.",
              "The weight of this function is dependent on the runtime, but generally this is very",
              "expensive. We will treat this as a full block.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_code_without_checks",
            "fields": [
              {
                "name": "code",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Set the new runtime code without doing any checks of the given `code`.",
              "",
              "# \u003cweight\u003e",
              "- `O(C)` where `C` length of `code`",
              "- 1 storage write (codec `O(C)`).",
              "- 1 digest item.",
              "- 1 event.",
              "The weight of this function is dependent on the runtime. We will treat this as a full",
              "block. # \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_changes_trie_config",
            "fields": [
              {
                "name": "changes_trie_config",
                "type": 16,
                "typeName": "Option\u003cChangesTrieConfiguration\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Set the new changes trie configuration.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`",
              "- 1 storage write or delete (codec `O(1)`).",
              "- 1 call to `deposit_log`: Uses `append` API, so O(1)",
              "2d2042617365205765696768743a20372e32313820c2b573",
              "- DB Weight:",
              "    - Writes: Changes Trie, System Digest",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_storage",
            "fields": [
              {
                "name": "items",
                "type": 127,
                "typeName": "Vec\u003cKeyValue\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Set some items of storage.",
              "",
              "# \u003cweight\u003e",
              "- `O(I)` where `I` length of `items`",
              "- `I` storage writes (`O(1)`).",
              "2d2042617365205765696768743a20302e353638202a206920c2b573",
              "- Writes: Number of items",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "kill_storage",
            "fields": [
              {
                "name": "keys",
                "type": 129,
                "typeName": "Vec\u003cKey\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Kill some items from storage.",
              "",
              "# \u003cweight\u003e",
              "- `O(IK)` where `I` length of `keys` and `K` length of one key",
              "- `I` storage deletions.",
              "2d2042617365205765696768743a202e333738202a206920c2b573",
              "- Writes: Number of items",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "kill_prefix",
            "fields": [
              {
                "name": "prefix",
                "type": 10,
                "typeName": "Key",
                "docs": null
              },
              {
                "name": "subkeys",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": [
              "Kill all storage items with a key that starts with the given prefix.",
              "",
              "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
              "the prefix we are removing to accurately calculate the weight of this function.",
              "",
              "# \u003cweight\u003e",
              "- `O(P)` where `P` amount of keys with prefix `prefix`",
              "- `P` storage deletions.",
              "2d2042617365205765696768743a20302e383334202a205020c2b573",
              "- Writes: Number of subkeys + 1",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "remark_with_event",
            "fields": [
              {
                "name": "remark",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 9,
            "docs": [
              "Make some on-chain remark and emit event.",
              "",
              "# \u003cweight\u003e",
              "- `O(b)` where b is the length of the remark.",
              "- 1 event.",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "126": {
    "path": [
      "sp_arithmetic",
      "per_things",
      "Perbill"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "127": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 128
      }
    },
    "docs": null
  },
  "128": {
    "path": null,
    "def": {
      "Tuple": [
        10,
        10
      ]
    },
    "docs": null
  },
  "129": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 10
      }
    },
    "docs": null
  },
  "13": {
    "path": [
      "sp_runtime",
      "generic",
      "digest",
      "DigestItem"
    ],
    "params": [
      {
        "name": "Hash",
        "type": 9
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ChangesTrieRoot",
            "fields": [
              {
                "type": 9,
                "typeName": "Hash",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "PreRuntime",
            "fields": [
              {
                "type": 14,
                "typeName": "ConsensusEngineId",
                "docs": null
              },
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "Consensus",
            "fields": [
              {
                "type": 14,
                "typeName": "ConsensusEngineId",
                "docs": null
              },
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "Seal",
            "fields": [
              {
                "type": 14,
                "typeName": "ConsensusEngineId",
                "docs": null
              },
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "ChangesTrieSignal",
            "fields": [
              {
                "type": 15,
                "typeName": "ChangesTrieSignal",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "Other",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "RuntimeEnvironmentUpdated",
            "fields": null,
            "index": 8,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "130": {
    "path": [
      "frame_system",
      "limits",
      "BlockWeights"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "base_block",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "max_block",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "per_class",
            "type": 131,
            "typeName": "PerDispatchClass\u003cWeightsPerClass\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "131": {
    "path": [
      "frame_support",
      "weights",
      "PerDispatchClass"
    ],
    "params": [
      {
        "name": "T",
        "type": 132
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "normal",
            "type": 132,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "operational",
            "type": 132,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "mandatory",
            "type": 132,
            "typeName": "T",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "132": {
    "path": [
      "frame_system",
      "limits",
      "WeightsPerClass"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "base_extrinsic",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "max_extrinsic",
            "type": 133,
            "typeName": "Option\u003cWeight\u003e",
            "docs": null
          },
          {
            "name": "max_total",
            "type": 133,
            "typeName": "Option\u003cWeight\u003e",
            "docs": null
          },
          {
            "name": "reserved",
            "type": 133,
            "typeName": "Option\u003cWeight\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "133": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 8
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 8,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "134": {
    "path": [
      "frame_system",
      "limits",
      "BlockLength"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "max",
            "type": 135,
            "typeName": "PerDispatchClass\u003cu32\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "135": {
    "path": [
      "frame_support",
      "weights",
      "PerDispatchClass"
    ],
    "params": [
      {
        "name": "T",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "normal",
            "type": 4,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "operational",
            "type": 4,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "mandatory",
            "type": 4,
            "typeName": "T",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "136": {
    "path": [
      "frame_support",
      "weights",
      "RuntimeDbWeight"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "read",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "write",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "137": {
    "path": [
      "sp_version",
      "RuntimeVersion"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "spec_name",
            "type": 124,
            "typeName": "RuntimeString",
            "docs": null
          },
          {
            "name": "impl_name",
            "type": 124,
            "typeName": "RuntimeString",
            "docs": null
          },
          {
            "name": "authoring_version",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "spec_version",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "impl_version",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "apis",
            "type": 138,
            "typeName": "ApisVec",
            "docs": null
          },
          {
            "name": "transaction_version",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "138": {
    "path": [
      "Cow"
    ],
    "params": [
      {
        "name": "T",
        "type": 139
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 139,
            "typeName": "",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "139": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 140
      }
    },
    "docs": null
  },
  "14": {
    "path": null,
    "def": {
      "Array": {
        "len": 4,
        "type": 2
      }
    },
    "docs": null
  },
  "140": {
    "path": null,
    "def": {
      "Tuple": [
        102,
        4
      ]
    },
    "docs": null
  },
  "141": {
    "path": [
      "frame_system",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidSpecName",
            "fields": null,
            "index": 0,
            "docs": [
              "The name of specification does not match between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "name": "SpecVersionNeedsToIncrease",
            "fields": null,
            "index": 1,
            "docs": [
              "The specification version is not allowed to decrease between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "name": "FailedToExtractRuntimeVersion",
            "fields": null,
            "index": 2,
            "docs": [
              "Failed to extract the runtime version from the new runtime.",
              "",
              "Either calling `Core_version` or decoding `RuntimeVersion` failed."
            ]
          },
          {
            "name": "NonDefaultComposite",
            "fields": null,
            "index": 3,
            "docs": [
              "Suicide called when the account has non-default composite data."
            ]
          },
          {
            "name": "NonZeroRefCount",
            "fields": null,
            "index": 4,
            "docs": [
              "There is a non-zero reference count preventing the account from being purged."
            ]
          }
        ]
      }
    },
    "docs": [
      "Error for the System pallet"
    ]
  },
  "142": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 143
      }
    },
    "docs": null
  },
  "143": {
    "path": null,
    "def": {
      "Tuple": [
        144,
        8
      ]
    },
    "docs": null
  },
  "144": {
    "path": [
      "sp_consensus_babe",
      "app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "145": {
    "path": [
      "sp_consensus_slots",
      "Slot"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 8,
            "typeName": "u64",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "146": {
    "path": [
      "sp_consensus_babe",
      "digests",
      "NextConfigDescriptor"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V1",
            "fields": [
              {
                "name": "c",
                "type": 147,
                "typeName": "(u64, u64)",
                "docs": null
              },
              {
                "name": "allowed_slots",
                "type": 148,
                "typeName": "AllowedSlots",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "147": {
    "path": null,
    "def": {
      "Tuple": [
        8,
        8
      ]
    },
    "docs": null
  },
  "148": {
    "path": [
      "sp_consensus_babe",
      "AllowedSlots"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "PrimarySlots",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "PrimaryAndSecondaryPlainSlots",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "PrimaryAndSecondaryVRFSlots",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "149": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 1
      }
    },
    "docs": null
  },
  "15": {
    "path": [
      "sp_runtime",
      "generic",
      "digest",
      "ChangesTrieSignal"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NewConfiguration",
            "fields": [
              {
                "type": 16,
                "typeName": "Option\u003cChangesTrieConfiguration\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "150": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 1
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 1,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "151": {
    "path": [
      "sp_consensus_babe",
      "BabeEpochConfiguration"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "c",
            "type": 147,
            "typeName": "(u64, u64)",
            "docs": null
          },
          {
            "name": "allowed_slots",
            "type": 148,
            "typeName": "AllowedSlots",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "152": {
    "path": [
      "pallet_babe",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "report_equivocation",
            "fields": [
              {
                "name": "equivocation_proof",
                "type": 153,
                "typeName": "Box\u003cEquivocationProof\u003cT::Header\u003e\u003e",
                "docs": null
              },
              {
                "name": "key_owner_proof",
                "type": 156,
                "typeName": "T::KeyOwnerProof",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Report authority equivocation/misbehavior. This method will verify",
              "the equivocation proof and validate the given key ownership proof",
              "against the extracted offender. If both are valid, the offence will",
              "be reported."
            ]
          },
          {
            "name": "report_equivocation_unsigned",
            "fields": [
              {
                "name": "equivocation_proof",
                "type": 153,
                "typeName": "Box\u003cEquivocationProof\u003cT::Header\u003e\u003e",
                "docs": null
              },
              {
                "name": "key_owner_proof",
                "type": 156,
                "typeName": "T::KeyOwnerProof",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Report authority equivocation/misbehavior. This method will verify",
              "the equivocation proof and validate the given key ownership proof",
              "against the extracted offender. If both are valid, the offence will",
              "be reported.",
              "This extrinsic must be called unsigned and it is expected that only",
              "block authors will call it (validated in `ValidateUnsigned`), as such",
              "if the block author is defined it will be defined as the equivocation",
              "reporter."
            ]
          },
          {
            "name": "plan_config_change",
            "fields": [
              {
                "name": "config",
                "type": 146,
                "typeName": "NextConfigDescriptor",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Plan an epoch config change. The epoch config change is recorded and will be enacted on",
              "the next call to `enact_epoch_change`. The config will be activated one epoch after.",
              "Multiple calls to this method will replace any existing planned config change that had",
              "not been enacted yet."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "153": {
    "path": [
      "sp_consensus_slots",
      "EquivocationProof"
    ],
    "params": [
      {
        "name": "Header",
        "type": 154
      },
      {
        "name": "Id",
        "type": 144
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "offender",
            "type": 144,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "slot",
            "type": 145,
            "typeName": "Slot",
            "docs": null
          },
          {
            "name": "first_header",
            "type": 154,
            "typeName": "Header",
            "docs": null
          },
          {
            "name": "second_header",
            "type": 154,
            "typeName": "Header",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "154": {
    "path": [
      "sp_runtime",
      "generic",
      "header",
      "Header"
    ],
    "params": [
      {
        "name": "Number",
        "type": 4
      },
      {
        "name": "Hash",
        "type": 155
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "parent_hash",
            "type": 9,
            "typeName": "Hash::Output",
            "docs": null
          },
          {
            "name": "number",
            "type": 86,
            "typeName": "Number",
            "docs": null
          },
          {
            "name": "state_root",
            "type": 9,
            "typeName": "Hash::Output",
            "docs": null
          },
          {
            "name": "extrinsics_root",
            "type": 9,
            "typeName": "Hash::Output",
            "docs": null
          },
          {
            "name": "digest",
            "type": 11,
            "typeName": "Digest\u003cHash::Output\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "155": {
    "path": [
      "sp_runtime",
      "traits",
      "BlakeTwo256"
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "156": {
    "path": [
      "sp_session",
      "MembershipProof"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "session",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          },
          {
            "name": "trie_nodes",
            "type": 129,
            "typeName": "Vec\u003cVec\u003cu8\u003e\u003e",
            "docs": null
          },
          {
            "name": "validator_count",
            "type": 4,
            "typeName": "ValidatorCount",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "157": {
    "path": [
      "pallet_babe",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidEquivocationProof",
            "fields": null,
            "index": 0,
            "docs": [
              "An equivocation proof provided as part of an equivocation report is invalid."
            ]
          },
          {
            "name": "InvalidKeyOwnershipProof",
            "fields": null,
            "index": 1,
            "docs": [
              "A key ownership proof provided as part of an equivocation report is invalid."
            ]
          },
          {
            "name": "DuplicateOffenceReport",
            "fields": null,
            "index": 2,
            "docs": [
              "A given equivocation report is valid but already previously reported."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "158": {
    "path": [
      "pallet_timestamp",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "set",
            "fields": [
              {
                "name": "now",
                "type": 88,
                "typeName": "T::Moment",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Set the current time.",
              "",
              "This call should be invoked exactly once per block. It will panic at the finalization",
              "phase, if this call hasn't been invoked by that time.",
              "",
              "The timestamp should be greater than the previous one by the amount specified by",
              "`MinimumPeriod`.",
              "",
              "The dispatch origin for this call must be `Inherent`.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
              "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
              "  `on_finalize`)",
              "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "159": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        6,
        76
      ]
    },
    "docs": null
  },
  "16": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 17
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 17,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "160": {
    "path": [
      "pallet_indices",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "claim",
            "fields": [
              {
                "name": "index",
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Assign an previously unassigned index.",
              "",
              "Payment: `Deposit` is reserved from the sender account.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "- `index`: the index to be claimed. This must not be in use.",
              "",
              "Emits `IndexAssigned` if successful.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`.",
              "- One storage mutation (codec `O(1)`).",
              "- One reserve operation.",
              "- One event.",
              "-------------------",
              "- DB Weight: 1 Read/Write (Accounts)",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "transfer",
            "fields": [
              {
                "name": "new",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "index",
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Assign an index already owned by the sender to another account. The balance reservation",
              "is effectively transferred to the new account.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "- `index`: the index to be re-assigned. This must be owned by the sender.",
              "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
              "",
              "Emits `IndexAssigned` if successful.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`.",
              "- One storage mutation (codec `O(1)`).",
              "- One transfer operation.",
              "- One event.",
              "-------------------",
              "- DB Weight:",
              "   - Reads: Indices Accounts, System Account (recipient)",
              "   - Writes: Indices Accounts, System Account (recipient)",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "free",
            "fields": [
              {
                "name": "index",
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Free up an index owned by the sender.",
              "",
              "Payment: Any previous deposit placed for the index is unreserved in the sender account.",
              "",
              "The dispatch origin for this call must be _Signed_ and the sender must own the index.",
              "",
              "- `index`: the index to be freed. This must be owned by the sender.",
              "",
              "Emits `IndexFreed` if successful.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`.",
              "- One storage mutation (codec `O(1)`).",
              "- One reserve operation.",
              "- One event.",
              "-------------------",
              "- DB Weight: 1 Read/Write (Accounts)",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "force_transfer",
            "fields": [
              {
                "name": "new",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "index",
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              },
              {
                "name": "freeze",
                "type": 76,
                "typeName": "bool",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Force an index to an account. This doesn't require a deposit. If the index is already",
              "held, then any deposit is reimbursed to its current owner.",
              "",
              "The dispatch origin for this call must be _Root_.",
              "",
              "- `index`: the index to be (re-)assigned.",
              "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
              "- `freeze`: if set to `true`, will freeze the index so it cannot be transferred.",
              "",
              "Emits `IndexAssigned` if successful.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`.",
              "- One storage mutation (codec `O(1)`).",
              "- Up to one reserve operation.",
              "- One event.",
              "-------------------",
              "- DB Weight:",
              "   - Reads: Indices Accounts, System Account (original owner)",
              "   - Writes: Indices Accounts, System Account (original owner)",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "freeze",
            "fields": [
              {
                "name": "index",
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Freeze an index so it will always point to the sender account. This consumes the",
              "deposit.",
              "",
              "The dispatch origin for this call must be _Signed_ and the signing account must have a",
              "non-frozen account `index`.",
              "",
              "- `index`: the index to be frozen in place.",
              "",
              "Emits `IndexFrozen` if successful.",
              "",
              "# \u003cweight\u003e",
              "- `O(1)`.",
              "- One storage mutation (codec `O(1)`).",
              "- Up to one slash operation.",
              "- One event.",
              "-------------------",
              "- DB Weight: 1 Read/Write (Accounts)",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "161": {
    "path": [
      "pallet_indices",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NotAssigned",
            "fields": null,
            "index": 0,
            "docs": [
              "The index was not already assigned."
            ]
          },
          {
            "name": "NotOwner",
            "fields": null,
            "index": 1,
            "docs": [
              "The index is assigned to another account."
            ]
          },
          {
            "name": "InUse",
            "fields": null,
            "index": 2,
            "docs": [
              "The index was not available."
            ]
          },
          {
            "name": "NotTransfer",
            "fields": null,
            "index": 3,
            "docs": [
              "The source and destination accounts are identical."
            ]
          },
          {
            "name": "Permanent",
            "fields": null,
            "index": 4,
            "docs": [
              "The index is permanent and may not be freed/changed."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "162": {
    "path": [
      "frame_support",
      "storage",
      "weak_bounded_vec",
      "WeakBoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 163
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 165,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "163": {
    "path": [
      "pallet_balances",
      "BalanceLock"
    ],
    "params": [
      {
        "name": "Balance",
        "type": 6
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "id",
            "type": 102,
            "typeName": "LockIdentifier",
            "docs": null
          },
          {
            "name": "amount",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "reasons",
            "type": 164,
            "typeName": "Reasons",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "164": {
    "path": [
      "pallet_balances",
      "Reasons"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Fee",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Misc",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "All",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "165": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 163
      }
    },
    "docs": null
  },
  "166": {
    "path": [
      "frame_support",
      "storage",
      "bounded_vec",
      "BoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 167
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 168,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "167": {
    "path": [
      "pallet_balances",
      "ReserveData"
    ],
    "params": [
      {
        "name": "ReserveIdentifier",
        "type": 102
      },
      {
        "name": "Balance",
        "type": 6
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "id",
            "type": 102,
            "typeName": "ReserveIdentifier",
            "docs": null
          },
          {
            "name": "amount",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "168": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 167
      }
    },
    "docs": null
  },
  "169": {
    "path": [
      "pallet_balances",
      "Releases"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V1_0_0",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "V2_0_0",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "17": {
    "path": [
      "sp_core",
      "changes_trie",
      "ChangesTrieConfiguration"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "digest_interval",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "digest_levels",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "170": {
    "path": [
      "pallet_balances",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "transfer",
            "fields": [
              {
                "name": "dest",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "value",
                "type": 90,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Transfer some liquid free balance to another account.",
              "",
              "`transfer` will set the `FreeBalance` of the sender and receiver.",
              "It will decrease the total issuance of the system by the `TransferFee`.",
              "If the sender's account is below the existential deposit as a result",
              "of the transfer, the account will be reaped.",
              "",
              "The dispatch origin for this call must be `Signed` by the transactor.",
              "",
              "# \u003cweight\u003e",
              "- Dependent on arguments but not critical, given proper implementations for input config",
              "  types. See related functions below.",
              "- It contains a limited number of reads and writes internally and no complex",
              "  computation.",
              "",
              "Related functions:",
              "",
              "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
              "  - Transferring balances to accounts that did not exist before will cause",
              "    `T::OnNewAccount::on_new_account` to be called.",
              "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
              "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
              "    that the transfer will not kill the origin account.",
              "---------------------------------",
              "2d2042617365205765696768743a2037332e363420c2b5732c20776f7273742063617365207363656e6172696f20286163636f756e7420637265617465642c206163636f756e742072656d6f76656429",
              "- DB Weight: 1 Read and 1 Write to destination account",
              "- Origin account is already in memory, so no DB operations for them.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_balance",
            "fields": [
              {
                "name": "who",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "new_free",
                "type": 90,
                "typeName": "T::Balance",
                "docs": null
              },
              {
                "name": "new_reserved",
                "type": 90,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Set the balances of a given account.",
              "",
              "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
              "also decrease the total issuance of the system (`TotalIssuance`).",
              "If the new free or reserved balance is below the existential deposit,",
              "it will reset the account nonce (`frame_system::AccountNonce`).",
              "",
              "The dispatch origin for this call is `root`.",
              "",
              "# \u003cweight\u003e",
              "- Independent of the arguments.",
              "- Contains a limited number of reads and writes.",
              "---------------------",
              "- Base Weight:",
              "202020202d204372656174696e673a2032372e353620c2b573",
              "202020202d204b696c6c696e673a2033352e313120c2b573",
              "- DB Weight: 1 Read, 1 Write to `who`",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "force_transfer",
            "fields": [
              {
                "name": "source",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "dest",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "value",
                "type": 90,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Exactly as `transfer`, except the origin must be root and the source account may be",
              "specified.",
              "# \u003cweight\u003e",
              "- Same as transfer, but additional read and write because the source account is not",
              "  assumed to be in the overlay.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "transfer_keep_alive",
            "fields": [
              {
                "name": "dest",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "value",
                "type": 90,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
              "origin account.",
              "",
              "99% of the time you want [`transfer`] instead.",
              "",
              "[`transfer`]: struct.Pallet.html#method.transfer",
              "# \u003cweight\u003e",
              "- Cheaper than transfer because account cannot be killed.",
              "2d2042617365205765696768743a2035312e3420c2b573",
              "- DB Weight: 1 Read and 1 Write to dest (sender is in overlay already)",
              "#\u003c/weight\u003e"
            ]
          },
          {
            "name": "transfer_all",
            "fields": [
              {
                "name": "dest",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "keep_alive",
                "type": 76,
                "typeName": "bool",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Transfer the entire transferable balance from the caller account.",
              "",
              "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
              "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
              "transferred by this function. To ensure that this function results in a killed account,",
              "you might need to prepare the account by removing any reference counters, storage",
              "deposits, etc...",
              "",
              "The dispatch origin of this call must be Signed.",
              "",
              "- `dest`: The recipient of the transfer.",
              "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
              "  of the funds the account has, causing the sender account to be killed (false), or",
              "  transfer everything except at least the existential deposit, which will guarantee to",
              "  keep the sender account alive (true). # \u003cweight\u003e",
              "- O(1). Just like transfer, but reading the user's transferable balance first.",
              "  #\u003c/weight\u003e"
            ]
          },
          {
            "name": "force_unreserve",
            "fields": [
              {
                "name": "who",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "amount",
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Unreserve some balance from a user by force.",
              "",
              "Can only be called by ROOT."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "171": {
    "path": [
      "sp_runtime",
      "multiaddress",
      "MultiAddress"
    ],
    "params": [
      {
        "name": "AccountId"
      },
      {
        "name": "AccountIndex",
        "type": 44
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Id",
            "fields": [
              {
                "type": 0,
                "typeName": "AccountId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Index",
            "fields": [
              {
                "type": 172,
                "typeName": "AccountIndex",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Raw",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Address32",
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "Address20",
            "fields": [
              {
                "type": 89,
                "typeName": "[u8; 20]",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "172": {
    "path": null,
    "def": {
      "Compact": {
        "type": 44
      }
    },
    "docs": null
  },
  "173": {
    "path": [
      "pallet_balances",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "VestingBalance",
            "fields": null,
            "index": 0,
            "docs": [
              "Vesting balance too high to send value"
            ]
          },
          {
            "name": "LiquidityRestrictions",
            "fields": null,
            "index": 1,
            "docs": [
              "Account liquidity restrictions prevent withdrawal"
            ]
          },
          {
            "name": "InsufficientBalance",
            "fields": null,
            "index": 2,
            "docs": [
              "Balance too low to send value"
            ]
          },
          {
            "name": "ExistentialDeposit",
            "fields": null,
            "index": 3,
            "docs": [
              "Value too low to create account due to existential deposit"
            ]
          },
          {
            "name": "KeepAlive",
            "fields": null,
            "index": 4,
            "docs": [
              "Transfer/payment would kill account"
            ]
          },
          {
            "name": "ExistingVestingSchedule",
            "fields": null,
            "index": 5,
            "docs": [
              "A vesting schedule already exists for this account"
            ]
          },
          {
            "name": "DeadAccount",
            "fields": null,
            "index": 6,
            "docs": [
              "Beneficiary account must pre-exist"
            ]
          },
          {
            "name": "TooManyReserves",
            "fields": null,
            "index": 7,
            "docs": [
              "Number of named reserves exceed MaxReserves"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "174": {
    "path": [
      "sp_arithmetic",
      "fixed_point",
      "FixedU128"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 6,
            "typeName": "u128",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "175": {
    "path": [
      "pallet_transaction_payment",
      "Releases"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V1Ancient",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "V2",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "176": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 177
      }
    },
    "docs": null
  },
  "177": {
    "path": [
      "frame_support",
      "weights",
      "WeightToFeeCoefficient"
    ],
    "params": [
      {
        "name": "Balance",
        "type": 6
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "coeff_integer",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "coeff_frac",
            "type": 126,
            "typeName": "Perbill",
            "docs": null
          },
          {
            "name": "negative",
            "type": 76,
            "typeName": "bool",
            "docs": null
          },
          {
            "name": "degree",
            "type": 2,
            "typeName": "u8",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "178": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 179
      }
    },
    "docs": null
  },
  "179": {
    "path": [
      "pallet_authorship",
      "UncleEntryItem"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      },
      {
        "name": "Hash",
        "type": 9
      },
      {
        "name": "Author"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InclusionHeight",
            "fields": [
              {
                "type": 4,
                "typeName": "BlockNumber",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Uncle",
            "fields": [
              {
                "type": 9,
                "typeName": "Hash",
                "docs": null
              },
              {
                "type": 180,
                "typeName": "Option\u003cAuthor\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "18": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 19
      }
    },
    "docs": null
  },
  "180": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 0,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "181": {
    "path": [
      "pallet_authorship",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "set_uncles",
            "fields": [
              {
                "name": "new_uncles",
                "type": 182,
                "typeName": "Vec\u003cT::Header\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Provide a set of uncles."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "182": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 154
      }
    },
    "docs": null
  },
  "183": {
    "path": [
      "pallet_authorship",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidUncleParent",
            "fields": null,
            "index": 0,
            "docs": [
              "The uncle parent not in the chain."
            ]
          },
          {
            "name": "UnclesAlreadySet",
            "fields": null,
            "index": 1,
            "docs": [
              "Uncles already set in the block."
            ]
          },
          {
            "name": "TooManyUncles",
            "fields": null,
            "index": 2,
            "docs": [
              "Too many uncles."
            ]
          },
          {
            "name": "GenesisUncle",
            "fields": null,
            "index": 3,
            "docs": [
              "The uncle is genesis."
            ]
          },
          {
            "name": "TooHighUncle",
            "fields": null,
            "index": 4,
            "docs": [
              "The uncle is too high in chain."
            ]
          },
          {
            "name": "UncleAlreadyIncluded",
            "fields": null,
            "index": 5,
            "docs": [
              "The uncle is already included."
            ]
          },
          {
            "name": "OldUncle",
            "fields": null,
            "index": 6,
            "docs": [
              "The uncle isn't recent enough to be included."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "184": {
    "path": [
      "sp_staking",
      "offence",
      "OffenceDetails"
    ],
    "params": [
      {
        "name": "Reporter"
      },
      {
        "name": "Offender",
        "type": 43
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "offender",
            "type": 43,
            "typeName": "Offender",
            "docs": null
          },
          {
            "name": "reporters",
            "type": 74,
            "typeName": "Vec\u003cReporter\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "185": {
    "path": null,
    "def": {
      "Tuple": [
        32,
        10
      ]
    },
    "docs": null
  },
  "186": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 187
      }
    },
    "docs": null
  },
  "187": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        188
      ]
    },
    "docs": null
  },
  "188": {
    "path": [
      "rococo_runtime",
      "SessionKeys"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "grandpa",
            "type": 37,
            "typeName": "\u003cGrandpa as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "babe",
            "type": 144,
            "typeName": "\u003cBabe as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "im_online",
            "type": 40,
            "typeName": "\u003cImOnline as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "para_validator",
            "type": 189,
            "typeName": "\u003cInitializer as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "para_assignment",
            "type": 190,
            "typeName": "\u003cParaSessionInfo as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "authority_discovery",
            "type": 191,
            "typeName": "\u003cAuthorityDiscovery as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          },
          {
            "name": "beefy",
            "type": 192,
            "typeName": "\u003cBeefy as $crate::BoundToRuntimeAppPublic\u003e::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "189": {
    "path": [
      "polkadot_primitives",
      "v0",
      "validator_app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "19": {
    "path": [
      "frame_system",
      "EventRecord"
    ],
    "params": [
      {
        "name": "E",
        "type": 20
      },
      {
        "name": "T",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "phase",
            "type": 119,
            "typeName": "Phase",
            "docs": null
          },
          {
            "name": "event",
            "type": 20,
            "typeName": "E",
            "docs": null
          },
          {
            "name": "topics",
            "type": 120,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "190": {
    "path": [
      "polkadot_primitives",
      "v1",
      "assignment_app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "191": {
    "path": [
      "sp_authority_discovery",
      "app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "192": {
    "path": [
      "beefy_primitives",
      "crypto",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 193,
            "typeName": "ecdsa::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "193": {
    "path": [
      "sp_core",
      "ecdsa",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 194,
            "typeName": "[u8; 33]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "194": {
    "path": null,
    "def": {
      "Array": {
        "len": 33,
        "type": 2
      }
    },
    "docs": null
  },
  "195": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 4
      }
    },
    "docs": null
  },
  "196": {
    "path": null,
    "def": {
      "Tuple": [
        197,
        10
      ]
    },
    "docs": null
  },
  "197": {
    "path": [
      "sp_core",
      "crypto",
      "KeyTypeId"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 14,
            "typeName": "[u8; 4]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "198": {
    "path": [
      "pallet_session",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "set_keys",
            "fields": [
              {
                "name": "keys",
                "type": 188,
                "typeName": "T::Keys",
                "docs": null
              },
              {
                "name": "proof",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Sets the session key(s) of the function caller to `keys`.",
              "Allows an account to set its session key prior to becoming a validator.",
              "This doesn't take effect until the next session.",
              "",
              "The dispatch origin of this function must be signed.",
              "",
              "# \u003cweight\u003e",
              "- Complexity: `O(1)`",
              "  Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.",
              "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
              "- DbWrites: `origin account`, `NextKeys`",
              "- DbReads per key id: `KeyOwner`",
              "- DbWrites per key id: `KeyOwner`",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "purge_keys",
            "fields": null,
            "index": 1,
            "docs": [
              "Removes any session key(s) of the function caller.",
              "This doesn't take effect until the next session.",
              "",
              "The dispatch origin of this function must be signed.",
              "",
              "# \u003cweight\u003e",
              "- Complexity: `O(1)` in number of key types.",
              "  Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.",
              "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
              "- DbWrites: `NextKeys`, `origin account`",
              "- DbWrites per key id: `KeyOwner`",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Dispatchable calls.",
      "",
      "Each variant of this enum maps to a dispatchable function from the associated module."
    ]
  },
  "199": {
    "path": [
      "pallet_session",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidProof",
            "fields": null,
            "index": 0,
            "docs": [
              "Invalid ownership proof."
            ]
          },
          {
            "name": "NoAssociatedValidatorId",
            "fields": null,
            "index": 1,
            "docs": [
              "No associated validator ID for account."
            ]
          },
          {
            "name": "DuplicatedKey",
            "fields": null,
            "index": 2,
            "docs": [
              "Registered duplicate key."
            ]
          },
          {
            "name": "NoKeys",
            "fields": null,
            "index": 3,
            "docs": [
              "No keys are associated with this account."
            ]
          },
          {
            "name": "NoAccount",
            "fields": null,
            "index": 4,
            "docs": [
              "Key setting account is not live, so it's impossible to associate keys."
            ]
          }
        ]
      }
    },
    "docs": [
      "Error for the session module."
    ]
  },
  "2": {
    "path": null,
    "def": {
      "Primitive": "U8"
    },
    "docs": null
  },
  "20": {
    "path": [
      "rococo_runtime",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "System",
            "fields": [
              {
                "type": 21,
                "typeName": "frame_system::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Indices",
            "fields": [
              {
                "type": 28,
                "typeName": "pallet_indices::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "Balances",
            "fields": [
              {
                "type": 29,
                "typeName": "pallet_balances::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "Offences",
            "fields": [
              {
                "type": 31,
                "typeName": "pallet_offences::Event",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "Session",
            "fields": [
              {
                "type": 33,
                "typeName": "pallet_session::Event",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "Grandpa",
            "fields": [
              {
                "type": 34,
                "typeName": "pallet_grandpa::Event",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "ImOnline",
            "fields": [
              {
                "type": 39,
                "typeName": "pallet_im_online::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "ParaInclusion",
            "fields": [
              {
                "type": 45,
                "typeName": "parachains_inclusion::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "Paras",
            "fields": [
              {
                "type": 57,
                "typeName": "parachains_paras::Event",
                "docs": null
              }
            ],
            "index": 19,
            "docs": null
          },
          {
            "name": "Ump",
            "fields": [
              {
                "type": 58,
                "typeName": "parachains_ump::Event",
                "docs": null
              }
            ],
            "index": 22,
            "docs": null
          },
          {
            "name": "Hrmp",
            "fields": [
              {
                "type": 61,
                "typeName": "parachains_hrmp::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 23,
            "docs": null
          },
          {
            "name": "ParasDisputes",
            "fields": [
              {
                "type": 63,
                "typeName": "parachains_disputes::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 25,
            "docs": null
          },
          {
            "name": "Registrar",
            "fields": [
              {
                "type": 67,
                "typeName": "paras_registrar::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 26,
            "docs": null
          },
          {
            "name": "Auctions",
            "fields": [
              {
                "type": 68,
                "typeName": "auctions::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 27,
            "docs": null
          },
          {
            "name": "Crowdloan",
            "fields": [
              {
                "type": 69,
                "typeName": "crowdloan::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 28,
            "docs": null
          },
          {
            "name": "Slots",
            "fields": [
              {
                "type": 71,
                "typeName": "slots::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 29,
            "docs": null
          },
          {
            "name": "Sudo",
            "fields": [
              {
                "type": 72,
                "typeName": "pallet_sudo::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 31,
            "docs": null
          },
          {
            "name": "ValidatorManager",
            "fields": [
              {
                "type": 73,
                "typeName": "validator_manager::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 35,
            "docs": null
          },
          {
            "name": "Collective",
            "fields": [
              {
                "type": 75,
                "typeName": "pallet_collective::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 80,
            "docs": null
          },
          {
            "name": "Membership",
            "fields": [
              {
                "type": 77,
                "typeName": "pallet_membership::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 81,
            "docs": null
          },
          {
            "name": "Utility",
            "fields": [
              {
                "type": 78,
                "typeName": "pallet_utility::Event",
                "docs": null
              }
            ],
            "index": 90,
            "docs": null
          },
          {
            "name": "Proxy",
            "fields": [
              {
                "type": 79,
                "typeName": "pallet_proxy::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 91,
            "docs": null
          },
          {
            "name": "XcmPallet",
            "fields": [
              {
                "type": 82,
                "typeName": "pallet_xcm::Event\u003cRuntime\u003e",
                "docs": null
              }
            ],
            "index": 99,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "200": {
    "path": [
      "pallet_grandpa",
      "StoredState"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Live",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "PendingPause",
            "fields": [
              {
                "name": "scheduled_at",
                "type": 4,
                "typeName": "N",
                "docs": null
              },
              {
                "name": "delay",
                "type": 4,
                "typeName": "N",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Paused",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "PendingResume",
            "fields": [
              {
                "name": "scheduled_at",
                "type": 4,
                "typeName": "N",
                "docs": null
              },
              {
                "name": "delay",
                "type": 4,
                "typeName": "N",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "201": {
    "path": [
      "pallet_grandpa",
      "StoredPendingChange"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "scheduled_at",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "delay",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "next_authorities",
            "type": 35,
            "typeName": "AuthorityList",
            "docs": null
          },
          {
            "name": "forced",
            "type": 202,
            "typeName": "Option\u003cN\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "202": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 4
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 4,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "203": {
    "path": [
      "pallet_grandpa",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "report_equivocation",
            "fields": [
              {
                "name": "equivocation_proof",
                "type": 204,
                "typeName": "Box\u003cEquivocationProof\u003cT::Hash, T::BlockNumber\u003e\u003e",
                "docs": null
              },
              {
                "name": "key_owner_proof",
                "type": 156,
                "typeName": "T::KeyOwnerProof",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Report voter equivocation/misbehavior. This method will verify the",
              "equivocation proof and validate the given key ownership proof",
              "against the extracted offender. If both are valid, the offence",
              "will be reported."
            ]
          },
          {
            "name": "report_equivocation_unsigned",
            "fields": [
              {
                "name": "equivocation_proof",
                "type": 204,
                "typeName": "Box\u003cEquivocationProof\u003cT::Hash, T::BlockNumber\u003e\u003e",
                "docs": null
              },
              {
                "name": "key_owner_proof",
                "type": 156,
                "typeName": "T::KeyOwnerProof",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Report voter equivocation/misbehavior. This method will verify the",
              "equivocation proof and validate the given key ownership proof",
              "against the extracted offender. If both are valid, the offence",
              "will be reported.",
              "",
              "This extrinsic must be called unsigned and it is expected that only",
              "block authors will call it (validated in `ValidateUnsigned`), as such",
              "if the block author is defined it will be defined as the equivocation",
              "reporter."
            ]
          },
          {
            "name": "note_stalled",
            "fields": [
              {
                "name": "delay",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "best_finalized_block_number",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Note that the current authority set of the GRANDPA finality gadget has",
              "stalled. This will trigger a forced authority set change at the beginning",
              "of the next session, to be enacted `delay` blocks after that. The delay",
              "should be high enough to safely assume that the block signalling the",
              "forced change will not be re-orged (e.g. 1000 blocks). The GRANDPA voters",
              "will start the new authority set using the given finalized block as base.",
              "Only callable by root."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "204": {
    "path": [
      "sp_finality_grandpa",
      "EquivocationProof"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      },
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "set_id",
            "type": 8,
            "typeName": "SetId",
            "docs": null
          },
          {
            "name": "equivocation",
            "type": 205,
            "typeName": "Equivocation\u003cH, N\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "205": {
    "path": [
      "sp_finality_grandpa",
      "Equivocation"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      },
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Prevote",
            "fields": [
              {
                "type": 206,
                "typeName": "grandpa::Equivocation\u003cAuthorityId, grandpa::Prevote\u003cH, N\u003e,\nAuthoritySignature\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Precommit",
            "fields": [
              {
                "type": 211,
                "typeName": "grandpa::Equivocation\u003cAuthorityId, grandpa::Precommit\u003cH, N\u003e,\nAuthoritySignature\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "206": {
    "path": [
      "finality_grandpa",
      "Equivocation"
    ],
    "params": [
      {
        "name": "Id",
        "type": 37
      },
      {
        "name": "V",
        "type": 207
      },
      {
        "name": "S",
        "type": 208
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "round_number",
            "type": 8,
            "typeName": "u64",
            "docs": null
          },
          {
            "name": "identity",
            "type": 37,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "first",
            "type": 210,
            "typeName": "(V, S)",
            "docs": null
          },
          {
            "name": "second",
            "type": 210,
            "typeName": "(V, S)",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "207": {
    "path": [
      "finality_grandpa",
      "Prevote"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      },
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "target_hash",
            "type": 9,
            "typeName": "H",
            "docs": null
          },
          {
            "name": "target_number",
            "type": 4,
            "typeName": "N",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "208": {
    "path": [
      "sp_finality_grandpa",
      "app",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 209,
            "typeName": "ed25519::Signature",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "209": {
    "path": [
      "sp_core",
      "ed25519",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 52,
            "typeName": "[u8; 64]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "21": {
    "path": [
      "frame_system",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ExtrinsicSuccess",
            "fields": [
              {
                "type": 22,
                "typeName": "DispatchInfo",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "An extrinsic completed successfully. \\[info\\]"
            ]
          },
          {
            "name": "ExtrinsicFailed",
            "fields": [
              {
                "type": 25,
                "typeName": "DispatchError",
                "docs": null
              },
              {
                "type": 22,
                "typeName": "DispatchInfo",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "An extrinsic failed. \\[error, info\\]"
            ]
          },
          {
            "name": "CodeUpdated",
            "fields": null,
            "index": 2,
            "docs": [
              "`:code` was updated."
            ]
          },
          {
            "name": "NewAccount",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A new \\[account\\] was created."
            ]
          },
          {
            "name": "KilledAccount",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "An \\[account\\] was reaped."
            ]
          },
          {
            "name": "Remarked",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "On on-chain remark happened. \\[origin, remark_hash\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "Event for the System pallet."
    ]
  },
  "210": {
    "path": null,
    "def": {
      "Tuple": [
        207,
        208
      ]
    },
    "docs": null
  },
  "211": {
    "path": [
      "finality_grandpa",
      "Equivocation"
    ],
    "params": [
      {
        "name": "Id",
        "type": 37
      },
      {
        "name": "V",
        "type": 212
      },
      {
        "name": "S",
        "type": 208
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "round_number",
            "type": 8,
            "typeName": "u64",
            "docs": null
          },
          {
            "name": "identity",
            "type": 37,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "first",
            "type": 213,
            "typeName": "(V, S)",
            "docs": null
          },
          {
            "name": "second",
            "type": 213,
            "typeName": "(V, S)",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "212": {
    "path": [
      "finality_grandpa",
      "Precommit"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      },
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "target_hash",
            "type": 9,
            "typeName": "H",
            "docs": null
          },
          {
            "name": "target_number",
            "type": 4,
            "typeName": "N",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "213": {
    "path": null,
    "def": {
      "Tuple": [
        212,
        208
      ]
    },
    "docs": null
  },
  "214": {
    "path": [
      "pallet_grandpa",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "PauseFailed",
            "fields": null,
            "index": 0,
            "docs": [
              "Attempt to signal GRANDPA pause when the authority set isn't live",
              "(either paused or already pending pause)."
            ]
          },
          {
            "name": "ResumeFailed",
            "fields": null,
            "index": 1,
            "docs": [
              "Attempt to signal GRANDPA resume when the authority set isn't paused",
              "(either live or already pending resume)."
            ]
          },
          {
            "name": "ChangePending",
            "fields": null,
            "index": 2,
            "docs": [
              "Attempt to signal GRANDPA change with one already pending."
            ]
          },
          {
            "name": "TooSoon",
            "fields": null,
            "index": 3,
            "docs": [
              "Cannot signal forced change so soon after last."
            ]
          },
          {
            "name": "InvalidKeyOwnershipProof",
            "fields": null,
            "index": 4,
            "docs": [
              "A key ownership proof provided as part of an equivocation report is invalid."
            ]
          },
          {
            "name": "InvalidEquivocationProof",
            "fields": null,
            "index": 5,
            "docs": [
              "An equivocation proof provided as part of an equivocation report is invalid."
            ]
          },
          {
            "name": "DuplicateOffenceReport",
            "fields": null,
            "index": 6,
            "docs": [
              "A given equivocation report is valid but already previously reported."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "215": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 40
      }
    },
    "docs": null
  },
  "216": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        0
      ]
    },
    "docs": null
  },
  "217": {
    "path": [
      "pallet_im_online",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "heartbeat",
            "fields": [
              {
                "name": "heartbeat",
                "type": 218,
                "typeName": "Heartbeat\u003cT::BlockNumber\u003e",
                "docs": null
              },
              {
                "name": "signature",
                "type": 223,
                "typeName": "\u003cT::AuthorityId as RuntimeAppPublic\u003e::Signature",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "# \u003cweight\u003e",
              "- Complexity: `O(K + E)` where K is length of `Keys` (heartbeat.validators_len) and E is",
              "  length of `heartbeat.network_state.external_address`",
              "  - `O(K)`: decoding of length `K`",
              "  - `O(E)`: decoding/encoding of length `E`",
              "- DbReads: pallet_session `Validators`, pallet_session `CurrentIndex`, `Keys`,",
              "  `ReceivedHeartbeats`",
              "- DbWrites: `ReceivedHeartbeats`",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "218": {
    "path": [
      "pallet_im_online",
      "Heartbeat"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "block_number",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "network_state",
            "type": 219,
            "typeName": "OpaqueNetworkState",
            "docs": null
          },
          {
            "name": "session_index",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          },
          {
            "name": "authority_index",
            "type": 4,
            "typeName": "AuthIndex",
            "docs": null
          },
          {
            "name": "validators_len",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "219": {
    "path": [
      "sp_core",
      "offchain",
      "OpaqueNetworkState"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "peer_id",
            "type": 220,
            "typeName": "OpaquePeerId",
            "docs": null
          },
          {
            "name": "external_addresses",
            "type": 221,
            "typeName": "Vec\u003cOpaqueMultiaddr\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "22": {
    "path": [
      "frame_support",
      "weights",
      "DispatchInfo"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "weight",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "class",
            "type": 23,
            "typeName": "DispatchClass",
            "docs": null
          },
          {
            "name": "pays_fee",
            "type": 24,
            "typeName": "Pays",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "220": {
    "path": [
      "sp_core",
      "OpaquePeerId"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "221": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 222
      }
    },
    "docs": null
  },
  "222": {
    "path": [
      "sp_core",
      "offchain",
      "OpaqueMultiaddr"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "223": {
    "path": [
      "pallet_im_online",
      "sr25519",
      "app_sr25519",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 51,
            "typeName": "sr25519::Signature",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "224": {
    "path": [
      "pallet_im_online",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidKey",
            "fields": null,
            "index": 0,
            "docs": [
              "Non existent public key."
            ]
          },
          {
            "name": "DuplicatedHeartbeat",
            "fields": null,
            "index": 1,
            "docs": [
              "Duplicated heartbeat."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "225": {
    "path": [
      "polkadot_runtime_parachains",
      "configuration",
      "HostConfiguration"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "max_code_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_head_data_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_upward_queue_count",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_upward_queue_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_upward_message_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_upward_message_num_per_candidate",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_max_message_num_per_candidate",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "validation_upgrade_frequency",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "validation_upgrade_delay",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "max_pov_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_downward_message_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "ump_service_total_weight",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          },
          {
            "name": "hrmp_max_parachain_outbound_channels",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_max_parathread_outbound_channels",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_sender_deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "hrmp_recipient_deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "hrmp_channel_max_capacity",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_channel_max_total_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_max_parachain_inbound_channels",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_max_parathread_inbound_channels",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_channel_max_message_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "code_retention_period",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "parathread_cores",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "parathread_retries",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "group_rotation_frequency",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "chain_availability_period",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "thread_availability_period",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "scheduling_lookahead",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_validators_per_core",
            "type": 202,
            "typeName": "Option\u003cu32\u003e",
            "docs": null
          },
          {
            "name": "max_validators",
            "type": 202,
            "typeName": "Option\u003cu32\u003e",
            "docs": null
          },
          {
            "name": "dispute_period",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          },
          {
            "name": "dispute_post_conclusion_acceptance_period",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "dispute_max_spam_slots",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "dispute_conclusion_by_time_out_period",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "no_show_slots",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "n_delay_tranches",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "zeroth_delay_tranche_width",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "needed_approvals",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "relay_vrf_modulo_samples",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "ump_max_individual_weight",
            "type": 8,
            "typeName": "Weight",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "226": {
    "path": [
      "polkadot_runtime_parachains",
      "configuration",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "set_validation_upgrade_frequency",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Set the validation upgrade frequency."
            ]
          },
          {
            "name": "set_validation_upgrade_delay",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Set the validation upgrade delay."
            ]
          },
          {
            "name": "set_code_retention_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Set the acceptance period for an included candidate."
            ]
          },
          {
            "name": "set_max_code_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Set the max validation code size for incoming upgrades."
            ]
          },
          {
            "name": "set_max_pov_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Set the max POV block size for incoming upgrades."
            ]
          },
          {
            "name": "set_max_head_data_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Set the max head data size for paras."
            ]
          },
          {
            "name": "set_parathread_cores",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Set the number of parathread execution cores."
            ]
          },
          {
            "name": "set_parathread_retries",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Set the number of retries for a particular parathread."
            ]
          },
          {
            "name": "set_group_rotation_frequency",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 8,
            "docs": [
              "Set the parachain validator-group rotation frequency"
            ]
          },
          {
            "name": "set_chain_availability_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 9,
            "docs": [
              "Set the availability period for parachains."
            ]
          },
          {
            "name": "set_thread_availability_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 10,
            "docs": [
              "Set the availability period for parathreads."
            ]
          },
          {
            "name": "set_scheduling_lookahead",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 11,
            "docs": [
              "Set the scheduling lookahead, in expected number of blocks at peak throughput."
            ]
          },
          {
            "name": "set_max_validators_per_core",
            "fields": [
              {
                "name": "new",
                "type": 202,
                "typeName": "Option\u003cu32\u003e",
                "docs": null
              }
            ],
            "index": 12,
            "docs": [
              "Set the maximum number of validators to assign to any core."
            ]
          },
          {
            "name": "set_max_validators",
            "fields": [
              {
                "name": "new",
                "type": 202,
                "typeName": "Option\u003cu32\u003e",
                "docs": null
              }
            ],
            "index": 13,
            "docs": [
              "Set the maximum number of validators to use in parachain consensus."
            ]
          },
          {
            "name": "set_dispute_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "SessionIndex",
                "docs": null
              }
            ],
            "index": 14,
            "docs": [
              "Set the dispute period, in number of sessions to keep for disputes."
            ]
          },
          {
            "name": "set_dispute_post_conclusion_acceptance_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 15,
            "docs": [
              "Set the dispute post conclusion acceptance period."
            ]
          },
          {
            "name": "set_dispute_max_spam_slots",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 16,
            "docs": [
              "Set the maximum number of dispute spam slots."
            ]
          },
          {
            "name": "set_dispute_conclusion_by_time_out_period",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 17,
            "docs": [
              "Set the dispute conclusion by time out period."
            ]
          },
          {
            "name": "set_no_show_slots",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 18,
            "docs": [
              "Set the no show slots, in number of number of consensus slots.",
              "Must be at least 1."
            ]
          },
          {
            "name": "set_n_delay_tranches",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 19,
            "docs": [
              "Set the total number of delay tranches."
            ]
          },
          {
            "name": "set_zeroth_delay_tranche_width",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 20,
            "docs": [
              "Set the zeroth delay tranche width."
            ]
          },
          {
            "name": "set_needed_approvals",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 21,
            "docs": [
              "Set the number of validators needed to approve a block."
            ]
          },
          {
            "name": "set_relay_vrf_modulo_samples",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 22,
            "docs": [
              "Set the number of samples to do of the `RelayVRFModulo` approval assignment criterion."
            ]
          },
          {
            "name": "set_max_upward_queue_count",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 23,
            "docs": [
              "Sets the maximum items that can present in a upward dispatch queue at once."
            ]
          },
          {
            "name": "set_max_upward_queue_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 24,
            "docs": [
              "Sets the maximum total size of items that can present in a upward dispatch queue at once."
            ]
          },
          {
            "name": "set_max_downward_message_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 25,
            "docs": [
              "Set the critical downward message size."
            ]
          },
          {
            "name": "set_ump_service_total_weight",
            "fields": [
              {
                "name": "new",
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 26,
            "docs": [
              "Sets the soft limit for the phase of dispatching dispatchable upward messages."
            ]
          },
          {
            "name": "set_max_upward_message_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 27,
            "docs": [
              "Sets the maximum size of an upward message that can be sent by a candidate."
            ]
          },
          {
            "name": "set_max_upward_message_num_per_candidate",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 28,
            "docs": [
              "Sets the maximum number of messages that a candidate can contain."
            ]
          },
          {
            "name": "set_hrmp_open_request_ttl",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 29,
            "docs": [
              "Sets the number of sessions after which an HRMP open channel request expires."
            ]
          },
          {
            "name": "set_hrmp_sender_deposit",
            "fields": [
              {
                "name": "new",
                "type": 6,
                "typeName": "Balance",
                "docs": null
              }
            ],
            "index": 30,
            "docs": [
              "Sets the amount of funds that the sender should provide for opening an HRMP channel."
            ]
          },
          {
            "name": "set_hrmp_recipient_deposit",
            "fields": [
              {
                "name": "new",
                "type": 6,
                "typeName": "Balance",
                "docs": null
              }
            ],
            "index": 31,
            "docs": [
              "Sets the amount of funds that the recipient should provide for accepting opening an HRMP",
              "channel."
            ]
          },
          {
            "name": "set_hrmp_channel_max_capacity",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 32,
            "docs": [
              "Sets the maximum number of messages allowed in an HRMP channel at once."
            ]
          },
          {
            "name": "set_hrmp_channel_max_total_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 33,
            "docs": [
              "Sets the maximum total size of messages in bytes allowed in an HRMP channel at once."
            ]
          },
          {
            "name": "set_hrmp_max_parachain_inbound_channels",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 34,
            "docs": [
              "Sets the maximum number of inbound HRMP channels a parachain is allowed to accept."
            ]
          },
          {
            "name": "set_hrmp_max_parathread_inbound_channels",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 35,
            "docs": [
              "Sets the maximum number of inbound HRMP channels a parathread is allowed to accept."
            ]
          },
          {
            "name": "set_hrmp_channel_max_message_size",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 36,
            "docs": [
              "Sets the maximum size of a message that could ever be put into an HRMP channel."
            ]
          },
          {
            "name": "set_hrmp_max_parachain_outbound_channels",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 37,
            "docs": [
              "Sets the maximum number of outbound HRMP channels a parachain is allowed to open."
            ]
          },
          {
            "name": "set_hrmp_max_parathread_outbound_channels",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 38,
            "docs": [
              "Sets the maximum number of outbound HRMP channels a parathread is allowed to open."
            ]
          },
          {
            "name": "set_hrmp_max_message_num_per_candidate",
            "fields": [
              {
                "name": "new",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 39,
            "docs": [
              "Sets the maximum number of outbound HRMP messages can be sent by a candidate."
            ]
          },
          {
            "name": "set_ump_max_individual_weight",
            "fields": [
              {
                "name": "new",
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 40,
            "docs": [
              "Sets the maximum amount of weight any individual upward message may consume."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "227": {
    "path": [
      "polkadot_runtime_parachains",
      "configuration",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidNewValue",
            "fields": null,
            "index": 0,
            "docs": [
              "The new value for a configuration parameter is invalid."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "228": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 229
      }
    },
    "docs": null
  },
  "229": {
    "path": [
      "polkadot_primitives",
      "v0",
      "ValidatorIndex"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "23": {
    "path": [
      "frame_support",
      "weights",
      "DispatchClass"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Normal",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Operational",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Mandatory",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "230": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 189
      }
    },
    "docs": null
  },
  "231": {
    "path": [
      "polkadot_runtime_parachains",
      "shared",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": null
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "232": {
    "path": [
      "polkadot_runtime_parachains",
      "inclusion",
      "AvailabilityBitfieldRecord"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "bitfield",
            "type": 233,
            "typeName": "AvailabilityBitfield",
            "docs": null
          },
          {
            "name": "submitted_at",
            "type": 4,
            "typeName": "N",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "233": {
    "path": [
      "polkadot_primitives",
      "v1",
      "AvailabilityBitfield"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 234,
            "typeName": "BitVec\u003cbitvec::order::Lsb0, u8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "234": {
    "path": null,
    "def": {
      "BitSequence": {
        "bitStoreType": 2,
        "bitOrderType": 235
      }
    },
    "docs": null
  },
  "235": {
    "path": [
      "bitvec",
      "order",
      "Lsb0"
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "236": {
    "path": [
      "polkadot_runtime_parachains",
      "inclusion",
      "CandidatePendingAvailability"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      },
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "core",
            "type": 55,
            "typeName": "CoreIndex",
            "docs": null
          },
          {
            "name": "hash",
            "type": 64,
            "typeName": "CandidateHash",
            "docs": null
          },
          {
            "name": "descriptor",
            "type": 47,
            "typeName": "CandidateDescriptor\u003cH\u003e",
            "docs": null
          },
          {
            "name": "availability_votes",
            "type": 234,
            "typeName": "BitVec\u003cBitOrderLsb0, u8\u003e",
            "docs": null
          },
          {
            "name": "backers",
            "type": 234,
            "typeName": "BitVec\u003cBitOrderLsb0, u8\u003e",
            "docs": null
          },
          {
            "name": "relay_parent_number",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "backed_in_number",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "backing_group",
            "type": 56,
            "typeName": "GroupIndex",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "237": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CandidateCommitments"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "upward_messages",
            "type": 129,
            "typeName": "Vec\u003cUpwardMessage\u003e",
            "docs": null
          },
          {
            "name": "horizontal_messages",
            "type": 238,
            "typeName": "Vec\u003cOutboundHrmpMessage\u003cId\u003e\u003e",
            "docs": null
          },
          {
            "name": "new_validation_code",
            "type": 240,
            "typeName": "Option\u003cValidationCode\u003e",
            "docs": null
          },
          {
            "name": "head_data",
            "type": 54,
            "typeName": "HeadData",
            "docs": null
          },
          {
            "name": "processed_downward_messages",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "hrmp_watermark",
            "type": 4,
            "typeName": "N",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "238": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 239
      }
    },
    "docs": null
  },
  "239": {
    "path": [
      "polkadot_core_primitives",
      "OutboundHrmpMessage"
    ],
    "params": [
      {
        "name": "Id",
        "type": 48
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "recipient",
            "type": 48,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "data",
            "type": 10,
            "typeName": "sp_std::vec::Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "24": {
    "path": [
      "frame_support",
      "weights",
      "Pays"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Yes",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "No",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "240": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 241
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 241,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "241": {
    "path": [
      "polkadot_parachain",
      "primitives",
      "ValidationCode"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "242": {
    "path": [
      "polkadot_runtime_parachains",
      "inclusion",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": null
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "243": {
    "path": [
      "polkadot_runtime_parachains",
      "inclusion",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WrongBitfieldSize",
            "fields": null,
            "index": 0,
            "docs": [
              "Availability bitfield has unexpected size."
            ]
          },
          {
            "name": "BitfieldDuplicateOrUnordered",
            "fields": null,
            "index": 1,
            "docs": [
              "Multiple bitfields submitted by same validator or validators out of order by index."
            ]
          },
          {
            "name": "ValidatorIndexOutOfBounds",
            "fields": null,
            "index": 2,
            "docs": [
              "Validator index out of bounds."
            ]
          },
          {
            "name": "InvalidBitfieldSignature",
            "fields": null,
            "index": 3,
            "docs": [
              "Invalid signature"
            ]
          },
          {
            "name": "UnscheduledCandidate",
            "fields": null,
            "index": 4,
            "docs": [
              "Candidate submitted but para not scheduled."
            ]
          },
          {
            "name": "CandidateScheduledBeforeParaFree",
            "fields": null,
            "index": 5,
            "docs": [
              "Candidate scheduled despite pending candidate already existing for the para."
            ]
          },
          {
            "name": "WrongCollator",
            "fields": null,
            "index": 6,
            "docs": [
              "Candidate included with the wrong collator."
            ]
          },
          {
            "name": "ScheduledOutOfOrder",
            "fields": null,
            "index": 7,
            "docs": [
              "Scheduled cores out of order."
            ]
          },
          {
            "name": "HeadDataTooLarge",
            "fields": null,
            "index": 8,
            "docs": [
              "Head data exceeds the configured maximum."
            ]
          },
          {
            "name": "PrematureCodeUpgrade",
            "fields": null,
            "index": 9,
            "docs": [
              "Code upgrade prematurely."
            ]
          },
          {
            "name": "NewCodeTooLarge",
            "fields": null,
            "index": 10,
            "docs": [
              "Output code is too large"
            ]
          },
          {
            "name": "CandidateNotInParentContext",
            "fields": null,
            "index": 11,
            "docs": [
              "Candidate not in parent context."
            ]
          },
          {
            "name": "UnoccupiedBitInBitfield",
            "fields": null,
            "index": 12,
            "docs": [
              "The bitfield contains a bit relating to an unassigned availability core."
            ]
          },
          {
            "name": "InvalidGroupIndex",
            "fields": null,
            "index": 13,
            "docs": [
              "Invalid group index in core assignment."
            ]
          },
          {
            "name": "InsufficientBacking",
            "fields": null,
            "index": 14,
            "docs": [
              "Insufficient (non-majority) backing."
            ]
          },
          {
            "name": "InvalidBacking",
            "fields": null,
            "index": 15,
            "docs": [
              "Invalid (bad signature, unknown validator, etc.) backing."
            ]
          },
          {
            "name": "NotCollatorSigned",
            "fields": null,
            "index": 16,
            "docs": [
              "Collator did not sign PoV."
            ]
          },
          {
            "name": "ValidationDataHashMismatch",
            "fields": null,
            "index": 17,
            "docs": [
              "The validation data hash does not match expected."
            ]
          },
          {
            "name": "InternalError",
            "fields": null,
            "index": 18,
            "docs": [
              "Internal error only returned when compiled with debug assertions."
            ]
          },
          {
            "name": "IncorrectDownwardMessageHandling",
            "fields": null,
            "index": 19,
            "docs": [
              "The downward message queue is not processed correctly."
            ]
          },
          {
            "name": "InvalidUpwardMessages",
            "fields": null,
            "index": 20,
            "docs": [
              "At least one upward message sent does not pass the acceptance criteria."
            ]
          },
          {
            "name": "HrmpWatermarkMishandling",
            "fields": null,
            "index": 21,
            "docs": [
              "The candidate didn't follow the rules of HRMP watermark advancement."
            ]
          },
          {
            "name": "InvalidOutboundHrmp",
            "fields": null,
            "index": 22,
            "docs": [
              "The HRMP messages sent by the candidate is not valid."
            ]
          },
          {
            "name": "InvalidValidationCodeHash",
            "fields": null,
            "index": 23,
            "docs": [
              "The validation code hash of the candidate is not valid."
            ]
          },
          {
            "name": "ParaHeadMismatch",
            "fields": null,
            "index": 24,
            "docs": [
              "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the",
              "commitments."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "244": {
    "path": [
      "polkadot_runtime_parachains",
      "paras_inherent",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "enter",
            "fields": [
              {
                "name": "data",
                "type": 245,
                "typeName": "ParachainsInherentData\u003cT::Header\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Enter the paras inherent. This will process bitfields and backed candidates."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "245": {
    "path": [
      "polkadot_primitives",
      "v1",
      "InherentData"
    ],
    "params": [
      {
        "name": "HDR",
        "type": 154
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "bitfields",
            "type": 246,
            "typeName": "UncheckedSignedAvailabilityBitfields",
            "docs": null
          },
          {
            "name": "backed_candidates",
            "type": 249,
            "typeName": "Vec\u003cBackedCandidate\u003cHDR::Hash\u003e\u003e",
            "docs": null
          },
          {
            "name": "disputes",
            "type": 254,
            "typeName": "MultiDisputeStatementSet",
            "docs": null
          },
          {
            "name": "parent_header",
            "type": 154,
            "typeName": "HDR",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "246": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 247
      }
    },
    "docs": null
  },
  "247": {
    "path": [
      "polkadot_primitives",
      "v1",
      "signed",
      "UncheckedSigned"
    ],
    "params": [
      {
        "name": "Payload",
        "type": 233
      },
      {
        "name": "RealPayload",
        "type": 233
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "payload",
            "type": 233,
            "typeName": "Payload",
            "docs": null
          },
          {
            "name": "validator_index",
            "type": 229,
            "typeName": "ValidatorIndex",
            "docs": null
          },
          {
            "name": "signature",
            "type": 248,
            "typeName": "ValidatorSignature",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "248": {
    "path": [
      "polkadot_primitives",
      "v0",
      "validator_app",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 51,
            "typeName": "sr25519::Signature",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "249": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 250
      }
    },
    "docs": null
  },
  "25": {
    "path": [
      "sp_runtime",
      "DispatchError"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Other",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "CannotLookup",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "BadOrigin",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "Module",
            "fields": [
              {
                "name": "index",
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "name": "error",
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "ConsumerRemaining",
            "fields": null,
            "index": 4,
            "docs": null
          },
          {
            "name": "NoProviders",
            "fields": null,
            "index": 5,
            "docs": null
          },
          {
            "name": "Token",
            "fields": [
              {
                "type": 26,
                "typeName": "TokenError",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "Arithmetic",
            "fields": [
              {
                "type": 27,
                "typeName": "ArithmeticError",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "250": {
    "path": [
      "polkadot_primitives",
      "v1",
      "BackedCandidate"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "candidate",
            "type": 251,
            "typeName": "CommittedCandidateReceipt\u003cH\u003e",
            "docs": null
          },
          {
            "name": "validity_votes",
            "type": 252,
            "typeName": "Vec\u003cValidityAttestation\u003e",
            "docs": null
          },
          {
            "name": "validator_indices",
            "type": 234,
            "typeName": "BitVec\u003cbitvec::order::Lsb0, u8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "251": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CommittedCandidateReceipt"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "descriptor",
            "type": 47,
            "typeName": "CandidateDescriptor\u003cH\u003e",
            "docs": null
          },
          {
            "name": "commitments",
            "type": 237,
            "typeName": "CandidateCommitments",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "252": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 253
      }
    },
    "docs": null
  },
  "253": {
    "path": [
      "polkadot_primitives",
      "v0",
      "ValidityAttestation"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Implicit",
            "fields": [
              {
                "type": 248,
                "typeName": "ValidatorSignature",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Explicit",
            "fields": [
              {
                "type": 248,
                "typeName": "ValidatorSignature",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "254": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 255
      }
    },
    "docs": null
  },
  "255": {
    "path": [
      "polkadot_primitives",
      "v1",
      "DisputeStatementSet"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "candidate_hash",
            "type": 64,
            "typeName": "CandidateHash",
            "docs": null
          },
          {
            "name": "session",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          },
          {
            "name": "statements",
            "type": 256,
            "typeName": "Vec\u003c(DisputeStatement, ValidatorIndex, ValidatorSignature)\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "256": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 257
      }
    },
    "docs": null
  },
  "257": {
    "path": null,
    "def": {
      "Tuple": [
        258,
        229,
        248
      ]
    },
    "docs": null
  },
  "258": {
    "path": [
      "polkadot_primitives",
      "v1",
      "DisputeStatement"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Valid",
            "fields": [
              {
                "type": 259,
                "typeName": "ValidDisputeStatementKind",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Invalid",
            "fields": [
              {
                "type": 260,
                "typeName": "InvalidDisputeStatementKind",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "259": {
    "path": [
      "polkadot_primitives",
      "v1",
      "ValidDisputeStatementKind"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Explicit",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "BackingSeconded",
            "fields": [
              {
                "type": 9,
                "typeName": "Hash",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "BackingValid",
            "fields": [
              {
                "type": 9,
                "typeName": "Hash",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "ApprovalChecking",
            "fields": null,
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "26": {
    "path": [
      "sp_runtime",
      "TokenError"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NoFunds",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "WouldDie",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "BelowMinimum",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "CannotCreate",
            "fields": null,
            "index": 3,
            "docs": null
          },
          {
            "name": "UnknownAsset",
            "fields": null,
            "index": 4,
            "docs": null
          },
          {
            "name": "Frozen",
            "fields": null,
            "index": 5,
            "docs": null
          },
          {
            "name": "Unsupported",
            "fields": null,
            "index": 6,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "260": {
    "path": [
      "polkadot_primitives",
      "v1",
      "InvalidDisputeStatementKind"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Explicit",
            "fields": null,
            "index": 0,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "261": {
    "path": [
      "polkadot_runtime_parachains",
      "paras_inherent",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "TooManyInclusionInherents",
            "fields": null,
            "index": 0,
            "docs": [
              "Inclusion inherent called more than once per block."
            ]
          },
          {
            "name": "InvalidParentHeader",
            "fields": null,
            "index": 1,
            "docs": [
              "The hash of the submitted parent header doesn't correspond to the saved block hash of",
              "the parent."
            ]
          },
          {
            "name": "CandidateCouldBeInvalid",
            "fields": null,
            "index": 2,
            "docs": [
              "Potentially invalid candidate."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "262": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 228
      }
    },
    "docs": null
  },
  "263": {
    "path": [
      "polkadot_runtime_parachains",
      "scheduler",
      "ParathreadClaimQueue"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "queue",
            "type": 264,
            "typeName": "Vec\u003cQueuedParathread\u003e",
            "docs": null
          },
          {
            "name": "next_core_offset",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "264": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 265
      }
    },
    "docs": null
  },
  "265": {
    "path": [
      "polkadot_runtime_parachains",
      "scheduler",
      "QueuedParathread"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "claim",
            "type": 266,
            "typeName": "ParathreadEntry",
            "docs": null
          },
          {
            "name": "core_offset",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "266": {
    "path": [
      "polkadot_primitives",
      "v1",
      "ParathreadEntry"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "claim",
            "type": 267,
            "typeName": "ParathreadClaim",
            "docs": null
          },
          {
            "name": "retries",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "267": {
    "path": [
      "polkadot_primitives",
      "v1",
      "ParathreadClaim"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 48,
            "typeName": "Id",
            "docs": null
          },
          {
            "type": 49,
            "typeName": "CollatorId",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "268": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 269
      }
    },
    "docs": null
  },
  "269": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 270
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 270,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "27": {
    "path": [
      "sp_runtime",
      "ArithmeticError"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Underflow",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Overflow",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "DivisionByZero",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "270": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CoreOccupied"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Parathread",
            "fields": [
              {
                "type": 266,
                "typeName": "ParathreadEntry",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Parachain",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "271": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 48
      }
    },
    "docs": null
  },
  "272": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 273
      }
    },
    "docs": null
  },
  "273": {
    "path": [
      "polkadot_runtime_parachains",
      "scheduler",
      "CoreAssignment"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "core",
            "type": 55,
            "typeName": "CoreIndex",
            "docs": null
          },
          {
            "name": "para_id",
            "type": 48,
            "typeName": "ParaId",
            "docs": null
          },
          {
            "name": "kind",
            "type": 274,
            "typeName": "AssignmentKind",
            "docs": null
          },
          {
            "name": "group_idx",
            "type": 56,
            "typeName": "GroupIndex",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "274": {
    "path": [
      "polkadot_runtime_parachains",
      "scheduler",
      "AssignmentKind"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Parachain",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Parathread",
            "fields": [
              {
                "type": 49,
                "typeName": "CollatorId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "275": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "ParaLifecycle"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Onboarding",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Parathread",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Parachain",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "UpgradingParathread",
            "fields": null,
            "index": 3,
            "docs": null
          },
          {
            "name": "DowngradingParachain",
            "fields": null,
            "index": 4,
            "docs": null
          },
          {
            "name": "OffboardingParathread",
            "fields": null,
            "index": 5,
            "docs": null
          },
          {
            "name": "OffboardingParachain",
            "fields": null,
            "index": 6,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "276": {
    "path": null,
    "def": {
      "Tuple": [
        48,
        4
      ]
    },
    "docs": null
  },
  "277": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "ParaPastCodeMeta"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "upgrade_times",
            "type": 278,
            "typeName": "Vec\u003cReplacementTimes\u003cN\u003e\u003e",
            "docs": null
          },
          {
            "name": "last_pruned",
            "type": 202,
            "typeName": "Option\u003cN\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "278": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 279
      }
    },
    "docs": null
  },
  "279": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "ReplacementTimes"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "expected_at",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "activated_at",
            "type": 4,
            "typeName": "N",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "28": {
    "path": [
      "pallet_indices",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "IndexAssigned",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A account index was assigned. \\[index, who\\]"
            ]
          },
          {
            "name": "IndexFreed",
            "fields": [
              {
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A account index has been freed up (unassigned). \\[index\\]"
            ]
          },
          {
            "name": "IndexFrozen",
            "fields": [
              {
                "type": 4,
                "typeName": "T::AccountIndex",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A account index has been frozen to its current account ID. \\[index, who\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "280": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 276
      }
    },
    "docs": null
  },
  "281": {
    "path": [
      "polkadot_primitives",
      "v1",
      "UpgradeGoAhead"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Abort",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "GoAhead",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "282": {
    "path": [
      "polkadot_primitives",
      "v1",
      "UpgradeRestriction"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Present",
            "fields": null,
            "index": 0,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "283": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "ParaGenesisArgs"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "genesis_head",
            "type": 54,
            "typeName": "HeadData",
            "docs": null
          },
          {
            "name": "validation_code",
            "type": 241,
            "typeName": "ValidationCode",
            "docs": null
          },
          {
            "name": "parachain",
            "type": 76,
            "typeName": "bool",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "284": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "force_set_current_code",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "new_code",
                "type": 241,
                "typeName": "ValidationCode",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Set the storage for the parachain validation code immediately."
            ]
          },
          {
            "name": "force_set_current_head",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "new_head",
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Set the storage for the current parachain head data immediately."
            ]
          },
          {
            "name": "force_schedule_code_upgrade",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "new_code",
                "type": 241,
                "typeName": "ValidationCode",
                "docs": null
              },
              {
                "name": "relay_parent_number",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Schedule an upgrade as if it was scheduled in the given relay parent block."
            ]
          },
          {
            "name": "force_note_new_head",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "new_head",
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Note a new block head for para within the context of the current block."
            ]
          },
          {
            "name": "force_queue_action",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Put a parachain directly into the next session's action queue.",
              "We can't queue it any sooner than this without going into the",
              "initializer..."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "285": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NotRegistered",
            "fields": null,
            "index": 0,
            "docs": [
              "Para is not registered in our system."
            ]
          },
          {
            "name": "CannotOnboard",
            "fields": null,
            "index": 1,
            "docs": [
              "Para cannot be onboarded because it is already tracked by our system."
            ]
          },
          {
            "name": "CannotOffboard",
            "fields": null,
            "index": 2,
            "docs": [
              "Para cannot be offboarded at this time."
            ]
          },
          {
            "name": "CannotUpgrade",
            "fields": null,
            "index": 3,
            "docs": [
              "Para cannot be upgraded to a parachain."
            ]
          },
          {
            "name": "CannotDowngrade",
            "fields": null,
            "index": 4,
            "docs": [
              "Para cannot be downgraded to a parathread."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "286": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 287
      }
    },
    "docs": null
  },
  "287": {
    "path": [
      "polkadot_runtime_parachains",
      "initializer",
      "BufferedSessionChange"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "validators",
            "type": 230,
            "typeName": "Vec\u003cValidatorId\u003e",
            "docs": null
          },
          {
            "name": "queued",
            "type": 230,
            "typeName": "Vec\u003cValidatorId\u003e",
            "docs": null
          },
          {
            "name": "session_index",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "288": {
    "path": [
      "polkadot_runtime_parachains",
      "initializer",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "force_approve",
            "fields": [
              {
                "name": "up_to",
                "type": 4,
                "typeName": "BlockNumber",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Issue a signal to the consensus engine to forcibly act as though all parachain",
              "blocks in all relay chain blocks up to and including the given number in the current",
              "chain are valid and should be finalized."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "289": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 290
      }
    },
    "docs": null
  },
  "29": {
    "path": [
      "pallet_balances",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Endowed",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "An account was created with some free balance. \\[account, free_balance\\]"
            ]
          },
          {
            "name": "DustLost",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "An account was removed whose balance was non-zero but below ExistentialDeposit,",
              "resulting in an outright loss. \\[account, balance\\]"
            ]
          },
          {
            "name": "Transfer",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Transfer succeeded. \\[from, to, value\\]"
            ]
          },
          {
            "name": "BalanceSet",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A balance was set by root. \\[who, free, reserved\\]"
            ]
          },
          {
            "name": "Deposit",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Some amount was deposited (e.g. for transaction fees). \\[who, deposit\\]"
            ]
          },
          {
            "name": "Reserved",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Some balance was reserved (moved from free to reserved). \\[who, value\\]"
            ]
          },
          {
            "name": "Unreserved",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Some balance was unreserved (moved from reserved to free). \\[who, value\\]"
            ]
          },
          {
            "name": "ReserveRepatriated",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "T::Balance",
                "docs": null
              },
              {
                "type": 30,
                "typeName": "Status",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Some balance was moved from the reserve of the first account to the second account.",
              "Final argument indicates the destination balance type.",
              "\\[from, to, balance, destination_status\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "290": {
    "path": [
      "polkadot_core_primitives",
      "InboundDownwardMessage"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "sent_at",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "msg",
            "type": 10,
            "typeName": "DownwardMessage",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "291": {
    "path": [
      "polkadot_runtime_parachains",
      "dmp",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": null
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "292": {
    "path": null,
    "def": {
      "Tuple": [
        48,
        10
      ]
    },
    "docs": null
  },
  "293": {
    "path": [
      "polkadot_runtime_parachains",
      "ump",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "service_overweight",
            "fields": [
              {
                "name": "index",
                "type": 8,
                "typeName": "OverweightIndex",
                "docs": null
              },
              {
                "name": "weight_limit",
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Service a single overweight upward message.",
              "",
              "- `origin`: Must pass `ExecuteOverweightOrigin`.",
              "- `index`: The index of the overweight message to service.",
              "- `weight_limit`: The amount of weight that message execution may take.",
              "",
              "Errors:",
              "- `UnknownMessageIndex`: Message of `index` is unknown.",
              "- `WeightOverLimit`: Message execution may use greater than `weight_limit`.",
              "",
              "Events:",
              "- `OverweightServiced`: On success."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "294": {
    "path": [
      "polkadot_runtime_parachains",
      "ump",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "UnknownMessageIndex",
            "fields": null,
            "index": 0,
            "docs": [
              "The message index given is unknown."
            ]
          },
          {
            "name": "WeightOverLimit",
            "fields": null,
            "index": 1,
            "docs": [
              "The amount of weight given is possibly not enough for executing the message."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "295": {
    "path": [
      "polkadot_runtime_parachains",
      "hrmp",
      "HrmpOpenChannelRequest"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "confirmed",
            "type": 76,
            "typeName": "bool",
            "docs": null
          },
          {
            "name": "_age",
            "type": 4,
            "typeName": "SessionIndex",
            "docs": null
          },
          {
            "name": "sender_deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "max_message_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_capacity",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_total_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "296": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 62
      }
    },
    "docs": null
  },
  "297": {
    "path": [
      "polkadot_runtime_parachains",
      "hrmp",
      "HrmpChannel"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "max_capacity",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_total_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "max_message_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "msg_count",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "total_size",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "mqc_head",
            "type": 298,
            "typeName": "Option\u003cHash\u003e",
            "docs": null
          },
          {
            "name": "sender_deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "recipient_deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "298": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 9
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 9,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "299": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 300
      }
    },
    "docs": null
  },
  "3": {
    "path": [
      "frame_system",
      "AccountInfo"
    ],
    "params": [
      {
        "name": "Index",
        "type": 4
      },
      {
        "name": "AccountData",
        "type": 5
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "nonce",
            "type": 4,
            "typeName": "Index",
            "docs": null
          },
          {
            "name": "consumers",
            "type": 4,
            "typeName": "RefCount",
            "docs": null
          },
          {
            "name": "providers",
            "type": 4,
            "typeName": "RefCount",
            "docs": null
          },
          {
            "name": "sufficients",
            "type": 4,
            "typeName": "RefCount",
            "docs": null
          },
          {
            "name": "data",
            "type": 5,
            "typeName": "AccountData",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "30": {
    "path": [
      "frame_support",
      "traits",
      "tokens",
      "misc",
      "BalanceStatus"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Free",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Reserved",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "300": {
    "path": [
      "polkadot_core_primitives",
      "InboundHrmpMessage"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "sent_at",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "data",
            "type": 10,
            "typeName": "sp_std::vec::Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "301": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 302
      }
    },
    "docs": null
  },
  "302": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        271
      ]
    },
    "docs": null
  },
  "303": {
    "path": [
      "polkadot_runtime_parachains",
      "hrmp",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "hrmp_init_open_channel",
            "fields": [
              {
                "name": "recipient",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "proposed_max_capacity",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "proposed_max_message_size",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Initiate opening a channel from a parachain to a given recipient with given channel",
              "parameters.",
              "",
              "- `proposed_max_capacity` - specifies how many messages can be in the channel at once.",
              "- `proposed_max_message_size` - specifies the maximum size of any of the messages.",
              "",
              "These numbers are a subject to the relay-chain configuration limits.",
              "",
              "The channel can be opened only after the recipient confirms it and only on a session",
              "change."
            ]
          },
          {
            "name": "hrmp_accept_open_channel",
            "fields": [
              {
                "name": "sender",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Accept a pending open channel request from the given sender.",
              "",
              "The channel will be opened only on the next session boundary."
            ]
          },
          {
            "name": "hrmp_close_channel",
            "fields": [
              {
                "name": "channel_id",
                "type": 62,
                "typeName": "HrmpChannelId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Initiate unilateral closing of a channel. The origin must be either the sender or the",
              "recipient in the channel being closed.",
              "",
              "The closure can only happen on a session change."
            ]
          },
          {
            "name": "force_clean_hrmp",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "This extrinsic triggers the cleanup of all the HRMP storage items that",
              "a para may have. Normally this happens once per session, but this allows",
              "you to trigger the cleanup immediately for a specific parachain.",
              "",
              "Origin must be Root."
            ]
          },
          {
            "name": "force_process_hrmp_open",
            "fields": null,
            "index": 4,
            "docs": [
              "Force process HRMP open channel requests.",
              "",
              "If there are pending HRMP open channel requests, you can use this",
              "function process all of those requests immediately."
            ]
          },
          {
            "name": "force_process_hrmp_close",
            "fields": null,
            "index": 5,
            "docs": [
              "Force process HRMP close channel requests.",
              "",
              "If there are pending HRMP close channel requests, you can use this",
              "function process all of those requests immediately."
            ]
          },
          {
            "name": "hrmp_cancel_open_request",
            "fields": [
              {
                "name": "channel_id",
                "type": 62,
                "typeName": "HrmpChannelId",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "This cancels a pending open channel request. It can be canceled be either of the sender",
              "or the recipient for that request. The origin must be either of those.",
              "",
              "The cancelling happens immediately. It is not possible to cancel the request if it is",
              "already accepted."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "304": {
    "path": [
      "polkadot_runtime_parachains",
      "hrmp",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "OpenHrmpChannelToSelf",
            "fields": null,
            "index": 0,
            "docs": [
              "The sender tried to open a channel to themselves."
            ]
          },
          {
            "name": "OpenHrmpChannelInvalidRecipient",
            "fields": null,
            "index": 1,
            "docs": [
              "The recipient is not a valid para."
            ]
          },
          {
            "name": "OpenHrmpChannelZeroCapacity",
            "fields": null,
            "index": 2,
            "docs": [
              "The requested capacity is zero."
            ]
          },
          {
            "name": "OpenHrmpChannelCapacityExceedsLimit",
            "fields": null,
            "index": 3,
            "docs": [
              "The requested capacity exceeds the global limit."
            ]
          },
          {
            "name": "OpenHrmpChannelZeroMessageSize",
            "fields": null,
            "index": 4,
            "docs": [
              "The requested maximum message size is 0."
            ]
          },
          {
            "name": "OpenHrmpChannelMessageSizeExceedsLimit",
            "fields": null,
            "index": 5,
            "docs": [
              "The open request requested the message size that exceeds the global limit."
            ]
          },
          {
            "name": "OpenHrmpChannelAlreadyExists",
            "fields": null,
            "index": 6,
            "docs": [
              "The channel already exists"
            ]
          },
          {
            "name": "OpenHrmpChannelAlreadyRequested",
            "fields": null,
            "index": 7,
            "docs": [
              "There is already a request to open the same channel."
            ]
          },
          {
            "name": "OpenHrmpChannelLimitExceeded",
            "fields": null,
            "index": 8,
            "docs": [
              "The sender already has the maximum number of allowed outbound channels."
            ]
          },
          {
            "name": "AcceptHrmpChannelDoesntExist",
            "fields": null,
            "index": 9,
            "docs": [
              "The channel from the sender to the origin doesn't exist."
            ]
          },
          {
            "name": "AcceptHrmpChannelAlreadyConfirmed",
            "fields": null,
            "index": 10,
            "docs": [
              "The channel is already confirmed."
            ]
          },
          {
            "name": "AcceptHrmpChannelLimitExceeded",
            "fields": null,
            "index": 11,
            "docs": [
              "The recipient already has the maximum number of allowed inbound channels."
            ]
          },
          {
            "name": "CloseHrmpChannelUnauthorized",
            "fields": null,
            "index": 12,
            "docs": [
              "The origin tries to close a channel where it is neither the sender nor the recipient."
            ]
          },
          {
            "name": "CloseHrmpChannelDoesntExist",
            "fields": null,
            "index": 13,
            "docs": [
              "The channel to be closed doesn't exist."
            ]
          },
          {
            "name": "CloseHrmpChannelAlreadyUnderway",
            "fields": null,
            "index": 14,
            "docs": [
              "The channel close request is already requested."
            ]
          },
          {
            "name": "CancelHrmpOpenChannelUnauthorized",
            "fields": null,
            "index": 15,
            "docs": [
              "Canceling is requested by neither the sender nor recipient of the open channel request."
            ]
          },
          {
            "name": "OpenHrmpChannelDoesntExist",
            "fields": null,
            "index": 16,
            "docs": [
              "The open request doesn't exist."
            ]
          },
          {
            "name": "OpenHrmpChannelAlreadyConfirmed",
            "fields": null,
            "index": 17,
            "docs": [
              "Cannot cancel an HRMP open channel request because it is already confirmed."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "305": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 190
      }
    },
    "docs": null
  },
  "306": {
    "path": [
      "polkadot_primitives",
      "v1",
      "SessionInfo"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "validators",
            "type": 230,
            "typeName": "Vec\u003cValidatorId\u003e",
            "docs": null
          },
          {
            "name": "discovery_keys",
            "type": 307,
            "typeName": "Vec\u003cAuthorityDiscoveryId\u003e",
            "docs": null
          },
          {
            "name": "assignment_keys",
            "type": 305,
            "typeName": "Vec\u003cAssignmentId\u003e",
            "docs": null
          },
          {
            "name": "validator_groups",
            "type": 262,
            "typeName": "Vec\u003cVec\u003cValidatorIndex\u003e\u003e",
            "docs": null
          },
          {
            "name": "n_cores",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "zeroth_delay_tranche_width",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "relay_vrf_modulo_samples",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "n_delay_tranches",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "no_show_slots",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "needed_approvals",
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "307": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 191
      }
    },
    "docs": null
  },
  "308": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        64
      ]
    },
    "docs": null
  },
  "309": {
    "path": [
      "polkadot_primitives",
      "v1",
      "DisputeState"
    ],
    "params": [
      {
        "name": "N",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "validators_for",
            "type": 234,
            "typeName": "BitVec\u003cbitvec::order::Lsb0, u8\u003e",
            "docs": null
          },
          {
            "name": "validators_against",
            "type": 234,
            "typeName": "BitVec\u003cbitvec::order::Lsb0, u8\u003e",
            "docs": null
          },
          {
            "name": "start",
            "type": 4,
            "typeName": "N",
            "docs": null
          },
          {
            "name": "concluded_at",
            "type": 202,
            "typeName": "Option\u003cN\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "31": {
    "path": [
      "pallet_offences",
      "pallet",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Offence",
            "fields": [
              {
                "type": 32,
                "typeName": "Kind",
                "docs": null
              },
              {
                "type": 10,
                "typeName": "OpaqueTimeSlot",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "There is an offence reported of the given `kind` happened at the `session_index` and",
              "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
              "\\[kind, timeslot\\]."
            ]
          }
        ]
      }
    },
    "docs": [
      "Events type."
    ]
  },
  "310": {
    "path": [
      "polkadot_runtime_parachains",
      "disputes",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "DuplicateDisputeStatementSets",
            "fields": null,
            "index": 0,
            "docs": [
              "Duplicate dispute statement sets provided."
            ]
          },
          {
            "name": "AncientDisputeStatement",
            "fields": null,
            "index": 1,
            "docs": [
              "Ancient dispute statement provided."
            ]
          },
          {
            "name": "ValidatorIndexOutOfBounds",
            "fields": null,
            "index": 2,
            "docs": [
              "Validator index on statement is out of bounds for session."
            ]
          },
          {
            "name": "InvalidSignature",
            "fields": null,
            "index": 3,
            "docs": [
              "Invalid signature on statement."
            ]
          },
          {
            "name": "DuplicateStatement",
            "fields": null,
            "index": 4,
            "docs": [
              "Validator vote submitted more than once to dispute."
            ]
          },
          {
            "name": "PotentialSpam",
            "fields": null,
            "index": 5,
            "docs": [
              "Too many spam slots used by some specific validator."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "311": {
    "path": [
      "polkadot_runtime_common",
      "paras_registrar",
      "ParaInfo"
    ],
    "params": [
      {
        "name": "Account"
      },
      {
        "name": "Balance",
        "type": 6
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "manager",
            "type": 0,
            "typeName": "Account",
            "docs": null
          },
          {
            "name": "deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "locked",
            "type": 76,
            "typeName": "bool",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "312": {
    "path": [
      "polkadot_runtime_common",
      "paras_registrar",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "register",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "genesis_head",
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              },
              {
                "name": "validation_code",
                "type": 241,
                "typeName": "ValidationCode",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Register head data and validation code for a reserved Para Id.",
              "",
              "## Arguments",
              "- `origin`: Must be called by a `Signed` origin.",
              "- `id`: The para ID. Must be owned/managed by the `origin` signing account.",
              "- `genesis_head`: The genesis head data of the parachain/thread.",
              "- `validation_code`: The initial validation code of the parachain/thread.",
              "",
              "## Deposits/Fees",
              "The origin signed account must reserve a corresponding deposit for the registration. Anything already",
              "reserved previously for this para ID is accounted for.",
              "",
              "## Events",
              "The `Registered` event is emitted in case of success."
            ]
          },
          {
            "name": "force_register",
            "fields": [
              {
                "name": "who",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "deposit",
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "genesis_head",
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              },
              {
                "name": "validation_code",
                "type": 241,
                "typeName": "ValidationCode",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Force the registration of a Para Id on the relay chain.",
              "",
              "This function must be called by a Root origin.",
              "",
              "The deposit taken can be specified for this registration. Any `ParaId`",
              "can be registered, including sub-1000 IDs which are System Parachains."
            ]
          },
          {
            "name": "deregister",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Deregister a Para Id, freeing all data and returning any deposit.",
              "",
              "The caller must be Root, the `para` owner, or the `para` itself. The para must be a parathread."
            ]
          },
          {
            "name": "swap",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "other",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Swap a parachain with another parachain or parathread.",
              "",
              "The origin must be Root, the `para` owner, or the `para` itself.",
              "",
              "The swap will happen only if there is already an opposite swap pending. If there is not,",
              "the swap will be stored in the pending swaps map, ready for a later confirmatory swap.",
              "",
              "The `ParaId`s remain mapped to the same head data and code so external code can rely on",
              "`ParaId` to be a long-term identifier of a notional \"parachain\". However, their",
              "scheduling info (i.e. whether they're a parathread or parachain), auction information",
              "and the auction deposit are switched."
            ]
          },
          {
            "name": "force_remove_lock",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Remove a manager lock from a para. This will allow the manager of a",
              "previously locked para to deregister or swap a para without using governance.",
              "",
              "Can only be called by the Root origin."
            ]
          },
          {
            "name": "reserve",
            "fields": null,
            "index": 5,
            "docs": [
              "Reserve a Para Id on the relay chain.",
              "",
              "This function will reserve a new Para Id to be owned/managed by the origin account.",
              "The origin account is able to register head data and validation code using `register` to create",
              "a parathread. Using the Slots pallet, a parathread can then be upgraded to get a parachain slot.",
              "",
              "## Arguments",
              "- `origin`: Must be called by a `Signed` origin. Becomes the manager/owner of the new para ID.",
              "",
              "## Deposits/Fees",
              "The origin must reserve a deposit of `ParaDeposit` for the registration.",
              "",
              "## Events",
              "The `Reserved` event is emitted in case of success, which provides the ID reserved for use."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "313": {
    "path": [
      "polkadot_runtime_common",
      "paras_registrar",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NotRegistered",
            "fields": null,
            "index": 0,
            "docs": [
              "The ID is not registered."
            ]
          },
          {
            "name": "AlreadyRegistered",
            "fields": null,
            "index": 1,
            "docs": [
              "The ID is already registered."
            ]
          },
          {
            "name": "NotOwner",
            "fields": null,
            "index": 2,
            "docs": [
              "The caller is not the owner of this Id."
            ]
          },
          {
            "name": "CodeTooLarge",
            "fields": null,
            "index": 3,
            "docs": [
              "Invalid para code size."
            ]
          },
          {
            "name": "HeadDataTooLarge",
            "fields": null,
            "index": 4,
            "docs": [
              "Invalid para head data size."
            ]
          },
          {
            "name": "NotParachain",
            "fields": null,
            "index": 5,
            "docs": [
              "Para is not a Parachain."
            ]
          },
          {
            "name": "NotParathread",
            "fields": null,
            "index": 6,
            "docs": [
              "Para is not a Parathread."
            ]
          },
          {
            "name": "CannotDeregister",
            "fields": null,
            "index": 7,
            "docs": [
              "Cannot deregister para"
            ]
          },
          {
            "name": "CannotDowngrade",
            "fields": null,
            "index": 8,
            "docs": [
              "Cannot schedule downgrade of parachain to parathread"
            ]
          },
          {
            "name": "CannotUpgrade",
            "fields": null,
            "index": 9,
            "docs": [
              "Cannot schedule upgrade of parathread to parachain"
            ]
          },
          {
            "name": "ParaLocked",
            "fields": null,
            "index": 10,
            "docs": [
              "Para is locked from manipulation by the manager. Must use parachain or relay chain governance."
            ]
          },
          {
            "name": "NotReserved",
            "fields": null,
            "index": 11,
            "docs": [
              "The ID given for registration has not been reserved."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "314": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        48
      ]
    },
    "docs": null
  },
  "315": {
    "path": null,
    "def": {
      "Array": {
        "len": 36,
        "type": 316
      }
    },
    "docs": null
  },
  "316": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 317
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 317,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "317": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        48,
        6
      ]
    },
    "docs": null
  },
  "318": {
    "path": [
      "polkadot_runtime_common",
      "auctions",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "new_auction",
            "fields": [
              {
                "name": "duration",
                "type": 86,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "lease_period_index",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Create a new auction.",
              "",
              "This can only happen when there isn't already an auction in progress and may only be",
              "called by the root origin. Accepts the `duration` of this auction and the",
              "`lease_period_index` of the initial lease period of the four that are to be auctioned."
            ]
          },
          {
            "name": "bid",
            "fields": [
              {
                "name": "para",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "auction_index",
                "type": 86,
                "typeName": "AuctionIndex",
                "docs": null
              },
              {
                "name": "first_slot",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "last_slot",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "amount",
                "type": 90,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Make a new bid from an account (including a parachain account) for deploying a new",
              "parachain.",
              "",
              "Multiple simultaneous bids from the same bidder are allowed only as long as all active",
              "bids overlap each other (i.e. are mutually exclusive). Bids cannot be redacted.",
              "",
              "- `sub` is the sub-bidder ID, allowing for multiple competing bids to be made by (and",
              "funded by) the same account.",
              "- `auction_index` is the index of the auction to bid on. Should just be the present",
              "value of `AuctionCounter`.",
              "- `first_slot` is the first lease period index of the range to bid on. This is the",
              "absolute lease period index value, not an auction-specific offset.",
              "- `last_slot` is the last lease period index of the range to bid on. This is the",
              "absolute lease period index value, not an auction-specific offset.",
              "- `amount` is the amount to bid to be held as deposit for the parachain should the",
              "bid win. This amount is held throughout the range."
            ]
          },
          {
            "name": "cancel_auction",
            "fields": null,
            "index": 2,
            "docs": [
              "Cancel an in-progress auction.",
              "",
              "Can only be called by Root origin."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "319": {
    "path": null,
    "def": {
      "Compact": {
        "type": 48
      }
    },
    "docs": null
  },
  "32": {
    "path": null,
    "def": {
      "Array": {
        "len": 16,
        "type": 2
      }
    },
    "docs": null
  },
  "320": {
    "path": [
      "polkadot_runtime_common",
      "auctions",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "AuctionInProgress",
            "fields": null,
            "index": 0,
            "docs": [
              "This auction is already in progress."
            ]
          },
          {
            "name": "LeasePeriodInPast",
            "fields": null,
            "index": 1,
            "docs": [
              "The lease period is in the past."
            ]
          },
          {
            "name": "ParaNotRegistered",
            "fields": null,
            "index": 2,
            "docs": [
              "Para is not registered"
            ]
          },
          {
            "name": "NotCurrentAuction",
            "fields": null,
            "index": 3,
            "docs": [
              "Not a current auction."
            ]
          },
          {
            "name": "NotAuction",
            "fields": null,
            "index": 4,
            "docs": [
              "Not an auction."
            ]
          },
          {
            "name": "AuctionEnded",
            "fields": null,
            "index": 5,
            "docs": [
              "Auction has already ended."
            ]
          },
          {
            "name": "AlreadyLeasedOut",
            "fields": null,
            "index": 6,
            "docs": [
              "The para is already leased out for part of this range."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "321": {
    "path": [
      "polkadot_runtime_common",
      "crowdloan",
      "FundInfo"
    ],
    "params": [
      {
        "name": "AccountId"
      },
      {
        "name": "Balance",
        "type": 6
      },
      {
        "name": "BlockNumber",
        "type": 4
      },
      {
        "name": "LeasePeriod",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "depositor",
            "type": 0,
            "typeName": "AccountId",
            "docs": null
          },
          {
            "name": "verifier",
            "type": 322,
            "typeName": "Option\u003cMultiSigner\u003e",
            "docs": null
          },
          {
            "name": "deposit",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "raised",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "end",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          },
          {
            "name": "cap",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "last_contribution",
            "type": 324,
            "typeName": "LastContribution\u003cBlockNumber\u003e",
            "docs": null
          },
          {
            "name": "first_period",
            "type": 4,
            "typeName": "LeasePeriod",
            "docs": null
          },
          {
            "name": "last_period",
            "type": 4,
            "typeName": "LeasePeriod",
            "docs": null
          },
          {
            "name": "trie_index",
            "type": 4,
            "typeName": "TrieIndex",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "322": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 323
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 323,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "323": {
    "path": [
      "sp_runtime",
      "MultiSigner"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Ed25519",
            "fields": [
              {
                "type": 38,
                "typeName": "ed25519::Public",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Sr25519",
            "fields": [
              {
                "type": 41,
                "typeName": "sr25519::Public",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Ecdsa",
            "fields": [
              {
                "type": 193,
                "typeName": "ecdsa::Public",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "324": {
    "path": [
      "polkadot_runtime_common",
      "crowdloan",
      "LastContribution"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Never",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "PreEnding",
            "fields": [
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Ending",
            "fields": [
              {
                "type": 4,
                "typeName": "BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "325": {
    "path": [
      "polkadot_runtime_common",
      "crowdloan",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "create",
            "fields": [
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "cap",
                "type": 90,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "first_period",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "last_period",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "end",
                "type": 86,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "verifier",
                "type": 322,
                "typeName": "Option\u003cMultiSigner\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Create a new crowdloaning campaign for a parachain slot with the given lease period range.",
              "",
              "This applies a lock to your parachain configuration, ensuring that it cannot be changed",
              "by the parachain manager."
            ]
          },
          {
            "name": "contribute",
            "fields": [
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "value",
                "type": 90,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "signature",
                "type": 326,
                "typeName": "Option\u003cMultiSignature\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Contribute to a crowd sale. This will transfer some balance over to fund a parachain",
              "slot. It will be withdrawable when the crowdloan has ended and the funds are unused."
            ]
          },
          {
            "name": "withdraw",
            "fields": [
              {
                "name": "who",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Withdraw full balance of a specific contributor.",
              "",
              "Origin must be signed, but can come from anyone.",
              "",
              "The fund must be either in, or ready for, retirement. For a fund to be *in* retirement, then the retirement",
              "flag must be set. For a fund to be ready for retirement, then:",
              "- it must not already be in retirement;",
              "- the amount of raised funds must be bigger than the _free_ balance of the account;",
              "- and either:",
              "  - the block number must be at least `end`; or",
              "  - the current lease period must be greater than the fund's `last_period`.",
              "",
              "In this case, the fund's retirement flag is set and its `end` is reset to the current block",
              "number.",
              "",
              "- `who`: The account whose contribution should be withdrawn.",
              "- `index`: The parachain to whose crowdloan the contribution was made."
            ]
          },
          {
            "name": "refund",
            "fields": [
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Automatically refund contributors of an ended crowdloan.",
              "Due to weight restrictions, this function may need to be called multiple",
              "times to fully refund all users. We will refund `RemoveKeysLimit` users at a time.",
              "",
              "Origin must be signed, but can come from anyone."
            ]
          },
          {
            "name": "dissolve",
            "fields": [
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Remove a fund after the retirement period has ended and all funds have been returned."
            ]
          },
          {
            "name": "edit",
            "fields": [
              {
                "name": "index",
                "type": 319,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "cap",
                "type": 90,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "first_period",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "last_period",
                "type": 86,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "end",
                "type": 86,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "verifier",
                "type": 322,
                "typeName": "Option\u003cMultiSigner\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Edit the configuration for an in-progress crowdloan.",
              "",
              "Can only be called by Root origin."
            ]
          },
          {
            "name": "add_memo",
            "fields": [
              {
                "name": "index",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "memo",
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Add an optional memo to an existing crowdloan contribution.",
              "",
              "Origin must be Signed, and the user must have contributed to the crowdloan."
            ]
          },
          {
            "name": "poke",
            "fields": [
              {
                "name": "index",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Poke the fund into `NewRaise`",
              "",
              "Origin must be Signed, and the fund has non-zero raise."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "326": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 327
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 327,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "327": {
    "path": [
      "sp_runtime",
      "MultiSignature"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Ed25519",
            "fields": [
              {
                "type": 209,
                "typeName": "ed25519::Signature",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Sr25519",
            "fields": [
              {
                "type": 51,
                "typeName": "sr25519::Signature",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Ecdsa",
            "fields": [
              {
                "type": 328,
                "typeName": "ecdsa::Signature",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "328": {
    "path": [
      "sp_core",
      "ecdsa",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 329,
            "typeName": "[u8; 65]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "329": {
    "path": null,
    "def": {
      "Array": {
        "len": 65,
        "type": 2
      }
    },
    "docs": null
  },
  "33": {
    "path": [
      "pallet_session",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NewSession",
            "fields": [
              {
                "type": 4,
                "typeName": "SessionIndex",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "New session has happened. Note that the argument is the \\[session_index\\], not the",
              "block number as the type might suggest."
            ]
          }
        ]
      }
    },
    "docs": [
      "Events for this module.",
      ""
    ]
  },
  "330": {
    "path": [
      "frame_support",
      "PalletId"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 102,
            "typeName": "[u8; 8]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "331": {
    "path": [
      "polkadot_runtime_common",
      "crowdloan",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "FirstPeriodInPast",
            "fields": null,
            "index": 0,
            "docs": [
              "The current lease period is more than the first lease period."
            ]
          },
          {
            "name": "FirstPeriodTooFarInFuture",
            "fields": null,
            "index": 1,
            "docs": [
              "The first lease period needs to at least be less than 3 `max_value`."
            ]
          },
          {
            "name": "LastPeriodBeforeFirstPeriod",
            "fields": null,
            "index": 2,
            "docs": [
              "Last lease period must be greater than first lease period."
            ]
          },
          {
            "name": "LastPeriodTooFarInFuture",
            "fields": null,
            "index": 3,
            "docs": [
              "The last lease period cannot be more then 3 periods after the first period."
            ]
          },
          {
            "name": "CannotEndInPast",
            "fields": null,
            "index": 4,
            "docs": [
              "The campaign ends before the current block number. The end must be in the future."
            ]
          },
          {
            "name": "EndTooFarInFuture",
            "fields": null,
            "index": 5,
            "docs": [
              "The end date for this crowdloan is not sensible."
            ]
          },
          {
            "name": "Overflow",
            "fields": null,
            "index": 6,
            "docs": [
              "There was an overflow."
            ]
          },
          {
            "name": "ContributionTooSmall",
            "fields": null,
            "index": 7,
            "docs": [
              "The contribution was below the minimum, `MinContribution`."
            ]
          },
          {
            "name": "InvalidParaId",
            "fields": null,
            "index": 8,
            "docs": [
              "Invalid fund index."
            ]
          },
          {
            "name": "CapExceeded",
            "fields": null,
            "index": 9,
            "docs": [
              "Contributions exceed maximum amount."
            ]
          },
          {
            "name": "ContributionPeriodOver",
            "fields": null,
            "index": 10,
            "docs": [
              "The contribution period has already ended."
            ]
          },
          {
            "name": "InvalidOrigin",
            "fields": null,
            "index": 11,
            "docs": [
              "The origin of this call is invalid."
            ]
          },
          {
            "name": "NotParachain",
            "fields": null,
            "index": 12,
            "docs": [
              "This crowdloan does not correspond to a parachain."
            ]
          },
          {
            "name": "LeaseActive",
            "fields": null,
            "index": 13,
            "docs": [
              "This parachain lease is still active and retirement cannot yet begin."
            ]
          },
          {
            "name": "BidOrLeaseActive",
            "fields": null,
            "index": 14,
            "docs": [
              "This parachain's bid or lease is still active and withdraw cannot yet begin."
            ]
          },
          {
            "name": "FundNotEnded",
            "fields": null,
            "index": 15,
            "docs": [
              "The crowdloan has not yet ended."
            ]
          },
          {
            "name": "NoContributions",
            "fields": null,
            "index": 16,
            "docs": [
              "There are no contributions stored in this crowdloan."
            ]
          },
          {
            "name": "NotReadyToDissolve",
            "fields": null,
            "index": 17,
            "docs": [
              "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period."
            ]
          },
          {
            "name": "InvalidSignature",
            "fields": null,
            "index": 18,
            "docs": [
              "Invalid signature."
            ]
          },
          {
            "name": "MemoTooLarge",
            "fields": null,
            "index": 19,
            "docs": [
              "The provided memo is too large."
            ]
          },
          {
            "name": "AlreadyInNewRaise",
            "fields": null,
            "index": 20,
            "docs": [
              "The fund is already in `NewRaise`"
            ]
          },
          {
            "name": "VrfDelayInProgress",
            "fields": null,
            "index": 21,
            "docs": [
              "No contributions allowed during the VRF delay"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "332": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 333
      }
    },
    "docs": null
  },
  "333": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 334
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 334,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "334": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        6
      ]
    },
    "docs": null
  },
  "335": {
    "path": [
      "polkadot_runtime_common",
      "slots",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "force_lease",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "leaser",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "amount",
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "period_begin",
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "name": "period_count",
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Just a connect into the `lease_out` call, in case Root wants to force some lease to happen",
              "independently of any other on-chain mechanism to use it.",
              "",
              "Can only be called by the Root origin."
            ]
          },
          {
            "name": "clear_all_leases",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Clear all leases for a Para Id, refunding any deposits back to the original owners.",
              "",
              "Can only be called by the Root origin."
            ]
          },
          {
            "name": "trigger_onboard",
            "fields": [
              {
                "name": "para",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Try to onboard a parachain that has a lease for the current lease period.",
              "",
              "This function can be useful if there was some state issue with a para that should",
              "have onboarded, but was unable to. As long as they have a lease period, we can",
              "let them onboard from here.",
              "",
              "Origin must be signed, but can be called by anyone."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "336": {
    "path": [
      "polkadot_runtime_common",
      "slots",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ParaNotOnboarding",
            "fields": null,
            "index": 0,
            "docs": [
              "The parachain ID is not onboarding."
            ]
          },
          {
            "name": "LeaseError",
            "fields": null,
            "index": 1,
            "docs": [
              "There was an error with the lease."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "337": {
    "path": [
      "polkadot_runtime_common",
      "paras_sudo_wrapper",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "sudo_schedule_para_initialize",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "genesis",
                "type": 283,
                "typeName": "ParaGenesisArgs",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Schedule a para to be initialized at the start of the next session."
            ]
          },
          {
            "name": "sudo_schedule_para_cleanup",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Schedule a para to be cleaned up at the start of the next session."
            ]
          },
          {
            "name": "sudo_schedule_parathread_upgrade",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Upgrade a parathread to a parachain"
            ]
          },
          {
            "name": "sudo_schedule_parachain_downgrade",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Downgrade a parachain to a parathread"
            ]
          },
          {
            "name": "sudo_queue_downward_xcm",
            "fields": [
              {
                "name": "id",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 338,
                "typeName": "Box\u003cxcm::opaque::VersionedXcm\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Send a downward XCM to the given para.",
              "",
              "The given parachain should exist and the payload should not exceed the preconfigured size",
              "`config.max_downward_message_size`."
            ]
          },
          {
            "name": "sudo_establish_hrmp_channel",
            "fields": [
              {
                "name": "sender",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Forcefully establish a channel from the sender to the recipient.",
              "",
              "This is equivalent to sending an `Hrmp::hrmp_init_open_channel` extrinsic followed by",
              "`Hrmp::hrmp_accept_open_channel`."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "338": {
    "path": [
      "xcm",
      "VersionedXcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V0",
            "fields": [
              {
                "type": 339,
                "typeName": "v0::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "V1",
            "fields": [
              {
                "type": 344,
                "typeName": "v1::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "V2",
            "fields": [
              {
                "type": 93,
                "typeName": "v2::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "339": {
    "path": [
      "xcm",
      "v0",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposit",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "TeleportAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "response",
                "type": 343,
                "typeName": "Response",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 107,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "RelayedFrom",
            "fields": [
              {
                "name": "who",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "message",
                "type": 339,
                "typeName": "alloc::boxed::Box\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "34": {
    "path": [
      "pallet_grandpa",
      "pallet",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NewAuthorities",
            "fields": [
              {
                "type": 35,
                "typeName": "AuthorityList",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "New authority set has been applied. \\[authority_set\\]"
            ]
          },
          {
            "name": "Paused",
            "fields": null,
            "index": 1,
            "docs": [
              "Current authority set has been paused."
            ]
          },
          {
            "name": "Resumed",
            "fields": null,
            "index": 2,
            "docs": [
              "Current authority set has been resumed."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "340": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 341
      }
    },
    "docs": null
  },
  "341": {
    "path": [
      "xcm",
      "v0",
      "order",
      "Order"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Null",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "receive",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 115,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "debt",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "halt_on_error",
                "type": 76,
                "typeName": "bool",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 342,
                "typeName": "Vec\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "342": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 339
      }
    },
    "docs": null
  },
  "343": {
    "path": [
      "xcm",
      "v0",
      "Response"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Assets",
            "fields": [
              {
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "344": {
    "path": [
      "xcm",
      "v1",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposited",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "ReceiveTeleportedAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "response",
                "type": 348,
                "typeName": "Response",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 107,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "RelayedFrom",
            "fields": [
              {
                "name": "who",
                "type": 84,
                "typeName": "InteriorMultiLocation",
                "docs": null
              },
              {
                "name": "message",
                "type": 344,
                "typeName": "alloc::boxed::Box\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "SubscribeVersion",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "UnsubscribeVersion",
            "fields": null,
            "index": 12,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "345": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 346
      }
    },
    "docs": null
  },
  "346": {
    "path": [
      "xcm",
      "v1",
      "order",
      "Order"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Noop",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "receive",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 98,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "debt",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "halt_on_error",
                "type": 76,
                "typeName": "bool",
                "docs": null
              },
              {
                "name": "instructions",
                "type": 347,
                "typeName": "Vec\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "347": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 344
      }
    },
    "docs": null
  },
  "348": {
    "path": [
      "xcm",
      "v1",
      "Response"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Assets",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Version",
            "fields": [
              {
                "type": 4,
                "typeName": "super::Version",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "349": {
    "path": [
      "polkadot_runtime_common",
      "paras_sudo_wrapper",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ParaDoesntExist",
            "fields": null,
            "index": 0,
            "docs": [
              "The specified parachain or parathread is not registered."
            ]
          },
          {
            "name": "ParaAlreadyExists",
            "fields": null,
            "index": 1,
            "docs": [
              "The specified parachain or parathread is already registered."
            ]
          },
          {
            "name": "ExceedsMaxMessageSize",
            "fields": null,
            "index": 2,
            "docs": [
              "A DMP message couldn't be sent because it exceeds the maximum size allowed for a downward",
              "message."
            ]
          },
          {
            "name": "CouldntCleanup",
            "fields": null,
            "index": 3,
            "docs": [
              "Could not schedule para cleanup."
            ]
          },
          {
            "name": "NotParathread",
            "fields": null,
            "index": 4,
            "docs": [
              "Not a parathread."
            ]
          },
          {
            "name": "NotParachain",
            "fields": null,
            "index": 5,
            "docs": [
              "Not a parachain."
            ]
          },
          {
            "name": "CannotUpgrade",
            "fields": null,
            "index": 6,
            "docs": [
              "Cannot upgrade parathread."
            ]
          },
          {
            "name": "CannotDowngrade",
            "fields": null,
            "index": 7,
            "docs": [
              "Cannot downgrade parachain."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "35": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 36
      }
    },
    "docs": null
  },
  "350": {
    "path": [
      "pallet_sudo",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "sudo",
            "fields": [
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Authenticates the sudo key and dispatches a function call with `Root` origin.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "# \u003cweight\u003e",
              "- O(1).",
              "- Limited storage reads.",
              "- One DB write (event).",
              "- Weight of derivative `call` execution + 10,000.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "sudo_unchecked_weight",
            "fields": [
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              },
              {
                "name": "weight",
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Authenticates the sudo key and dispatches a function call with `Root` origin.",
              "This function does not check the weight of the call, and instead allows the",
              "Sudo user to specify the weight of the call.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "# \u003cweight\u003e",
              "- O(1).",
              "- The weight of this call is defined by the caller.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "set_key",
            "fields": [
              {
                "name": "new",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo",
              "key.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "# \u003cweight\u003e",
              "- O(1).",
              "- Limited storage reads.",
              "- One DB change.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "sudo_as",
            "fields": [
              {
                "name": "who",
                "type": 171,
                "typeName": "\u003cT::Lookup as StaticLookup\u003e::Source",
                "docs": null
              },
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Authenticates the sudo key and dispatches a function call with `Signed` origin from",
              "a given account.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "# \u003cweight\u003e",
              "- O(1).",
              "- Limited storage reads.",
              "- One DB write (event).",
              "- Weight of derivative `call` execution + 10,000.",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "351": {
    "path": [
      "rococo_runtime",
      "Call"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "System",
            "fields": [
              {
                "type": 125,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cSystem, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Babe",
            "fields": [
              {
                "type": 152,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cBabe, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Timestamp",
            "fields": [
              {
                "type": 158,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cTimestamp, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Indices",
            "fields": [
              {
                "type": 160,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cIndices, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "Balances",
            "fields": [
              {
                "type": 170,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cBalances, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "Authorship",
            "fields": [
              {
                "type": 181,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cAuthorship, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "Session",
            "fields": [
              {
                "type": 198,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cSession, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "Grandpa",
            "fields": [
              {
                "type": 203,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cGrandpa, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "ImOnline",
            "fields": [
              {
                "type": 217,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cImOnline, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "Configuration",
            "fields": [
              {
                "type": 226,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cConfiguration, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 14,
            "docs": null
          },
          {
            "name": "ParasShared",
            "fields": [
              {
                "type": 231,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cParasShared, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 15,
            "docs": null
          },
          {
            "name": "ParaInclusion",
            "fields": [
              {
                "type": 242,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cParaInclusion, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "ParaInherent",
            "fields": [
              {
                "type": 244,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cParaInherent, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 17,
            "docs": null
          },
          {
            "name": "Paras",
            "fields": [
              {
                "type": 284,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cParas, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 19,
            "docs": null
          },
          {
            "name": "Initializer",
            "fields": [
              {
                "type": 288,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cInitializer, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 20,
            "docs": null
          },
          {
            "name": "Dmp",
            "fields": [
              {
                "type": 291,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cDmp, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 21,
            "docs": null
          },
          {
            "name": "Ump",
            "fields": [
              {
                "type": 293,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cUmp, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 22,
            "docs": null
          },
          {
            "name": "Hrmp",
            "fields": [
              {
                "type": 303,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cHrmp, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 23,
            "docs": null
          },
          {
            "name": "Registrar",
            "fields": [
              {
                "type": 312,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cRegistrar, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 26,
            "docs": null
          },
          {
            "name": "Auctions",
            "fields": [
              {
                "type": 318,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cAuctions, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 27,
            "docs": null
          },
          {
            "name": "Crowdloan",
            "fields": [
              {
                "type": 325,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cCrowdloan, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 28,
            "docs": null
          },
          {
            "name": "Slots",
            "fields": [
              {
                "type": 335,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cSlots, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 29,
            "docs": null
          },
          {
            "name": "ParasSudoWrapper",
            "fields": [
              {
                "type": 337,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cParasSudoWrapper, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 30,
            "docs": null
          },
          {
            "name": "Sudo",
            "fields": [
              {
                "type": 350,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cSudo, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 31,
            "docs": null
          },
          {
            "name": "ValidatorManager",
            "fields": [
              {
                "type": 352,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cValidatorManager, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 35,
            "docs": null
          },
          {
            "name": "Collective",
            "fields": [
              {
                "type": 353,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cCollective, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 80,
            "docs": null
          },
          {
            "name": "Membership",
            "fields": [
              {
                "type": 354,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cMembership, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 81,
            "docs": null
          },
          {
            "name": "Utility",
            "fields": [
              {
                "type": 355,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cUtility, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 90,
            "docs": null
          },
          {
            "name": "Proxy",
            "fields": [
              {
                "type": 357,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cProxy, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 91,
            "docs": null
          },
          {
            "name": "XcmPallet",
            "fields": [
              {
                "type": 359,
                "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor\u003cXcmPallet, Runtime\u003e",
                "docs": null
              }
            ],
            "index": 99,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "352": {
    "path": [
      "rococo_runtime",
      "validator_manager",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "register_validators",
            "fields": [
              {
                "name": "validators",
                "type": 74,
                "typeName": "Vec\u003cT::ValidatorId\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Add new validators to the set.",
              "",
              "The new validators will be active from current session + 2."
            ]
          },
          {
            "name": "deregister_validators",
            "fields": [
              {
                "name": "validators",
                "type": 74,
                "typeName": "Vec\u003cT::ValidatorId\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Remove validators from the set.",
              "",
              "The removed validators will be deactivated from current session + 2."
            ]
          }
        ]
      }
    },
    "docs": [
      "Dispatchable calls.",
      "",
      "Each variant of this enum maps to a dispatchable function from the associated module."
    ]
  },
  "353": {
    "path": [
      "pallet_collective",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "set_members",
            "fields": [
              {
                "name": "new_members",
                "type": 74,
                "typeName": "Vec\u003cT::AccountId\u003e",
                "docs": null
              },
              {
                "name": "prime",
                "type": 180,
                "typeName": "Option\u003cT::AccountId\u003e",
                "docs": null
              },
              {
                "name": "old_count",
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Set the collective's membership.",
              "",
              "- `new_members`: The new member list. Be nice to the chain and provide it sorted.",
              "- `prime`: The prime member whose vote sets the default.",
              "- `old_count`: The upper bound for the previous number of members in storage. Used for",
              "  weight estimation.",
              "",
              "Requires root origin.",
              "",
              "NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but",
              "      the weight estimations rely on it to estimate dispatchable weight.",
              "",
              "# \u003cweight\u003e",
              "## Weight",
              "- `O(MP + N)` where:",
              "  - `M` old-members-count (code- and governance-bounded)",
              "  - `N` new-members-count (code- and governance-bounded)",
              "  - `P` proposals-count (code-bounded)",
              "- DB:",
              "  - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the",
              "    members",
              "  - 1 storage read (codec `O(P)`) for reading the proposals",
              "  - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal",
              "  - 1 storage write (codec `O(1)`) for deleting the old `prime` and setting the new one",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "execute",
            "fields": [
              {
                "name": "proposal",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003cI\u003e\u003e::Proposal\u003e",
                "docs": null
              },
              {
                "name": "length_bound",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Dispatch a proposal from a member using the `Member` origin.",
              "",
              "Origin must be a member of the collective.",
              "",
              "# \u003cweight\u003e",
              "## Weight",
              "- `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching",
              "  `proposal`",
              "- DB: 1 read (codec `O(M)`) + DB access of `proposal`",
              "- 1 event",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "propose",
            "fields": [
              {
                "name": "threshold",
                "type": 86,
                "typeName": "MemberCount",
                "docs": null
              },
              {
                "name": "proposal",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003cI\u003e\u003e::Proposal\u003e",
                "docs": null
              },
              {
                "name": "length_bound",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Add a new proposal to either be voted on or executed directly.",
              "",
              "Requires the sender to be member.",
              "",
              "`threshold` determines whether `proposal` is executed directly (`threshold \u003c 2`)",
              "or put up for voting.",
              "",
              "# \u003cweight\u003e",
              "## Weight",
              "- `O(B + M + P1)` or `O(B + M + P2)` where:",
              "  - `B` is `proposal` size in bytes (length-fee-bounded)",
              "  - `M` is members-count (code- and governance-bounded)",
              "  - branching is influenced by `threshold` where:",
              "    - `P1` is proposal execution complexity (`threshold \u003c 2`)",
              "    - `P2` is proposals-count (code-bounded) (`threshold \u003e= 2`)",
              "- DB:",
              "  - 1 storage read `is_member` (codec `O(M)`)",
              "  - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)",
              "  - DB accesses influenced by `threshold`:",
              "    - EITHER storage accesses done by `proposal` (`threshold \u003c 2`)",
              "    - OR proposal insertion (`threshold \u003c= 2`)",
              "      - 1 storage mutation `Proposals` (codec `O(P2)`)",
              "      - 1 storage mutation `ProposalCount` (codec `O(1)`)",
              "      - 1 storage write `ProposalOf` (codec `O(B)`)",
              "      - 1 storage write `Voting` (codec `O(M)`)",
              "  - 1 event",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "vote",
            "fields": [
              {
                "name": "proposal",
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "name": "index",
                "type": 86,
                "typeName": "ProposalIndex",
                "docs": null
              },
              {
                "name": "approve",
                "type": 76,
                "typeName": "bool",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Add an aye or nay vote for the sender to the given proposal.",
              "",
              "Requires the sender to be a member.",
              "",
              "Transaction fees will be waived if the member is voting on any particular proposal",
              "for the first time and the call is successful. Subsequent vote changes will charge a",
              "fee.",
              "# \u003cweight\u003e",
              "## Weight",
              "- `O(M)` where `M` is members-count (code- and governance-bounded)",
              "- DB:",
              "  - 1 storage read `Members` (codec `O(M)`)",
              "  - 1 storage mutation `Voting` (codec `O(M)`)",
              "- 1 event",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "close",
            "fields": [
              {
                "name": "proposal_hash",
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "name": "index",
                "type": 86,
                "typeName": "ProposalIndex",
                "docs": null
              },
              {
                "name": "proposal_weight_bound",
                "type": 88,
                "typeName": "Weight",
                "docs": null
              },
              {
                "name": "length_bound",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Close a vote that is either approved, disapproved or whose voting period has ended.",
              "",
              "May be called by any signed account in order to finish voting and close the proposal.",
              "",
              "If called before the end of the voting period it will only close the vote if it is",
              "has enough votes to be approved or disapproved.",
              "",
              "If called after the end of the voting period abstentions are counted as rejections",
              "unless there is a prime member set and the prime member cast an approval.",
              "",
              "If the close operation completes successfully with disapproval, the transaction fee will",
              "be waived. Otherwise execution of the approved operation will be charged to the caller.",
              "",
              "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
              "proposal.",
              "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
              "`storage::read` so it is `size_of::\u003cu32\u003e() == 4` larger than the pure length.",
              "",
              "# \u003cweight\u003e",
              "## Weight",
              "- `O(B + M + P1 + P2)` where:",
              "  - `B` is `proposal` size in bytes (length-fee-bounded)",
              "  - `M` is members-count (code- and governance-bounded)",
              "  - `P1` is the complexity of `proposal` preimage.",
              "  - `P2` is proposal-count (code-bounded)",
              "- DB:",
              " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
              " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
              "   `O(P2)`)",
              " - any mutations done while executing `proposal` (`P1`)",
              "- up to 3 events",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "disapprove_proposal",
            "fields": [
              {
                "name": "proposal_hash",
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Disapprove a proposal, close, and remove it from the system, regardless of its current",
              "state.",
              "",
              "Must be called by the Root origin.",
              "",
              "Parameters:",
              "* `proposal_hash`: The hash of the proposal that should be disapproved.",
              "",
              "# \u003cweight\u003e",
              "Complexity: O(P) where P is the number of max proposals",
              "DB Weight:",
              "* Reads: Proposals",
              "* Writes: Voting, Proposals, ProposalOf",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "354": {
    "path": [
      "pallet_membership",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "add_member",
            "fields": [
              {
                "name": "who",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Add a member `who` to the set.",
              "",
              "May only be called from `T::AddOrigin`."
            ]
          },
          {
            "name": "remove_member",
            "fields": [
              {
                "name": "who",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Remove a member `who` from the set.",
              "",
              "May only be called from `T::RemoveOrigin`."
            ]
          },
          {
            "name": "swap_member",
            "fields": [
              {
                "name": "remove",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "add",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Swap out one member `remove` for another `add`.",
              "",
              "May only be called from `T::SwapOrigin`.",
              "",
              "Prime membership is *not* passed from `remove` to `add`, if extant."
            ]
          },
          {
            "name": "reset_members",
            "fields": [
              {
                "name": "members",
                "type": 74,
                "typeName": "Vec\u003cT::AccountId\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Change the membership to a new set, disregarding the existing membership. Be nice and",
              "pass `members` pre-sorted.",
              "",
              "May only be called from `T::ResetOrigin`."
            ]
          },
          {
            "name": "change_key",
            "fields": [
              {
                "name": "new",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Swap out the sending member for some other key `new`.",
              "",
              "May only be called from `Signed` origin of a current member.",
              "",
              "Prime membership is passed from the origin account to `new`, if extant."
            ]
          },
          {
            "name": "set_prime",
            "fields": [
              {
                "name": "who",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Set the prime member. Must be a current member.",
              "",
              "May only be called from `T::PrimeOrigin`."
            ]
          },
          {
            "name": "clear_prime",
            "fields": null,
            "index": 6,
            "docs": [
              "Remove the prime member if it exists.",
              "",
              "May only be called from `T::PrimeOrigin`."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "355": {
    "path": [
      "pallet_utility",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "batch",
            "fields": [
              {
                "name": "calls",
                "type": 356,
                "typeName": "Vec\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Send a batch of dispatch calls.",
              "",
              "May be called from any origin.",
              "",
              "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
              "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
              "",
              "If origin is root then call are dispatch without checking origin filter. (This includes",
              "bypassing `frame_system::Config::BaseCallFilter`).",
              "",
              "# \u003cweight\u003e",
              "- Complexity: O(C) where C is the number of calls to be batched.",
              "# \u003c/weight\u003e",
              "",
              "This will return `Ok` in all circumstances. To determine the success of the batch, an",
              "event is deposited. If a call failed and the batch was interrupted, then the",
              "`BatchInterrupted` event is deposited, along with the number of successful calls made",
              "and the error of the failed call. If all were successful, then the `BatchCompleted`",
              "event is deposited."
            ]
          },
          {
            "name": "as_derivative",
            "fields": [
              {
                "name": "index",
                "type": 81,
                "typeName": "u16",
                "docs": null
              },
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Send a call through an indexed pseudonym of the sender.",
              "",
              "Filter from origin are passed along. The call will be dispatched with an origin which",
              "use the same filter as the origin of this call.",
              "",
              "NOTE: If you need to ensure that any account-based filtering is not honored (i.e.",
              "because you expect `proxy` to have been used prior in the call stack and you do not want",
              "the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`",
              "in the Multisig pallet instead.",
              "",
              "NOTE: Prior to version *12, this was called `as_limited_sub`.",
              "",
              "The dispatch origin for this call must be _Signed_."
            ]
          },
          {
            "name": "batch_all",
            "fields": [
              {
                "name": "calls",
                "type": 356,
                "typeName": "Vec\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Send a batch of dispatch calls and atomically execute them.",
              "The whole transaction will rollback and fail if any of the calls failed.",
              "",
              "May be called from any origin.",
              "",
              "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
              "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
              "",
              "If origin is root then call are dispatch without checking origin filter. (This includes",
              "bypassing `frame_system::Config::BaseCallFilter`).",
              "",
              "# \u003cweight\u003e",
              "- Complexity: O(C) where C is the number of calls to be batched.",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "356": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 351
      }
    },
    "docs": null
  },
  "357": {
    "path": [
      "pallet_proxy",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "proxy",
            "fields": [
              {
                "name": "real",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "force_proxy_type",
                "type": 358,
                "typeName": "Option\u003cT::ProxyType\u003e",
                "docs": null
              },
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Dispatch the given `call` from an account that the sender is authorised for through",
              "`add_proxy`.",
              "",
              "Removes any corresponding announcement(s).",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `real`: The account that the proxy will make a call on behalf of.",
              "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
              "- `call`: The call to be made by the `real` account.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "add_proxy",
            "fields": [
              {
                "name": "delegate",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "proxy_type",
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "name": "delay",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Register a proxy account for the sender that is able to make calls on its behalf.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `proxy`: The account that the `caller` would like to make a proxy.",
              "- `proxy_type`: The permissions allowed for this proxy account.",
              "- `delay`: The announcement period required of the initial proxy. Will generally be",
              "zero.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "remove_proxy",
            "fields": [
              {
                "name": "delegate",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "proxy_type",
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "name": "delay",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Unregister a proxy account for the sender.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `proxy`: The account that the `caller` would like to remove as a proxy.",
              "- `proxy_type`: The permissions currently enabled for the removed proxy account.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "remove_proxies",
            "fields": null,
            "index": 3,
            "docs": [
              "Unregister all proxy accounts for the sender.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "WARNING: This may be called on accounts created by `anonymous`, however if done, then",
              "the unreserved fees will be inaccessible. **All access to this account will be lost.**",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "anonymous",
            "fields": [
              {
                "name": "proxy_type",
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "name": "delay",
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "index",
                "type": 81,
                "typeName": "u16",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and",
              "initialize it with a proxy of `proxy_type` for `origin` sender.",
              "",
              "Requires a `Signed` origin.",
              "",
              "- `proxy_type`: The type of the proxy that the sender will be registered as over the",
              "new account. This will almost always be the most permissive `ProxyType` possible to",
              "allow for maximum flexibility.",
              "- `index`: A disambiguation index, in case this is called multiple times in the same",
              "transaction (e.g. with `utility::batch`). Unless you're using `batch` you probably just",
              "want to use `0`.",
              "- `delay`: The announcement period required of the initial proxy. Will generally be",
              "zero.",
              "",
              "Fails with `Duplicate` if this has already been called in this transaction, from the",
              "same sender, with the same parameters.",
              "",
              "Fails if there are insufficient funds to pay for deposit.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e",
              "TODO: Might be over counting 1 read"
            ]
          },
          {
            "name": "kill_anonymous",
            "fields": [
              {
                "name": "spawner",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "proxy_type",
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "name": "index",
                "type": 81,
                "typeName": "u16",
                "docs": null
              },
              {
                "name": "height",
                "type": 86,
                "typeName": "T::BlockNumber",
                "docs": null
              },
              {
                "name": "ext_index",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Removes a previously spawned anonymous proxy.",
              "",
              "WARNING: **All access to this account will be lost.** Any funds held in it will be",
              "inaccessible.",
              "",
              "Requires a `Signed` origin, and the sender account must have been created by a call to",
              "`anonymous` with corresponding parameters.",
              "",
              "- `spawner`: The account that originally called `anonymous` to create this account.",
              "- `index`: The disambiguation index originally passed to `anonymous`. Probably `0`.",
              "- `proxy_type`: The proxy type originally passed to `anonymous`.",
              "- `height`: The height of the chain when the call to `anonymous` was processed.",
              "- `ext_index`: The extrinsic index in which the call to `anonymous` was processed.",
              "",
              "Fails with `NoPermission` in case the caller is not a previously created anonymous",
              "account whose `anonymous` call has corresponding parameters.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of the number of proxies the user has (P).",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "announce",
            "fields": [
              {
                "name": "real",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "call_hash",
                "type": 9,
                "typeName": "CallHashOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Publish the hash of a proxy-call that will be made in the future.",
              "",
              "This must be called some number of blocks before the corresponding `proxy` is attempted",
              "if the delay associated with the proxy relationship is greater than zero.",
              "",
              "No more than `MaxPending` announcements may be made at any one time.",
              "",
              "This will take a deposit of `AnnouncementDepositFactor` as well as",
              "`AnnouncementDepositBase` if there are no other pending announcements.",
              "",
              "The dispatch origin for this call must be _Signed_ and a proxy of `real`.",
              "",
              "Parameters:",
              "- `real`: The account that the proxy will make a call on behalf of.",
              "- `call_hash`: The hash of the call to be made by the `real` account.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of:",
              "- A: the number of announcements made.",
              "- P: the number of proxies the user has.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "remove_announcement",
            "fields": [
              {
                "name": "real",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "call_hash",
                "type": 9,
                "typeName": "CallHashOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Remove a given announcement.",
              "",
              "May be called by a proxy account to remove a call they previously announced and return",
              "the deposit.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `real`: The account that the proxy will make a call on behalf of.",
              "- `call_hash`: The hash of the call to be made by the `real` account.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of:",
              "- A: the number of announcements made.",
              "- P: the number of proxies the user has.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "reject_announcement",
            "fields": [
              {
                "name": "delegate",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "call_hash",
                "type": 9,
                "typeName": "CallHashOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 8,
            "docs": [
              "Remove the given announcement of a delegate.",
              "",
              "May be called by a target (proxied) account to remove a call that one of their delegates",
              "(`delegate`) has announced they want to execute. The deposit is returned.",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `delegate`: The account that previously announced the call.",
              "- `call_hash`: The hash of the call to be made.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of:",
              "- A: the number of announcements made.",
              "- P: the number of proxies the user has.",
              "# \u003c/weight\u003e"
            ]
          },
          {
            "name": "proxy_announced",
            "fields": [
              {
                "name": "delegate",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "real",
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "name": "force_proxy_type",
                "type": 358,
                "typeName": "Option\u003cT::ProxyType\u003e",
                "docs": null
              },
              {
                "name": "call",
                "type": 351,
                "typeName": "Box\u003c\u003cT as Config\u003e::Call\u003e",
                "docs": null
              }
            ],
            "index": 9,
            "docs": [
              "Dispatch the given `call` from an account that the sender is authorized for through",
              "`add_proxy`.",
              "",
              "Removes any corresponding announcement(s).",
              "",
              "The dispatch origin for this call must be _Signed_.",
              "",
              "Parameters:",
              "- `real`: The account that the proxy will make a call on behalf of.",
              "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
              "- `call`: The call to be made by the `real` account.",
              "",
              "# \u003cweight\u003e",
              "Weight is a function of:",
              "- A: the number of announcements made.",
              "- P: the number of proxies the user has.",
              "# \u003c/weight\u003e"
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "358": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 80
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 80,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "359": {
    "path": [
      "pallet_xcm",
      "pallet",
      "Call"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "send",
            "fields": [
              {
                "name": "dest",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "message",
                "type": 338,
                "typeName": "Box\u003cVersionedXcm\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "teleport_assets",
            "fields": [
              {
                "name": "dest",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "assets",
                "type": 113,
                "typeName": "Box\u003cVersionedMultiAssets\u003e",
                "docs": null
              },
              {
                "name": "fee_asset_item",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Teleport some assets from the local chain to some destination chain.",
              "",
              "Fee payment on the destination side is made from the first asset listed in the `assets` vector.",
              "",
              "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
              "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
              "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
              "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
              "  an `AccountId32` value.",
              "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
              "  `dest` side. May not be empty.",
              "- `dest_weight`: Equal to the total weight on `dest` of the XCM message",
              "  `Teleport { assets, effects: [ BuyExecution{..}, DepositAsset{..} ] }`."
            ]
          },
          {
            "name": "reserve_transfer_assets",
            "fields": [
              {
                "name": "dest",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "assets",
                "type": 113,
                "typeName": "Box\u003cVersionedMultiAssets\u003e",
                "docs": null
              },
              {
                "name": "fee_asset_item",
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Transfer some assets from the local chain to the sovereign account of a destination chain and forward",
              "a notification XCM.",
              "",
              "Fee payment on the destination side is made from the first asset listed in the `assets` vector.",
              "",
              "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
              "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
              "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
              "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
              "  an `AccountId32` value.",
              "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
              "  `dest` side.",
              "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
              "  fees."
            ]
          },
          {
            "name": "execute",
            "fields": [
              {
                "name": "message",
                "type": 360,
                "typeName": "Box\u003cVersionedXcm\u003c\u003cT as SysConfig\u003e::Call\u003e\u003e",
                "docs": null
              },
              {
                "name": "max_weight",
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Execute an XCM message from a local, signed, origin.",
              "",
              "An event is deposited indicating whether `msg` could be executed completely or only",
              "partially.",
              "",
              "No more than `max_weight` will be used in its attempted execution. If this is less than the",
              "maximum amount of weight that the message could take to be executed, then no execution",
              "attempt will be made.",
              "",
              "NOTE: A successful return to this does *not* imply that the `msg` was executed successfully",
              "to completion; only that *some* of it was executed."
            ]
          },
          {
            "name": "force_xcm_version",
            "fields": [
              {
                "name": "location",
                "type": 83,
                "typeName": "Box\u003cMultiLocation\u003e",
                "docs": null
              },
              {
                "name": "xcm_version",
                "type": 4,
                "typeName": "XcmVersion",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Extoll that a particular destination can be communicated with through a particular",
              "version of XCM.",
              "",
              "- `origin`: Must be Root.",
              "- `location`: The destination that is being described.",
              "- `xcm_version`: The latest version of XCM that `location` supports."
            ]
          },
          {
            "name": "force_default_xcm_version",
            "fields": [
              {
                "name": "maybe_xcm_version",
                "type": 202,
                "typeName": "Option\u003cXcmVersion\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Set a safe XCM version (the version that XCM should be encoded with if the most recent",
              "version a destination can accept is unknown).",
              "",
              "- `origin`: Must be Root.",
              "- `maybe_xcm_version`: The default XCM encoding version, or `None` to disable."
            ]
          },
          {
            "name": "force_subscribe_version_notify",
            "fields": [
              {
                "name": "location",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Ask a location to notify us regarding their XCM version and any changes to it.",
              "",
              "- `origin`: Must be Root.",
              "- `location`: The location to which we should subscribe for XCM version notifications."
            ]
          },
          {
            "name": "force_unsubscribe_version_notify",
            "fields": [
              {
                "name": "location",
                "type": 118,
                "typeName": "Box\u003cVersionedMultiLocation\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Require that a particular destination should no longer notify us regarding any XCM",
              "version changes.",
              "",
              "- `origin`: Must be Root.",
              "- `location`: The location to which we are currently subscribed for XCM version",
              "  notifications which we no longer desire."
            ]
          }
        ]
      }
    },
    "docs": [
      "Contains one variant per dispatchable that can be called by an extrinsic."
    ]
  },
  "36": {
    "path": null,
    "def": {
      "Tuple": [
        37,
        8
      ]
    },
    "docs": null
  },
  "360": {
    "path": [
      "xcm",
      "VersionedXcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V0",
            "fields": [
              {
                "type": 361,
                "typeName": "v0::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "V1",
            "fields": [
              {
                "type": 366,
                "typeName": "v1::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "V2",
            "fields": [
              {
                "type": 370,
                "typeName": "v2::Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "361": {
    "path": [
      "xcm",
      "v0",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 362,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposit",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 362,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "TeleportAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "effects",
                "type": 362,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "response",
                "type": 343,
                "typeName": "Response",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 365,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "RelayedFrom",
            "fields": [
              {
                "name": "who",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "message",
                "type": 361,
                "typeName": "alloc::boxed::Box\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "362": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 363
      }
    },
    "docs": null
  },
  "363": {
    "path": [
      "xcm",
      "v0",
      "order",
      "Order"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Null",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "receive",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 340,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "dest",
                "type": 116,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 114,
                "typeName": "Vec\u003cMultiAsset\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 115,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "debt",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "halt_on_error",
                "type": 76,
                "typeName": "bool",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 364,
                "typeName": "Vec\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "364": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 361
      }
    },
    "docs": null
  },
  "365": {
    "path": [
      "xcm",
      "double_encoded",
      "DoubleEncoded"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "encoded",
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "366": {
    "path": [
      "xcm",
      "v1",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 367,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposited",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 367,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "ReceiveTeleportedAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "effects",
                "type": 367,
                "typeName": "Vec\u003cOrder\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "response",
                "type": 348,
                "typeName": "Response",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 365,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "RelayedFrom",
            "fields": [
              {
                "name": "who",
                "type": 84,
                "typeName": "InteriorMultiLocation",
                "docs": null
              },
              {
                "name": "message",
                "type": 366,
                "typeName": "alloc::boxed::Box\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "SubscribeVersion",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "UnsubscribeVersion",
            "fields": null,
            "index": 12,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "367": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 368
      }
    },
    "docs": null
  },
  "368": {
    "path": [
      "xcm",
      "v1",
      "order",
      "Order"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Noop",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "receive",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "effects",
                "type": 345,
                "typeName": "Vec\u003cOrder\u003c()\u003e\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 98,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "debt",
                "type": 8,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "halt_on_error",
                "type": 76,
                "typeName": "bool",
                "docs": null
              },
              {
                "name": "instructions",
                "type": 369,
                "typeName": "Vec\u003cXcm\u003cCall\u003e\u003e",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "369": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 366
      }
    },
    "docs": null
  },
  "37": {
    "path": [
      "sp_finality_grandpa",
      "app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 38,
            "typeName": "ed25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "370": {
    "path": [
      "xcm",
      "v2",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 371,
            "typeName": "Vec\u003cInstruction\u003cCall\u003e\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "371": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 372
      }
    },
    "docs": null
  },
  "372": {
    "path": [
      "xcm",
      "v2",
      "Instruction"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposited",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "ReceiveTeleportedAsset",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "response",
                "type": 103,
                "typeName": "Response",
                "docs": null
              },
              {
                "name": "max_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 365,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "ClearOrigin",
            "fields": null,
            "index": 10,
            "docs": null
          },
          {
            "name": "DescendOrigin",
            "fields": [
              {
                "type": 84,
                "typeName": "InteriorMultiLocation",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "ReportError",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 12,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 13,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 14,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "receive",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 15,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 17,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 18,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 98,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight_limit",
                "type": 111,
                "typeName": "WeightLimit",
                "docs": null
              }
            ],
            "index": 19,
            "docs": null
          },
          {
            "name": "RefundSurplus",
            "fields": null,
            "index": 20,
            "docs": null
          },
          {
            "name": "SetErrorHandler",
            "fields": [
              {
                "type": 370,
                "typeName": "Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 21,
            "docs": null
          },
          {
            "name": "SetAppendix",
            "fields": [
              {
                "type": 370,
                "typeName": "Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 22,
            "docs": null
          },
          {
            "name": "ClearError",
            "fields": null,
            "index": 23,
            "docs": null
          },
          {
            "name": "ClaimAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "ticket",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 24,
            "docs": null
          },
          {
            "name": "Trap",
            "fields": [
              {
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 25,
            "docs": null
          },
          {
            "name": "SubscribeVersion",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 26,
            "docs": null
          },
          {
            "name": "UnsubscribeVersion",
            "fields": null,
            "index": 27,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "373": {
    "path": [
      "pallet_sudo",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "RequireSudo",
            "fields": null,
            "index": 0,
            "docs": [
              "Sender must be the Sudo account"
            ]
          }
        ]
      }
    },
    "docs": [
      "Error for the Sudo pallet"
    ]
  },
  "374": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 192
      }
    },
    "docs": null
  },
  "375": {
    "path": [
      "beefy_primitives",
      "mmr",
      "BeefyNextAuthoritySet"
    ],
    "params": [
      {
        "name": "MerkleRoot",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "id",
            "type": 8,
            "typeName": "crate::ValidatorSetId",
            "docs": null
          },
          {
            "name": "len",
            "type": 4,
            "typeName": "u32",
            "docs": null
          },
          {
            "name": "root",
            "type": 9,
            "typeName": "MerkleRoot",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "376": {
    "path": [
      "rococo_runtime",
      "validator_manager",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": null
      }
    },
    "docs": null
  },
  "377": {
    "path": [
      "frame_support",
      "storage",
      "bounded_vec",
      "BoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 9
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 120,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "378": {
    "path": [
      "pallet_collective",
      "Votes"
    ],
    "params": [
      {
        "name": "AccountId"
      },
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "index",
            "type": 4,
            "typeName": "ProposalIndex",
            "docs": null
          },
          {
            "name": "threshold",
            "type": 4,
            "typeName": "MemberCount",
            "docs": null
          },
          {
            "name": "ayes",
            "type": 74,
            "typeName": "Vec\u003cAccountId\u003e",
            "docs": null
          },
          {
            "name": "nays",
            "type": 74,
            "typeName": "Vec\u003cAccountId\u003e",
            "docs": null
          },
          {
            "name": "end",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "379": {
    "path": [
      "pallet_collective",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NotMember",
            "fields": null,
            "index": 0,
            "docs": [
              "Account is not a member"
            ]
          },
          {
            "name": "DuplicateProposal",
            "fields": null,
            "index": 1,
            "docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "name": "ProposalMissing",
            "fields": null,
            "index": 2,
            "docs": [
              "Proposal must exist"
            ]
          },
          {
            "name": "WrongIndex",
            "fields": null,
            "index": 3,
            "docs": [
              "Mismatched index"
            ]
          },
          {
            "name": "DuplicateVote",
            "fields": null,
            "index": 4,
            "docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "name": "AlreadyInitialized",
            "fields": null,
            "index": 5,
            "docs": [
              "Members are already initialized!"
            ]
          },
          {
            "name": "TooEarly",
            "fields": null,
            "index": 6,
            "docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "name": "TooManyProposals",
            "fields": null,
            "index": 7,
            "docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "name": "WrongProposalWeight",
            "fields": null,
            "index": 8,
            "docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "name": "WrongProposalLength",
            "fields": null,
            "index": 9,
            "docs": [
              "The given length bound for the proposal was too low."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "38": {
    "path": [
      "sp_core",
      "ed25519",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 1,
            "typeName": "[u8; 32]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "380": {
    "path": [
      "pallet_membership",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "AlreadyMember",
            "fields": null,
            "index": 0,
            "docs": [
              "Already a member."
            ]
          },
          {
            "name": "NotMember",
            "fields": null,
            "index": 1,
            "docs": [
              "Not a member."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "381": {
    "path": [
      "pallet_utility",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "TooManyCalls",
            "fields": null,
            "index": 0,
            "docs": [
              "Too many calls batched."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "382": {
    "path": null,
    "def": {
      "Tuple": [
        383,
        6
      ]
    },
    "docs": null
  },
  "383": {
    "path": [
      "frame_support",
      "storage",
      "bounded_vec",
      "BoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 384
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 385,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "384": {
    "path": [
      "pallet_proxy",
      "ProxyDefinition"
    ],
    "params": [
      {
        "name": "AccountId"
      },
      {
        "name": "ProxyType",
        "type": 80
      },
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "delegate",
            "type": 0,
            "typeName": "AccountId",
            "docs": null
          },
          {
            "name": "proxy_type",
            "type": 80,
            "typeName": "ProxyType",
            "docs": null
          },
          {
            "name": "delay",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "385": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 384
      }
    },
    "docs": null
  },
  "386": {
    "path": null,
    "def": {
      "Tuple": [
        387,
        6
      ]
    },
    "docs": null
  },
  "387": {
    "path": [
      "frame_support",
      "storage",
      "bounded_vec",
      "BoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 388
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 389,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "388": {
    "path": [
      "pallet_proxy",
      "Announcement"
    ],
    "params": [
      {
        "name": "AccountId"
      },
      {
        "name": "Hash",
        "type": 9
      },
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "real",
            "type": 0,
            "typeName": "AccountId",
            "docs": null
          },
          {
            "name": "call_hash",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          },
          {
            "name": "height",
            "type": 4,
            "typeName": "BlockNumber",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "389": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 388
      }
    },
    "docs": null
  },
  "39": {
    "path": [
      "pallet_im_online",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "HeartbeatReceived",
            "fields": [
              {
                "type": 40,
                "typeName": "T::AuthorityId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A new heartbeat was received from `AuthorityId` \\[authority_id\\]"
            ]
          },
          {
            "name": "AllGood",
            "fields": null,
            "index": 1,
            "docs": [
              "At the end of the session, no offence was committed."
            ]
          },
          {
            "name": "SomeOffline",
            "fields": [
              {
                "type": 42,
                "typeName": "Vec\u003cIdentificationTuple\u003cT\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "At the end of the session, at least one validator was found to be \\[offline\\]."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "390": {
    "path": [
      "pallet_proxy",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "TooMany",
            "fields": null,
            "index": 0,
            "docs": [
              "There are too many proxies registered or too many announcements pending."
            ]
          },
          {
            "name": "NotFound",
            "fields": null,
            "index": 1,
            "docs": [
              "Proxy registration not found."
            ]
          },
          {
            "name": "NotProxy",
            "fields": null,
            "index": 2,
            "docs": [
              "Sender is not a proxy of the account to be proxied."
            ]
          },
          {
            "name": "Unproxyable",
            "fields": null,
            "index": 3,
            "docs": [
              "A call which is incompatible with the proxy type's filter was attempted."
            ]
          },
          {
            "name": "Duplicate",
            "fields": null,
            "index": 4,
            "docs": [
              "Account is already a proxy."
            ]
          },
          {
            "name": "NoPermission",
            "fields": null,
            "index": 5,
            "docs": [
              "Call may not be made by proxy because it may escalate its privileges."
            ]
          },
          {
            "name": "Unannounced",
            "fields": null,
            "index": 6,
            "docs": [
              "Announcement, if made at all, was made too recently."
            ]
          },
          {
            "name": "NoSelfProxy",
            "fields": null,
            "index": 7,
            "docs": [
              "Cannot add self as proxy."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "391": {
    "path": [
      "pallet_xcm",
      "pallet",
      "QueryStatus"
    ],
    "params": [
      {
        "name": "BlockNumber",
        "type": 4
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Pending",
            "fields": [
              {
                "name": "responder",
                "type": 118,
                "typeName": "VersionedMultiLocation",
                "docs": null
              },
              {
                "name": "maybe_notify",
                "type": 392,
                "typeName": "Option\u003c(u8, u8)\u003e",
                "docs": null
              },
              {
                "name": "timeout",
                "type": 4,
                "typeName": "BlockNumber",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "VersionNotifier",
            "fields": [
              {
                "name": "origin",
                "type": 118,
                "typeName": "VersionedMultiLocation",
                "docs": null
              },
              {
                "name": "is_active",
                "type": 76,
                "typeName": "bool",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Ready",
            "fields": [
              {
                "name": "response",
                "type": 394,
                "typeName": "VersionedResponse",
                "docs": null
              },
              {
                "name": "at",
                "type": 4,
                "typeName": "BlockNumber",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "392": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 393
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 393,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "393": {
    "path": null,
    "def": {
      "Tuple": [
        2,
        2
      ]
    },
    "docs": null
  },
  "394": {
    "path": [
      "xcm",
      "VersionedResponse"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "V0",
            "fields": [
              {
                "type": 343,
                "typeName": "v0::Response",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "V1",
            "fields": [
              {
                "type": 348,
                "typeName": "v1::Response",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "V2",
            "fields": [
              {
                "type": 103,
                "typeName": "v2::Response",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "395": {
    "path": null,
    "def": {
      "Tuple": [
        4,
        118
      ]
    },
    "docs": null
  },
  "396": {
    "path": null,
    "def": {
      "Tuple": [
        8,
        8,
        4
      ]
    },
    "docs": null
  },
  "397": {
    "path": [
      "frame_support",
      "storage",
      "bounded_vec",
      "BoundedVec"
    ],
    "params": [
      {
        "name": "T",
        "type": 398
      },
      {
        "name": "S"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 399,
            "typeName": "Vec\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "398": {
    "path": null,
    "def": {
      "Tuple": [
        118,
        4
      ]
    },
    "docs": null
  },
  "399": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 398
      }
    },
    "docs": null
  },
  "4": {
    "path": null,
    "def": {
      "Primitive": "U32"
    },
    "docs": null
  },
  "40": {
    "path": [
      "pallet_im_online",
      "sr25519",
      "app_sr25519",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "400": {
    "path": [
      "pallet_xcm",
      "pallet",
      "VersionMigrationStage"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "MigrateSupportedVersion",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "MigrateVersionNotifiers",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "NotifyCurrentTargets",
            "fields": [
              {
                "type": 401,
                "typeName": "Option\u003cVec\u003cu8\u003e\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "MigrateAndNotifyOldTargets",
            "fields": null,
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "401": {
    "path": [
      "Option"
    ],
    "params": [
      {
        "name": "T",
        "type": 10
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "None",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Some",
            "fields": [
              {
                "type": 10,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "402": {
    "path": [
      "pallet_xcm",
      "pallet",
      "Error"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Unreachable",
            "fields": null,
            "index": 0,
            "docs": [
              "The desired destination was unreachable, generally because there is a no way of routing",
              "to it."
            ]
          },
          {
            "name": "SendFailure",
            "fields": null,
            "index": 1,
            "docs": [
              "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
              "a lack of space for buffering the message."
            ]
          },
          {
            "name": "Filtered",
            "fields": null,
            "index": 2,
            "docs": [
              "The message execution fails the filter."
            ]
          },
          {
            "name": "UnweighableMessage",
            "fields": null,
            "index": 3,
            "docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "name": "DestinationNotInvertible",
            "fields": null,
            "index": 4,
            "docs": [
              "The destination `MultiLocation` provided cannot be inverted."
            ]
          },
          {
            "name": "Empty",
            "fields": null,
            "index": 5,
            "docs": [
              "The assets to be sent are empty."
            ]
          },
          {
            "name": "CannotReanchor",
            "fields": null,
            "index": 6,
            "docs": [
              "Could not re-anchor the assets to declare the fees for the destination chain."
            ]
          },
          {
            "name": "TooManyAssets",
            "fields": null,
            "index": 7,
            "docs": [
              "Too many assets have been attempted for transfer."
            ]
          },
          {
            "name": "InvalidOrigin",
            "fields": null,
            "index": 8,
            "docs": [
              "Origin is invalid for sending."
            ]
          },
          {
            "name": "BadVersion",
            "fields": null,
            "index": 9,
            "docs": [
              "The version of the `Versioned` value used is not able to be interpreted."
            ]
          },
          {
            "name": "BadLocation",
            "fields": null,
            "index": 10,
            "docs": [
              "The given location could not be used (e.g. because it cannot be expressed in the",
              "desired version of XCM)."
            ]
          },
          {
            "name": "NoSubscription",
            "fields": null,
            "index": 11,
            "docs": [
              "The referenced subscription could not be found."
            ]
          },
          {
            "name": "AlreadySubscribed",
            "fields": null,
            "index": 12,
            "docs": [
              "The location is invalid since it already has a subscription from us."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tCustom [dispatch errors](https://substrate.dev/docs/en/knowledgebase/runtime/errors)\n\t\t\tof this pallet.\n\t\t\t"
    ]
  },
  "403": {
    "path": [
      "sp_runtime",
      "generic",
      "unchecked_extrinsic",
      "UncheckedExtrinsic"
    ],
    "params": [
      {
        "name": "Address",
        "type": 171
      },
      {
        "name": "Call",
        "type": 351
      },
      {
        "name": "Signature",
        "type": 327
      },
      {
        "name": "Extra",
        "type": 404
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 10,
            "typeName": "",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "404": {
    "path": null,
    "def": {
      "Tuple": [
        405,
        406,
        407,
        408,
        410,
        411,
        412
      ]
    },
    "docs": null
  },
  "405": {
    "path": [
      "frame_system",
      "extensions",
      "check_spec_version",
      "CheckSpecVersion"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "406": {
    "path": [
      "frame_system",
      "extensions",
      "check_tx_version",
      "CheckTxVersion"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "407": {
    "path": [
      "frame_system",
      "extensions",
      "check_genesis",
      "CheckGenesis"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "408": {
    "path": [
      "frame_system",
      "extensions",
      "check_mortality",
      "CheckMortality"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 409,
            "typeName": "Era",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "409": {
    "path": [
      "sp_runtime",
      "generic",
      "era",
      "Era"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Immortal",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Mortal1",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Mortal2",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Mortal3",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "Mortal4",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "Mortal5",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Mortal6",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "Mortal7",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "Mortal8",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "Mortal9",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "Mortal10",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 10,
            "docs": null
          },
          {
            "name": "Mortal11",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "Mortal12",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 12,
            "docs": null
          },
          {
            "name": "Mortal13",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 13,
            "docs": null
          },
          {
            "name": "Mortal14",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 14,
            "docs": null
          },
          {
            "name": "Mortal15",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 15,
            "docs": null
          },
          {
            "name": "Mortal16",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "Mortal17",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 17,
            "docs": null
          },
          {
            "name": "Mortal18",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 18,
            "docs": null
          },
          {
            "name": "Mortal19",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 19,
            "docs": null
          },
          {
            "name": "Mortal20",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 20,
            "docs": null
          },
          {
            "name": "Mortal21",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 21,
            "docs": null
          },
          {
            "name": "Mortal22",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 22,
            "docs": null
          },
          {
            "name": "Mortal23",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 23,
            "docs": null
          },
          {
            "name": "Mortal24",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 24,
            "docs": null
          },
          {
            "name": "Mortal25",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 25,
            "docs": null
          },
          {
            "name": "Mortal26",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 26,
            "docs": null
          },
          {
            "name": "Mortal27",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 27,
            "docs": null
          },
          {
            "name": "Mortal28",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 28,
            "docs": null
          },
          {
            "name": "Mortal29",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 29,
            "docs": null
          },
          {
            "name": "Mortal30",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 30,
            "docs": null
          },
          {
            "name": "Mortal31",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 31,
            "docs": null
          },
          {
            "name": "Mortal32",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 32,
            "docs": null
          },
          {
            "name": "Mortal33",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 33,
            "docs": null
          },
          {
            "name": "Mortal34",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 34,
            "docs": null
          },
          {
            "name": "Mortal35",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 35,
            "docs": null
          },
          {
            "name": "Mortal36",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 36,
            "docs": null
          },
          {
            "name": "Mortal37",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 37,
            "docs": null
          },
          {
            "name": "Mortal38",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 38,
            "docs": null
          },
          {
            "name": "Mortal39",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 39,
            "docs": null
          },
          {
            "name": "Mortal40",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 40,
            "docs": null
          },
          {
            "name": "Mortal41",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 41,
            "docs": null
          },
          {
            "name": "Mortal42",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 42,
            "docs": null
          },
          {
            "name": "Mortal43",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 43,
            "docs": null
          },
          {
            "name": "Mortal44",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 44,
            "docs": null
          },
          {
            "name": "Mortal45",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 45,
            "docs": null
          },
          {
            "name": "Mortal46",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 46,
            "docs": null
          },
          {
            "name": "Mortal47",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 47,
            "docs": null
          },
          {
            "name": "Mortal48",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 48,
            "docs": null
          },
          {
            "name": "Mortal49",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 49,
            "docs": null
          },
          {
            "name": "Mortal50",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 50,
            "docs": null
          },
          {
            "name": "Mortal51",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 51,
            "docs": null
          },
          {
            "name": "Mortal52",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 52,
            "docs": null
          },
          {
            "name": "Mortal53",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 53,
            "docs": null
          },
          {
            "name": "Mortal54",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 54,
            "docs": null
          },
          {
            "name": "Mortal55",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 55,
            "docs": null
          },
          {
            "name": "Mortal56",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 56,
            "docs": null
          },
          {
            "name": "Mortal57",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 57,
            "docs": null
          },
          {
            "name": "Mortal58",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 58,
            "docs": null
          },
          {
            "name": "Mortal59",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 59,
            "docs": null
          },
          {
            "name": "Mortal60",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 60,
            "docs": null
          },
          {
            "name": "Mortal61",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 61,
            "docs": null
          },
          {
            "name": "Mortal62",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 62,
            "docs": null
          },
          {
            "name": "Mortal63",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 63,
            "docs": null
          },
          {
            "name": "Mortal64",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 64,
            "docs": null
          },
          {
            "name": "Mortal65",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 65,
            "docs": null
          },
          {
            "name": "Mortal66",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 66,
            "docs": null
          },
          {
            "name": "Mortal67",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 67,
            "docs": null
          },
          {
            "name": "Mortal68",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 68,
            "docs": null
          },
          {
            "name": "Mortal69",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 69,
            "docs": null
          },
          {
            "name": "Mortal70",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 70,
            "docs": null
          },
          {
            "name": "Mortal71",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 71,
            "docs": null
          },
          {
            "name": "Mortal72",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 72,
            "docs": null
          },
          {
            "name": "Mortal73",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 73,
            "docs": null
          },
          {
            "name": "Mortal74",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 74,
            "docs": null
          },
          {
            "name": "Mortal75",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 75,
            "docs": null
          },
          {
            "name": "Mortal76",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 76,
            "docs": null
          },
          {
            "name": "Mortal77",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 77,
            "docs": null
          },
          {
            "name": "Mortal78",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 78,
            "docs": null
          },
          {
            "name": "Mortal79",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 79,
            "docs": null
          },
          {
            "name": "Mortal80",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 80,
            "docs": null
          },
          {
            "name": "Mortal81",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 81,
            "docs": null
          },
          {
            "name": "Mortal82",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 82,
            "docs": null
          },
          {
            "name": "Mortal83",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 83,
            "docs": null
          },
          {
            "name": "Mortal84",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 84,
            "docs": null
          },
          {
            "name": "Mortal85",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 85,
            "docs": null
          },
          {
            "name": "Mortal86",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 86,
            "docs": null
          },
          {
            "name": "Mortal87",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 87,
            "docs": null
          },
          {
            "name": "Mortal88",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 88,
            "docs": null
          },
          {
            "name": "Mortal89",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 89,
            "docs": null
          },
          {
            "name": "Mortal90",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 90,
            "docs": null
          },
          {
            "name": "Mortal91",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 91,
            "docs": null
          },
          {
            "name": "Mortal92",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 92,
            "docs": null
          },
          {
            "name": "Mortal93",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 93,
            "docs": null
          },
          {
            "name": "Mortal94",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 94,
            "docs": null
          },
          {
            "name": "Mortal95",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 95,
            "docs": null
          },
          {
            "name": "Mortal96",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 96,
            "docs": null
          },
          {
            "name": "Mortal97",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 97,
            "docs": null
          },
          {
            "name": "Mortal98",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 98,
            "docs": null
          },
          {
            "name": "Mortal99",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 99,
            "docs": null
          },
          {
            "name": "Mortal100",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 100,
            "docs": null
          },
          {
            "name": "Mortal101",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 101,
            "docs": null
          },
          {
            "name": "Mortal102",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 102,
            "docs": null
          },
          {
            "name": "Mortal103",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 103,
            "docs": null
          },
          {
            "name": "Mortal104",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 104,
            "docs": null
          },
          {
            "name": "Mortal105",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 105,
            "docs": null
          },
          {
            "name": "Mortal106",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 106,
            "docs": null
          },
          {
            "name": "Mortal107",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 107,
            "docs": null
          },
          {
            "name": "Mortal108",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 108,
            "docs": null
          },
          {
            "name": "Mortal109",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 109,
            "docs": null
          },
          {
            "name": "Mortal110",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 110,
            "docs": null
          },
          {
            "name": "Mortal111",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 111,
            "docs": null
          },
          {
            "name": "Mortal112",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 112,
            "docs": null
          },
          {
            "name": "Mortal113",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 113,
            "docs": null
          },
          {
            "name": "Mortal114",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 114,
            "docs": null
          },
          {
            "name": "Mortal115",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 115,
            "docs": null
          },
          {
            "name": "Mortal116",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 116,
            "docs": null
          },
          {
            "name": "Mortal117",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 117,
            "docs": null
          },
          {
            "name": "Mortal118",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 118,
            "docs": null
          },
          {
            "name": "Mortal119",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 119,
            "docs": null
          },
          {
            "name": "Mortal120",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 120,
            "docs": null
          },
          {
            "name": "Mortal121",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 121,
            "docs": null
          },
          {
            "name": "Mortal122",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 122,
            "docs": null
          },
          {
            "name": "Mortal123",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 123,
            "docs": null
          },
          {
            "name": "Mortal124",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 124,
            "docs": null
          },
          {
            "name": "Mortal125",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 125,
            "docs": null
          },
          {
            "name": "Mortal126",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 126,
            "docs": null
          },
          {
            "name": "Mortal127",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 127,
            "docs": null
          },
          {
            "name": "Mortal128",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 128,
            "docs": null
          },
          {
            "name": "Mortal129",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 129,
            "docs": null
          },
          {
            "name": "Mortal130",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 130,
            "docs": null
          },
          {
            "name": "Mortal131",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 131,
            "docs": null
          },
          {
            "name": "Mortal132",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 132,
            "docs": null
          },
          {
            "name": "Mortal133",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 133,
            "docs": null
          },
          {
            "name": "Mortal134",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 134,
            "docs": null
          },
          {
            "name": "Mortal135",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 135,
            "docs": null
          },
          {
            "name": "Mortal136",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 136,
            "docs": null
          },
          {
            "name": "Mortal137",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 137,
            "docs": null
          },
          {
            "name": "Mortal138",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 138,
            "docs": null
          },
          {
            "name": "Mortal139",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 139,
            "docs": null
          },
          {
            "name": "Mortal140",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 140,
            "docs": null
          },
          {
            "name": "Mortal141",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 141,
            "docs": null
          },
          {
            "name": "Mortal142",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 142,
            "docs": null
          },
          {
            "name": "Mortal143",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 143,
            "docs": null
          },
          {
            "name": "Mortal144",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 144,
            "docs": null
          },
          {
            "name": "Mortal145",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 145,
            "docs": null
          },
          {
            "name": "Mortal146",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 146,
            "docs": null
          },
          {
            "name": "Mortal147",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 147,
            "docs": null
          },
          {
            "name": "Mortal148",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 148,
            "docs": null
          },
          {
            "name": "Mortal149",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 149,
            "docs": null
          },
          {
            "name": "Mortal150",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 150,
            "docs": null
          },
          {
            "name": "Mortal151",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 151,
            "docs": null
          },
          {
            "name": "Mortal152",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 152,
            "docs": null
          },
          {
            "name": "Mortal153",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 153,
            "docs": null
          },
          {
            "name": "Mortal154",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 154,
            "docs": null
          },
          {
            "name": "Mortal155",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 155,
            "docs": null
          },
          {
            "name": "Mortal156",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 156,
            "docs": null
          },
          {
            "name": "Mortal157",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 157,
            "docs": null
          },
          {
            "name": "Mortal158",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 158,
            "docs": null
          },
          {
            "name": "Mortal159",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 159,
            "docs": null
          },
          {
            "name": "Mortal160",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 160,
            "docs": null
          },
          {
            "name": "Mortal161",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 161,
            "docs": null
          },
          {
            "name": "Mortal162",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 162,
            "docs": null
          },
          {
            "name": "Mortal163",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 163,
            "docs": null
          },
          {
            "name": "Mortal164",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 164,
            "docs": null
          },
          {
            "name": "Mortal165",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 165,
            "docs": null
          },
          {
            "name": "Mortal166",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 166,
            "docs": null
          },
          {
            "name": "Mortal167",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 167,
            "docs": null
          },
          {
            "name": "Mortal168",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 168,
            "docs": null
          },
          {
            "name": "Mortal169",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 169,
            "docs": null
          },
          {
            "name": "Mortal170",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 170,
            "docs": null
          },
          {
            "name": "Mortal171",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 171,
            "docs": null
          },
          {
            "name": "Mortal172",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 172,
            "docs": null
          },
          {
            "name": "Mortal173",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 173,
            "docs": null
          },
          {
            "name": "Mortal174",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 174,
            "docs": null
          },
          {
            "name": "Mortal175",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 175,
            "docs": null
          },
          {
            "name": "Mortal176",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 176,
            "docs": null
          },
          {
            "name": "Mortal177",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 177,
            "docs": null
          },
          {
            "name": "Mortal178",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 178,
            "docs": null
          },
          {
            "name": "Mortal179",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 179,
            "docs": null
          },
          {
            "name": "Mortal180",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 180,
            "docs": null
          },
          {
            "name": "Mortal181",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 181,
            "docs": null
          },
          {
            "name": "Mortal182",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 182,
            "docs": null
          },
          {
            "name": "Mortal183",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 183,
            "docs": null
          },
          {
            "name": "Mortal184",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 184,
            "docs": null
          },
          {
            "name": "Mortal185",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 185,
            "docs": null
          },
          {
            "name": "Mortal186",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 186,
            "docs": null
          },
          {
            "name": "Mortal187",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 187,
            "docs": null
          },
          {
            "name": "Mortal188",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 188,
            "docs": null
          },
          {
            "name": "Mortal189",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 189,
            "docs": null
          },
          {
            "name": "Mortal190",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 190,
            "docs": null
          },
          {
            "name": "Mortal191",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 191,
            "docs": null
          },
          {
            "name": "Mortal192",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 192,
            "docs": null
          },
          {
            "name": "Mortal193",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 193,
            "docs": null
          },
          {
            "name": "Mortal194",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 194,
            "docs": null
          },
          {
            "name": "Mortal195",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 195,
            "docs": null
          },
          {
            "name": "Mortal196",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 196,
            "docs": null
          },
          {
            "name": "Mortal197",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 197,
            "docs": null
          },
          {
            "name": "Mortal198",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 198,
            "docs": null
          },
          {
            "name": "Mortal199",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 199,
            "docs": null
          },
          {
            "name": "Mortal200",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 200,
            "docs": null
          },
          {
            "name": "Mortal201",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 201,
            "docs": null
          },
          {
            "name": "Mortal202",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 202,
            "docs": null
          },
          {
            "name": "Mortal203",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 203,
            "docs": null
          },
          {
            "name": "Mortal204",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 204,
            "docs": null
          },
          {
            "name": "Mortal205",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 205,
            "docs": null
          },
          {
            "name": "Mortal206",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 206,
            "docs": null
          },
          {
            "name": "Mortal207",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 207,
            "docs": null
          },
          {
            "name": "Mortal208",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 208,
            "docs": null
          },
          {
            "name": "Mortal209",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 209,
            "docs": null
          },
          {
            "name": "Mortal210",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 210,
            "docs": null
          },
          {
            "name": "Mortal211",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 211,
            "docs": null
          },
          {
            "name": "Mortal212",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 212,
            "docs": null
          },
          {
            "name": "Mortal213",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 213,
            "docs": null
          },
          {
            "name": "Mortal214",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 214,
            "docs": null
          },
          {
            "name": "Mortal215",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 215,
            "docs": null
          },
          {
            "name": "Mortal216",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 216,
            "docs": null
          },
          {
            "name": "Mortal217",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 217,
            "docs": null
          },
          {
            "name": "Mortal218",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 218,
            "docs": null
          },
          {
            "name": "Mortal219",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 219,
            "docs": null
          },
          {
            "name": "Mortal220",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 220,
            "docs": null
          },
          {
            "name": "Mortal221",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 221,
            "docs": null
          },
          {
            "name": "Mortal222",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 222,
            "docs": null
          },
          {
            "name": "Mortal223",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 223,
            "docs": null
          },
          {
            "name": "Mortal224",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 224,
            "docs": null
          },
          {
            "name": "Mortal225",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 225,
            "docs": null
          },
          {
            "name": "Mortal226",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 226,
            "docs": null
          },
          {
            "name": "Mortal227",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 227,
            "docs": null
          },
          {
            "name": "Mortal228",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 228,
            "docs": null
          },
          {
            "name": "Mortal229",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 229,
            "docs": null
          },
          {
            "name": "Mortal230",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 230,
            "docs": null
          },
          {
            "name": "Mortal231",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 231,
            "docs": null
          },
          {
            "name": "Mortal232",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 232,
            "docs": null
          },
          {
            "name": "Mortal233",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 233,
            "docs": null
          },
          {
            "name": "Mortal234",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 234,
            "docs": null
          },
          {
            "name": "Mortal235",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 235,
            "docs": null
          },
          {
            "name": "Mortal236",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 236,
            "docs": null
          },
          {
            "name": "Mortal237",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 237,
            "docs": null
          },
          {
            "name": "Mortal238",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 238,
            "docs": null
          },
          {
            "name": "Mortal239",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 239,
            "docs": null
          },
          {
            "name": "Mortal240",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 240,
            "docs": null
          },
          {
            "name": "Mortal241",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 241,
            "docs": null
          },
          {
            "name": "Mortal242",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 242,
            "docs": null
          },
          {
            "name": "Mortal243",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 243,
            "docs": null
          },
          {
            "name": "Mortal244",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 244,
            "docs": null
          },
          {
            "name": "Mortal245",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 245,
            "docs": null
          },
          {
            "name": "Mortal246",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 246,
            "docs": null
          },
          {
            "name": "Mortal247",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 247,
            "docs": null
          },
          {
            "name": "Mortal248",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 248,
            "docs": null
          },
          {
            "name": "Mortal249",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 249,
            "docs": null
          },
          {
            "name": "Mortal250",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 250,
            "docs": null
          },
          {
            "name": "Mortal251",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 251,
            "docs": null
          },
          {
            "name": "Mortal252",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 252,
            "docs": null
          },
          {
            "name": "Mortal253",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 253,
            "docs": null
          },
          {
            "name": "Mortal254",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 254,
            "docs": null
          },
          {
            "name": "Mortal255",
            "fields": [
              {
                "type": 2,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 255,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "41": {
    "path": [
      "sp_core",
      "sr25519",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 1,
            "typeName": "[u8; 32]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "410": {
    "path": [
      "frame_system",
      "extensions",
      "check_nonce",
      "CheckNonce"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 86,
            "typeName": "T::Index",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "411": {
    "path": [
      "frame_system",
      "extensions",
      "check_weight",
      "CheckWeight"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "412": {
    "path": [
      "pallet_transaction_payment",
      "ChargeTransactionPayment"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 90,
            "typeName": "BalanceOf\u003cT\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "413": {
    "path": [
      "rococo_runtime",
      "Runtime"
    ],
    "def": {
      "Composite": {
        "fields": null
      }
    },
    "docs": null
  },
  "42": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 43
      }
    },
    "docs": null
  },
  "43": {
    "path": null,
    "def": {
      "Tuple": [
        0,
        44
      ]
    },
    "docs": null
  },
  "44": {
    "path": null,
    "def": {},
    "docs": null
  },
  "45": {
    "path": [
      "polkadot_runtime_parachains",
      "inclusion",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "CandidateBacked",
            "fields": [
              {
                "type": 46,
                "typeName": "CandidateReceipt\u003cT::Hash\u003e",
                "docs": null
              },
              {
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              },
              {
                "type": 55,
                "typeName": "CoreIndex",
                "docs": null
              },
              {
                "type": 56,
                "typeName": "GroupIndex",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A candidate was backed. `[candidate, head_data]`"
            ]
          },
          {
            "name": "CandidateIncluded",
            "fields": [
              {
                "type": 46,
                "typeName": "CandidateReceipt\u003cT::Hash\u003e",
                "docs": null
              },
              {
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              },
              {
                "type": 55,
                "typeName": "CoreIndex",
                "docs": null
              },
              {
                "type": 56,
                "typeName": "GroupIndex",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A candidate was included. `[candidate, head_data]`"
            ]
          },
          {
            "name": "CandidateTimedOut",
            "fields": [
              {
                "type": 46,
                "typeName": "CandidateReceipt\u003cT::Hash\u003e",
                "docs": null
              },
              {
                "type": 54,
                "typeName": "HeadData",
                "docs": null
              },
              {
                "type": 55,
                "typeName": "CoreIndex",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A candidate timed out. `[candidate, head_data]`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "46": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CandidateReceipt"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "descriptor",
            "type": 47,
            "typeName": "CandidateDescriptor\u003cH\u003e",
            "docs": null
          },
          {
            "name": "commitments_hash",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "47": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CandidateDescriptor"
    ],
    "params": [
      {
        "name": "H",
        "type": 9
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "para_id",
            "type": 48,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "relay_parent",
            "type": 9,
            "typeName": "H",
            "docs": null
          },
          {
            "name": "collator",
            "type": 49,
            "typeName": "CollatorId",
            "docs": null
          },
          {
            "name": "persisted_validation_data_hash",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          },
          {
            "name": "pov_hash",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          },
          {
            "name": "erasure_root",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          },
          {
            "name": "signature",
            "type": 50,
            "typeName": "CollatorSignature",
            "docs": null
          },
          {
            "name": "para_head",
            "type": 9,
            "typeName": "Hash",
            "docs": null
          },
          {
            "name": "validation_code_hash",
            "type": 53,
            "typeName": "ValidationCodeHash",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "48": {
    "path": [
      "polkadot_parachain",
      "primitives",
      "Id"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "49": {
    "path": [
      "polkadot_primitives",
      "v0",
      "collator_app",
      "Public"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 41,
            "typeName": "sr25519::Public",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "5": {
    "path": [
      "pallet_balances",
      "AccountData"
    ],
    "params": [
      {
        "name": "Balance",
        "type": 6
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "free",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "reserved",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "misc_frozen",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          },
          {
            "name": "fee_frozen",
            "type": 6,
            "typeName": "Balance",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "50": {
    "path": [
      "polkadot_primitives",
      "v0",
      "collator_app",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 51,
            "typeName": "sr25519::Signature",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "51": {
    "path": [
      "sp_core",
      "sr25519",
      "Signature"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 52,
            "typeName": "[u8; 64]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "52": {
    "path": null,
    "def": {
      "Array": {
        "len": 64,
        "type": 2
      }
    },
    "docs": null
  },
  "53": {
    "path": [
      "polkadot_parachain",
      "primitives",
      "ValidationCodeHash"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 9,
            "typeName": "Hash",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "54": {
    "path": [
      "polkadot_parachain",
      "primitives",
      "HeadData"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 10,
            "typeName": "Vec\u003cu8\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "55": {
    "path": [
      "polkadot_primitives",
      "v1",
      "CoreIndex"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "56": {
    "path": [
      "polkadot_primitives",
      "v1",
      "GroupIndex"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 4,
            "typeName": "u32",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "57": {
    "path": [
      "polkadot_runtime_parachains",
      "paras",
      "pallet",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "CurrentCodeUpdated",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Current code has been updated for a Para. `para_id`"
            ]
          },
          {
            "name": "CurrentHeadUpdated",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Current head has been updated for a Para. `para_id`"
            ]
          },
          {
            "name": "CodeUpgradeScheduled",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A code upgrade has been scheduled for a Para. `para_id`"
            ]
          },
          {
            "name": "NewHeadNoted",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A new head has been noted for a Para. `para_id`"
            ]
          },
          {
            "name": "ActionQueued",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "SessionIndex",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "A para has been queued to execute pending actions. `para_id`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "58": {
    "path": [
      "polkadot_runtime_parachains",
      "ump",
      "pallet",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "InvalidFormat",
            "fields": [
              {
                "type": 1,
                "typeName": "MessageId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Upward message is invalid XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "name": "UnsupportedVersion",
            "fields": [
              {
                "type": 1,
                "typeName": "MessageId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Upward message is unsupported version of XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "name": "ExecutedUpward",
            "fields": [
              {
                "type": 1,
                "typeName": "MessageId",
                "docs": null
              },
              {
                "type": 59,
                "typeName": "Outcome",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Upward message executed with the given outcome.",
              "\\[ id, outcome \\]"
            ]
          },
          {
            "name": "WeightExhausted",
            "fields": [
              {
                "type": 1,
                "typeName": "MessageId",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "The weight limit for handling downward messages was reached.",
              "\\[ id, remaining, required \\]"
            ]
          },
          {
            "name": "UpwardMessagesReceived",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Some downward messages have been received and will be processed.",
              "\\[ para, count, size \\]"
            ]
          },
          {
            "name": "OverweightEnqueued",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 1,
                "typeName": "MessageId",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "OverweightIndex",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "The weight budget was exceeded for an individual downward message.",
              "",
              "This message can be later dispatched manually using `service_overweight` dispatchable",
              "using the assigned `overweight_index`.",
              "",
              "\\[ para, id, overweight_index, required \\]"
            ]
          },
          {
            "name": "OverweightServiced",
            "fields": [
              {
                "type": 8,
                "typeName": "OverweightIndex",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Downward message from the overweight queue was executed with the given actual weight",
              "used.",
              "",
              "\\[ overweight_index, used \\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "59": {
    "path": [
      "xcm",
      "v2",
      "traits",
      "Outcome"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Complete",
            "fields": [
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Incomplete",
            "fields": [
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              },
              {
                "type": 60,
                "typeName": "Error",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Error",
            "fields": [
              {
                "type": 60,
                "typeName": "Error",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "6": {
    "path": null,
    "def": {
      "Primitive": "U128"
    },
    "docs": null
  },
  "60": {
    "path": [
      "xcm",
      "v2",
      "traits",
      "Error"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Undefined",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Overflow",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Unimplemented",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "UnhandledXcmVersion",
            "fields": null,
            "index": 3,
            "docs": null
          },
          {
            "name": "UnhandledXcmMessage",
            "fields": null,
            "index": 4,
            "docs": null
          },
          {
            "name": "UnhandledEffect",
            "fields": null,
            "index": 5,
            "docs": null
          },
          {
            "name": "EscalationOfPrivilege",
            "fields": null,
            "index": 6,
            "docs": null
          },
          {
            "name": "UntrustedReserveLocation",
            "fields": null,
            "index": 7,
            "docs": null
          },
          {
            "name": "UntrustedTeleportLocation",
            "fields": null,
            "index": 8,
            "docs": null
          },
          {
            "name": "DestinationBufferOverflow",
            "fields": null,
            "index": 9,
            "docs": null
          },
          {
            "name": "MultiLocationFull",
            "fields": null,
            "index": 10,
            "docs": null
          },
          {
            "name": "MultiLocationNotInvertible",
            "fields": null,
            "index": 11,
            "docs": null
          },
          {
            "name": "FailedToDecode",
            "fields": null,
            "index": 12,
            "docs": null
          },
          {
            "name": "BadOrigin",
            "fields": null,
            "index": 13,
            "docs": null
          },
          {
            "name": "ExceedsMaxMessageSize",
            "fields": null,
            "index": 14,
            "docs": null
          },
          {
            "name": "FailedToTransactAsset",
            "fields": null,
            "index": 15,
            "docs": null
          },
          {
            "name": "WeightLimitReached",
            "fields": [
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "Wildcard",
            "fields": null,
            "index": 17,
            "docs": null
          },
          {
            "name": "TooMuchWeightRequired",
            "fields": null,
            "index": 18,
            "docs": null
          },
          {
            "name": "NotHoldingFees",
            "fields": null,
            "index": 19,
            "docs": null
          },
          {
            "name": "WeightNotComputable",
            "fields": null,
            "index": 20,
            "docs": null
          },
          {
            "name": "Barrier",
            "fields": null,
            "index": 21,
            "docs": null
          },
          {
            "name": "NotWithdrawable",
            "fields": null,
            "index": 22,
            "docs": null
          },
          {
            "name": "LocationCannotHold",
            "fields": null,
            "index": 23,
            "docs": null
          },
          {
            "name": "TooExpensive",
            "fields": null,
            "index": 24,
            "docs": null
          },
          {
            "name": "AssetNotFound",
            "fields": null,
            "index": 25,
            "docs": null
          },
          {
            "name": "DestinationUnsupported",
            "fields": null,
            "index": 26,
            "docs": null
          },
          {
            "name": "RecursionLimitReached",
            "fields": null,
            "index": 27,
            "docs": null
          },
          {
            "name": "Transport",
            "fields": null,
            "index": 28,
            "docs": null
          },
          {
            "name": "Unroutable",
            "fields": null,
            "index": 29,
            "docs": null
          },
          {
            "name": "UnknownWeightRequired",
            "fields": null,
            "index": 30,
            "docs": null
          },
          {
            "name": "Trap",
            "fields": [
              {
                "type": 8,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 31,
            "docs": null
          },
          {
            "name": "UnknownClaim",
            "fields": null,
            "index": 32,
            "docs": null
          },
          {
            "name": "InvalidLocation",
            "fields": null,
            "index": 33,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "61": {
    "path": [
      "polkadot_runtime_parachains",
      "hrmp",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "OpenChannelRequested",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Open HRMP channel requested.",
              "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
            ]
          },
          {
            "name": "OpenChannelCanceled",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 62,
                "typeName": "HrmpChannelId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "An HRMP channel request sent by the receiver was canceled by either party.",
              "`[by_parachain, channel_id]`"
            ]
          },
          {
            "name": "OpenChannelAccepted",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Open HRMP channel accepted. `[sender, recipient]`"
            ]
          },
          {
            "name": "ChannelClosed",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 62,
                "typeName": "HrmpChannelId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "HRMP channel closed. `[by_parachain, channel_id]`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "62": {
    "path": [
      "polkadot_parachain",
      "primitives",
      "HrmpChannelId"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "sender",
            "type": 48,
            "typeName": "Id",
            "docs": null
          },
          {
            "name": "recipient",
            "type": 48,
            "typeName": "Id",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "63": {
    "path": [
      "polkadot_runtime_parachains",
      "disputes",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "DisputeInitiated",
            "fields": [
              {
                "type": 64,
                "typeName": "CandidateHash",
                "docs": null
              },
              {
                "type": 65,
                "typeName": "DisputeLocation",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A dispute has been initiated. \\[candidate hash, dispute location\\]"
            ]
          },
          {
            "name": "DisputeConcluded",
            "fields": [
              {
                "type": 64,
                "typeName": "CandidateHash",
                "docs": null
              },
              {
                "type": 66,
                "typeName": "DisputeResult",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A dispute has concluded for or against a candidate.",
              "`\\[para id, candidate hash, dispute result\\]`"
            ]
          },
          {
            "name": "DisputeTimedOut",
            "fields": [
              {
                "type": 64,
                "typeName": "CandidateHash",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A dispute has timed out due to insufficient participation.",
              "`\\[para id, candidate hash\\]`"
            ]
          },
          {
            "name": "Revert",
            "fields": [
              {
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A dispute has concluded with supermajority against a candidate.",
              "Block authors should no longer build on top of this head and should",
              "instead revert to the block at the given height which is the last",
              "known valid block in this chain."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "64": {
    "path": [
      "polkadot_core_primitives",
      "CandidateHash"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 9,
            "typeName": "Hash",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "65": {
    "path": [
      "polkadot_runtime_parachains",
      "disputes",
      "DisputeLocation"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Local",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Remote",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "66": {
    "path": [
      "polkadot_runtime_parachains",
      "disputes",
      "DisputeResult"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Valid",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Invalid",
            "fields": null,
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "67": {
    "path": [
      "polkadot_runtime_common",
      "paras_registrar",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Registered",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Deregistered",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Reserved",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "68": {
    "path": [
      "polkadot_runtime_common",
      "auctions",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "AuctionStarted",
            "fields": [
              {
                "type": 4,
                "typeName": "AuctionIndex",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "An auction started. Provides its index and the block number where it will begin to",
              "close and the first lease period of the quadruplet that is auctioned.",
              "`[auction_index, lease_period, ending]`"
            ]
          },
          {
            "name": "AuctionClosed",
            "fields": [
              {
                "type": 4,
                "typeName": "AuctionIndex",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "An auction ended. All funds become unreserved. `[auction_index]`"
            ]
          },
          {
            "name": "Reserved",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
              "Second is the total. `[bidder, extra_reserved, total_amount]`"
            ]
          },
          {
            "name": "Unreserved",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Funds were unreserved since bidder is no longer active. `[bidder, amount]`"
            ]
          },
          {
            "name": "ReserveConfiscated",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve",
              "but no parachain slot has been leased.",
              "`[parachain_id, leaser, amount]`"
            ]
          },
          {
            "name": "BidAccepted",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "A new bid has been accepted as the current winner.",
              "`[who, para_id, amount, first_slot, last_slot]`"
            ]
          },
          {
            "name": "WinningOffset",
            "fields": [
              {
                "type": 4,
                "typeName": "AuctionIndex",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "The winning offset was chosen for an auction. This will map into the `Winning` storage map.",
              "`[auction_index, block_number]`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "69": {
    "path": [
      "polkadot_runtime_common",
      "crowdloan",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Created",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Create a new crowdloaning campaign. `[fund_index]`"
            ]
          },
          {
            "name": "Contributed",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Contributed to a crowd sale. `[who, fund_index, amount]`"
            ]
          },
          {
            "name": "Withdrew",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Withdrew full balance of a contributor. `[who, fund_index, amount]`"
            ]
          },
          {
            "name": "PartiallyRefunded",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "The loans in a fund have been partially dissolved, i.e. there are some left",
              "over child keys that still need to be killed. `[fund_index]`"
            ]
          },
          {
            "name": "AllRefunded",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "All loans in a fund have been refunded. `[fund_index]`"
            ]
          },
          {
            "name": "Dissolved",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Fund is dissolved. `[fund_index]`"
            ]
          },
          {
            "name": "HandleBidResult",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "The result of trying to submit a new bid to the Slots pallet."
            ]
          },
          {
            "name": "Edited",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "The configuration to a crowdloan has been edited. `[fund_index]`"
            ]
          },
          {
            "name": "MemoUpdated",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 8,
            "docs": [
              "A memo has been updated. `[who, fund_index, memo]`"
            ]
          },
          {
            "name": "AddedToNewRaise",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              }
            ],
            "index": 9,
            "docs": [
              "A parachain has been moved to `NewRaise`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "7": {
    "path": [
      "frame_support",
      "weights",
      "PerDispatchClass"
    ],
    "params": [
      {
        "name": "T",
        "type": 8
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "normal",
            "type": 8,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "operational",
            "type": 8,
            "typeName": "T",
            "docs": null
          },
          {
            "name": "mandatory",
            "type": 8,
            "typeName": "T",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "70": {
    "path": [
      "Result"
    ],
    "params": [
      {
        "name": "T",
        "type": 44
      },
      {
        "name": "E",
        "type": 25
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Ok",
            "fields": [
              {
                "type": 44,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Err",
            "fields": [
              {
                "type": 25,
                "typeName": "",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "71": {
    "path": [
      "polkadot_runtime_common",
      "slots",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "NewLeasePeriod",
            "fields": [
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A new `[lease_period]` is beginning."
            ]
          },
          {
            "name": "Leased",
            "fields": [
              {
                "type": 48,
                "typeName": "ParaId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "LeasePeriodOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              },
              {
                "type": 6,
                "typeName": "BalanceOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A para has won the right to a continuous set of lease periods as a parachain.",
              "First balance is any extra amount reserved on top of the para's existing deposit.",
              "Second balance is the total amount reserved.",
              "`[parachain_id, leaser, period_begin, period_count, extra_reserved, total_amount]`"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "72": {
    "path": [
      "pallet_sudo",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Sudid",
            "fields": [
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A sudo just took place. \\[result\\]"
            ]
          },
          {
            "name": "KeyChanged",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "The \\[sudoer\\] just switched identity; the old key is supplied."
            ]
          },
          {
            "name": "SudoAsDone",
            "fields": [
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A sudo just took place. \\[result\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "73": {
    "path": [
      "rococo_runtime",
      "validator_manager",
      "RawEvent"
    ],
    "params": [
      {
        "name": "ValidatorId"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ValidatorsRegistered",
            "fields": [
              {
                "type": 74,
                "typeName": "Vec\u003cValidatorId\u003e",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "New validators were added to the set."
            ]
          },
          {
            "name": "ValidatorsDeregistered",
            "fields": [
              {
                "type": 74,
                "typeName": "Vec\u003cValidatorId\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Validators were removed from the set."
            ]
          }
        ]
      }
    },
    "docs": [
      "Events for this module.",
      ""
    ]
  },
  "74": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 0
      }
    },
    "docs": null
  },
  "75": {
    "path": [
      "pallet_collective",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Proposed",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "ProposalIndex",
                "docs": null
              },
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`).",
              "\\[account, proposal_index, proposal_hash, threshold\\]"
            ]
          },
          {
            "name": "Voted",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "type": 76,
                "typeName": "bool",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`).",
              "\\[account, proposal_hash, voted, yes, no\\]"
            ]
          },
          {
            "name": "Approved",
            "fields": [
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "A motion was approved by the required threshold.",
              "\\[proposal_hash\\]"
            ]
          },
          {
            "name": "Disapproved",
            "fields": [
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A motion was not approved by the required threshold.",
              "\\[proposal_hash\\]"
            ]
          },
          {
            "name": "Executed",
            "fields": [
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "A motion was executed; result will be `Ok` if it returned without error.",
              "\\[proposal_hash, result\\]"
            ]
          },
          {
            "name": "MemberExecuted",
            "fields": [
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "A single member did some action; result will be `Ok` if it returned without error.",
              "\\[proposal_hash, result\\]"
            ]
          },
          {
            "name": "Closed",
            "fields": [
              {
                "type": 9,
                "typeName": "T::Hash",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "MemberCount",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "A proposal was closed because its threshold was reached or after its duration was up.",
              "\\[proposal_hash, yes, no\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "76": {
    "path": null,
    "def": {
      "Primitive": "Bool"
    },
    "docs": null
  },
  "77": {
    "path": [
      "pallet_membership",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      },
      {
        "name": "I"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "MemberAdded",
            "fields": null,
            "index": 0,
            "docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "name": "MemberRemoved",
            "fields": null,
            "index": 1,
            "docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "name": "MembersSwapped",
            "fields": null,
            "index": 2,
            "docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "name": "MembersReset",
            "fields": null,
            "index": 3,
            "docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "name": "KeyChanged",
            "fields": null,
            "index": 4,
            "docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "name": "Dummy",
            "fields": null,
            "index": 5,
            "docs": [
              "Phantom member, never used."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "78": {
    "path": [
      "pallet_utility",
      "pallet",
      "Event"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "BatchInterrupted",
            "fields": [
              {
                "type": 4,
                "typeName": "u32",
                "docs": null
              },
              {
                "type": 25,
                "typeName": "DispatchError",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
              "well as the error. \\[index, error\\]"
            ]
          },
          {
            "name": "BatchCompleted",
            "fields": null,
            "index": 1,
            "docs": [
              "Batch of dispatches completed fully with no error."
            ]
          },
          {
            "name": "ItemCompleted",
            "fields": null,
            "index": 2,
            "docs": [
              "A single item within a Batch of dispatches has completed with no error."
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "79": {
    "path": [
      "pallet_proxy",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "ProxyExecuted",
            "fields": [
              {
                "type": 70,
                "typeName": "DispatchResult",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "A proxy was executed correctly, with the given \\[result\\]."
            ]
          },
          {
            "name": "AnonymousCreated",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "type": 81,
                "typeName": "u16",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "Anonymous account has been created by new proxy with given",
              "disambiguation index and proxy type. \\[anonymous, who, proxy_type,",
              "disambiguation_index\\]"
            ]
          },
          {
            "name": "Announced",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 9,
                "typeName": "CallHashOf\u003cT\u003e",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "An announcement was placed to make a call in the future. \\[real, proxy, call_hash\\]"
            ]
          },
          {
            "name": "ProxyAdded",
            "fields": [
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 0,
                "typeName": "T::AccountId",
                "docs": null
              },
              {
                "type": 80,
                "typeName": "T::ProxyType",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "T::BlockNumber",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "A proxy was added. \\[delegator, delegatee, proxy_type, delay\\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "8": {
    "path": null,
    "def": {
      "Primitive": "U64"
    },
    "docs": null
  },
  "80": {
    "path": [
      "rococo_runtime",
      "ProxyType"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Any",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "CancelProxy",
            "fields": null,
            "index": 1,
            "docs": null
          },
          {
            "name": "Auction",
            "fields": null,
            "index": 2,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "81": {
    "path": null,
    "def": {
      "Primitive": "U16"
    },
    "docs": null
  },
  "82": {
    "path": [
      "pallet_xcm",
      "pallet",
      "Event"
    ],
    "params": [
      {
        "name": "T"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Attempted",
            "fields": [
              {
                "type": 59,
                "typeName": "xcm::latest::Outcome",
                "docs": null
              }
            ],
            "index": 0,
            "docs": [
              "Execution of an XCM message was attempted.",
              "",
              "\\[ outcome \\]"
            ]
          },
          {
            "name": "Sent",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": [
              "A XCM message was sent.",
              "",
              "\\[ origin, destination, message \\]"
            ]
          },
          {
            "name": "UnexpectedResponse",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              }
            ],
            "index": 2,
            "docs": [
              "Query response received which does not match a registered query. This may be because a",
              "matching query was never registered, it may be because it is a duplicate response, or",
              "because the query timed out.",
              "",
              "\\[ origin location, id \\]"
            ]
          },
          {
            "name": "ResponseReady",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 103,
                "typeName": "Response",
                "docs": null
              }
            ],
            "index": 3,
            "docs": [
              "Query response has been received and is ready for taking with `take_response`. There is",
              "no registered notification call.",
              "",
              "\\[ id, response \\]"
            ]
          },
          {
            "name": "Notified",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 4,
            "docs": [
              "Query response has been received and query is removed. The registered notification has",
              "been dispatched and executed successfully.",
              "",
              "\\[ id, pallet index, call index \\]"
            ]
          },
          {
            "name": "NotifyOverweight",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "Weight",
                "docs": null
              }
            ],
            "index": 5,
            "docs": [
              "Query response has been received and query is removed. The registered notification could",
              "not be dispatched because the dispatch weight is greater than the maximum weight",
              "originally budgeted by this runtime for the query result.",
              "",
              "\\[ id, pallet index, call index, actual weight, max budgeted weight \\]"
            ]
          },
          {
            "name": "NotifyDispatchError",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 6,
            "docs": [
              "Query response has been received and query is removed. There was a general error with",
              "dispatching the notification call.",
              "",
              "\\[ id, pallet index, call index \\]"
            ]
          },
          {
            "name": "NotifyDecodeFailed",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              },
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 7,
            "docs": [
              "Query response has been received and query is removed. The dispatch was unable to be",
              "decoded into a `Call`; this might be due to dispatch function having a signature which",
              "is not `(origin, QueryId, Response)`.",
              "",
              "\\[ id, pallet index, call index \\]"
            ]
          },
          {
            "name": "InvalidResponder",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 112,
                "typeName": "Option\u003cMultiLocation\u003e",
                "docs": null
              }
            ],
            "index": 8,
            "docs": [
              "Expected query response has been received but the origin location of the response does",
              "not match that expected. The query remains registered for a later, valid, response to",
              "be received and acted upon.",
              "",
              "\\[ origin location, id, expected location \\]"
            ]
          },
          {
            "name": "InvalidResponderVersion",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              }
            ],
            "index": 9,
            "docs": [
              "Expected query response has been received but the expected origin location placed in",
              "storate by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed.",
              "",
              "\\[ origin location, id \\]"
            ]
          },
          {
            "name": "ResponseTaken",
            "fields": [
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              }
            ],
            "index": 10,
            "docs": [
              "Received query response has been read and removed.",
              "",
              "\\[ id \\]"
            ]
          },
          {
            "name": "AssetsTrapped",
            "fields": [
              {
                "type": 9,
                "typeName": "H256",
                "docs": null
              },
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 113,
                "typeName": "VersionedMultiAssets",
                "docs": null
              }
            ],
            "index": 11,
            "docs": [
              "Some assets have been placed in an asset trap.",
              "",
              "\\[ hash, origin, assets \\]"
            ]
          },
          {
            "name": "VersionChangeNotified",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "XcmVersion",
                "docs": null
              }
            ],
            "index": 12,
            "docs": [
              "An XCM version change notification message has been attempted to be sent.",
              "",
              "\\[ destination, result \\]"
            ]
          },
          {
            "name": "SupportedVersionChanged",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 4,
                "typeName": "XcmVersion",
                "docs": null
              }
            ],
            "index": 13,
            "docs": [
              "The supported version of a location has been changed. This might be through an",
              "automatic notification or a manual intervention.",
              "",
              "\\[ location, XCM version \\]"
            ]
          },
          {
            "name": "NotifyTargetSendFail",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "type": 60,
                "typeName": "XcmError",
                "docs": null
              }
            ],
            "index": 14,
            "docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "sending the notification to it.",
              "",
              "\\[ location, query ID, error \\]"
            ]
          },
          {
            "name": "NotifyTargetMigrationFail",
            "fields": [
              {
                "type": 118,
                "typeName": "VersionedMultiLocation",
                "docs": null
              },
              {
                "type": 8,
                "typeName": "QueryId",
                "docs": null
              }
            ],
            "index": 15,
            "docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "migrating the location to our new XCM format.",
              "",
              "\\[ location, query ID \\]"
            ]
          }
        ]
      }
    },
    "docs": [
      "\n\t\t\tThe [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
    ]
  },
  "83": {
    "path": [
      "xcm",
      "v1",
      "multilocation",
      "MultiLocation"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "parents",
            "type": 2,
            "typeName": "u8",
            "docs": null
          },
          {
            "name": "interior",
            "type": 84,
            "typeName": "Junctions",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "84": {
    "path": [
      "xcm",
      "v1",
      "multilocation",
      "Junctions"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Here",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "X1",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "X2",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "X3",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "X4",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "X5",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "X6",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "X7",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "X8",
            "fields": [
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              },
              {
                "type": 85,
                "typeName": "Junction",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "85": {
    "path": [
      "xcm",
      "v1",
      "junction",
      "Junction"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Parachain",
            "fields": [
              {
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "AccountId32",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "id",
                "type": 1,
                "typeName": "[u8; 32]",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "AccountIndex64",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "index",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "AccountKey20",
            "fields": [
              {
                "name": "network",
                "type": 87,
                "typeName": "NetworkId",
                "docs": null
              },
              {
                "name": "key",
                "type": 89,
                "typeName": "[u8; 20]",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "PalletInstance",
            "fields": [
              {
                "type": 2,
                "typeName": "u8",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "GeneralIndex",
            "fields": [
              {
                "type": 90,
                "typeName": "u128",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "GeneralKey",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "OnlyChild",
            "fields": null,
            "index": 7,
            "docs": null
          },
          {
            "name": "Plurality",
            "fields": [
              {
                "name": "id",
                "type": 91,
                "typeName": "BodyId",
                "docs": null
              },
              {
                "name": "part",
                "type": 92,
                "typeName": "BodyPart",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "86": {
    "path": null,
    "def": {
      "Compact": {
        "type": 4
      }
    },
    "docs": null
  },
  "87": {
    "path": [
      "xcm",
      "v0",
      "junction",
      "NetworkId"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Any",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Named",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Polkadot",
            "fields": null,
            "index": 2,
            "docs": null
          },
          {
            "name": "Kusama",
            "fields": null,
            "index": 3,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "88": {
    "path": null,
    "def": {
      "Compact": {
        "type": 8
      }
    },
    "docs": null
  },
  "89": {
    "path": null,
    "def": {
      "Array": {
        "len": 20,
        "type": 2
      }
    },
    "docs": null
  },
  "9": {
    "path": [
      "primitive_types",
      "H256"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 1,
            "typeName": "[u8; 32]",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "90": {
    "path": null,
    "def": {
      "Compact": {
        "type": 6
      }
    },
    "docs": null
  },
  "91": {
    "path": [
      "xcm",
      "v0",
      "junction",
      "BodyId"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Unit",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Named",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Index",
            "fields": [
              {
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "Executive",
            "fields": null,
            "index": 3,
            "docs": null
          },
          {
            "name": "Technical",
            "fields": null,
            "index": 4,
            "docs": null
          },
          {
            "name": "Legislative",
            "fields": null,
            "index": 5,
            "docs": null
          },
          {
            "name": "Judicial",
            "fields": null,
            "index": 6,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "92": {
    "path": [
      "xcm",
      "v0",
      "junction",
      "BodyPart"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Voice",
            "fields": null,
            "index": 0,
            "docs": null
          },
          {
            "name": "Members",
            "fields": [
              {
                "name": "count",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "Fraction",
            "fields": [
              {
                "name": "nom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "denom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "AtLeastProportion",
            "fields": [
              {
                "name": "nom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "denom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "MoreThanProportion",
            "fields": [
              {
                "name": "nom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "denom",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "93": {
    "path": [
      "xcm",
      "v2",
      "Xcm"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 94,
            "typeName": "Vec\u003cInstruction\u003cCall\u003e\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "94": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 95
      }
    },
    "docs": null
  },
  "95": {
    "path": [
      "xcm",
      "v2",
      "Instruction"
    ],
    "params": [
      {
        "name": "Call"
      }
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "WithdrawAsset",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "ReserveAssetDeposited",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          },
          {
            "name": "ReceiveTeleportedAsset",
            "fields": [
              {
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 2,
            "docs": null
          },
          {
            "name": "QueryResponse",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "response",
                "type": 103,
                "typeName": "Response",
                "docs": null
              },
              {
                "name": "max_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 3,
            "docs": null
          },
          {
            "name": "TransferAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 4,
            "docs": null
          },
          {
            "name": "TransferReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 5,
            "docs": null
          },
          {
            "name": "Transact",
            "fields": [
              {
                "name": "origin_type",
                "type": 106,
                "typeName": "OriginKind",
                "docs": null
              },
              {
                "name": "require_weight_at_most",
                "type": 88,
                "typeName": "u64",
                "docs": null
              },
              {
                "name": "call",
                "type": 107,
                "typeName": "DoubleEncoded\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 6,
            "docs": null
          },
          {
            "name": "HrmpNewChannelOpenRequest",
            "fields": [
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_message_size",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "max_capacity",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 7,
            "docs": null
          },
          {
            "name": "HrmpChannelAccepted",
            "fields": [
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 8,
            "docs": null
          },
          {
            "name": "HrmpChannelClosing",
            "fields": [
              {
                "name": "initiator",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "sender",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "recipient",
                "type": 86,
                "typeName": "u32",
                "docs": null
              }
            ],
            "index": 9,
            "docs": null
          },
          {
            "name": "ClearOrigin",
            "fields": null,
            "index": 10,
            "docs": null
          },
          {
            "name": "DescendOrigin",
            "fields": [
              {
                "type": 84,
                "typeName": "InteriorMultiLocation",
                "docs": null
              }
            ],
            "index": 11,
            "docs": null
          },
          {
            "name": "ReportError",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 12,
            "docs": null
          },
          {
            "name": "DepositAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "beneficiary",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 13,
            "docs": null
          },
          {
            "name": "DepositReserveAsset",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_assets",
                "type": 86,
                "typeName": "u32",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 14,
            "docs": null
          },
          {
            "name": "ExchangeAsset",
            "fields": [
              {
                "name": "give",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "receive",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              }
            ],
            "index": 15,
            "docs": null
          },
          {
            "name": "InitiateReserveWithdraw",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "reserve",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 16,
            "docs": null
          },
          {
            "name": "InitiateTeleport",
            "fields": [
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "xcm",
                "type": 93,
                "typeName": "Xcm\u003c()\u003e",
                "docs": null
              }
            ],
            "index": 17,
            "docs": null
          },
          {
            "name": "QueryHolding",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "dest",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              },
              {
                "name": "assets",
                "type": 108,
                "typeName": "MultiAssetFilter",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 18,
            "docs": null
          },
          {
            "name": "BuyExecution",
            "fields": [
              {
                "name": "fees",
                "type": 98,
                "typeName": "MultiAsset",
                "docs": null
              },
              {
                "name": "weight_limit",
                "type": 111,
                "typeName": "WeightLimit",
                "docs": null
              }
            ],
            "index": 19,
            "docs": null
          },
          {
            "name": "RefundSurplus",
            "fields": null,
            "index": 20,
            "docs": null
          },
          {
            "name": "SetErrorHandler",
            "fields": [
              {
                "type": 93,
                "typeName": "Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 21,
            "docs": null
          },
          {
            "name": "SetAppendix",
            "fields": [
              {
                "type": 93,
                "typeName": "Xcm\u003cCall\u003e",
                "docs": null
              }
            ],
            "index": 22,
            "docs": null
          },
          {
            "name": "ClearError",
            "fields": null,
            "index": 23,
            "docs": null
          },
          {
            "name": "ClaimAsset",
            "fields": [
              {
                "name": "assets",
                "type": 96,
                "typeName": "MultiAssets",
                "docs": null
              },
              {
                "name": "ticket",
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 24,
            "docs": null
          },
          {
            "name": "Trap",
            "fields": [
              {
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 25,
            "docs": null
          },
          {
            "name": "SubscribeVersion",
            "fields": [
              {
                "name": "query_id",
                "type": 88,
                "typeName": "QueryId",
                "docs": null
              },
              {
                "name": "max_response_weight",
                "type": 88,
                "typeName": "u64",
                "docs": null
              }
            ],
            "index": 26,
            "docs": null
          },
          {
            "name": "UnsubscribeVersion",
            "fields": null,
            "index": 27,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "96": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "MultiAssets"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "type": 97,
            "typeName": "Vec\u003cMultiAsset\u003e",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "97": {
    "path": null,
    "def": {
      "Sequence": {
        "type": 98
      }
    },
    "docs": null
  },
  "98": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "MultiAsset"
    ],
    "def": {
      "Composite": {
        "fields": [
          {
            "name": "id",
            "type": 99,
            "typeName": "AssetId",
            "docs": null
          },
          {
            "name": "fun",
            "type": 100,
            "typeName": "Fungibility",
            "docs": null
          }
        ]
      }
    },
    "docs": null
  },
  "99": {
    "path": [
      "xcm",
      "v1",
      "multiasset",
      "AssetId"
    ],
    "def": {
      "Variant": {
        "variants": [
          {
            "name": "Concrete",
            "fields": [
              {
                "type": 83,
                "typeName": "MultiLocation",
                "docs": null
              }
            ],
            "index": 0,
            "docs": null
          },
          {
            "name": "Abstract",
            "fields": [
              {
                "type": 10,
                "typeName": "Vec\u003cu8\u003e",
                "docs": null
              }
            ],
            "index": 1,
            "docs": null
          }
        ]
      }
    },
    "docs": null
  }
}